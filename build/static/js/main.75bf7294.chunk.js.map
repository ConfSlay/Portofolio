{"version":3,"sources":["image/delete.png","image/thunderParticle.png","image/404.png","App.js","components/Home.js","components/particles/ContactParticles.js","components/Contact.js","services/project.service.js","components/Project/GetAllProject.js","components/Project/GetOneProject.js","components/Form/TextInput.js","components/Form/FileInput.js","components/Project/FormProject.js","components/Project/CreateProject.js","components/Project/UpdateProject.js","components/NotFound.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","useEffect","document","querySelector","addEventListener","classList","toggle","contains","react_default","a","createElement","Fragment","id","className","react_router_dom","to","src","logo","Home","App_App","ContactParticles","customInit","useCallback","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","engine","wrap","_context","prev","next","loadFull","stop","_x","apply","this","arguments","options","require","react_tsparticles_default","init","Contact","type","placeholder","value","http","axios","create","baseURL","headers","Content-type","project_service","get","concat","data","post","put","delete","GetAllProject","_this","_useState","useState","_useState2","slicedToArray","projects","setProjects","navigate","useNavigate","retrieveProjects","ProjectDataService","getAll","then","response","console","log","catch","e","deleteProject","filter","project_id","redirectToUpdate","map","project","key","onClick","bind","project_name","project_technologies","getUploadsFiles","project_thumbnail_filename","GetOneProject","redirect","notFound","setNotFound","_useState3","_useState4","loaded","setLoaded","_useState5","project_description","project_images","project_is_file_format","project_release_filename","project_release_url","_useState6","setProject","_useState7","_useState8","setRedirect","useParams","getProject","image","project_image_filename","project_image_id","href","download","target","TextInput","isValid","labelName","multiline","fieldName","fieldValue","onChange","onChangeEvent","name","small","validationMessage","FileInput","isRemovable","isMultiFile","multiple","deleteLogo","onResetEvent","FormProject","removeThumbnailPossibility","removeImagesPossibility","removeReleaseFilePossibility","onChangeProject_name","nameValidation","message","onChangeProject_technologies","technologiesValidation","onChangeProject_description","descriptionValidation","onChangeProject_thumbnail_filename","thumbnailValidation","onResetProject_thumbnail_filename","onChangeProject_images","imagesValidation","onResetProject_images","onChangeProject_is_file_format","onChangeProject_release_filename","releaseFileValidation","onResetProject_release_filename","onChangeProject_release_url","releaseUrlValidation","mode","saveProject","CreateProject","project_is_created","setNameValidation","setTechnologiesValidation","setDescriptionValidation","_useState9","_useState10","setThumbnailValidation","_useState11","_useState12","setImagesValidation","_useState13","_useState14","setReleaseFileValidation","_useState15","_useState16","setReleaseUrlValidation","prevState","objectSpread","files","result","FormData","append","i","length","status","errors","forEach","error","param","msg","UpdateProject","project_is_updated","dataFound","setRemoveButtons","setDataFound","setRemoveThumbnailPossibility","setRemoveImagesPossibility","setRemoveReleaseFilePossibility","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","undefined","project_images_updated","update","ReactDOM","createRoot","getElementById","render","react_router","exact","path","element","NotFound_Home"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,ypCCMzB,SAASC,EAAIC,GAwBxB,OAtBAC,oBAAU,WACNC,SAASC,cAAc,gBAAgBC,iBAAiB,QAAS,WAE7DF,SAASC,cAAc,WAAWE,UAAUC,OAAO,KACnDJ,SAASC,cAAc,WAAWE,UAAUC,OAAO,KACnDJ,SAASC,cAAc,WAAWE,UAAUC,OAAO,KAG/CJ,SAASC,cAAc,kBAAkBE,UAAUE,SAAS,cACzDL,SAASC,cAAc,kBAAkBE,UAAUE,SAAS,iBAE/DL,SAASC,cAAc,kBAAkBE,UAAUC,OAAO,gBAC1DJ,SAASC,cAAc,kBAAkBE,UAAUC,OAAO,cAI1DJ,SAASC,cAAc,kBAAkBE,UAAUC,OAAO,gBAGpE,IAIAE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,OAAKE,GAAG,iBADV,IAEEJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACXL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMD,UAAU,UAAUE,GAAG,KACzBP,EAAAC,EAAAC,cAAA,OAAKG,UAAU,0BAA0BG,IAAKC,MAC9CT,EAAAC,EAAAC,cAAA,QAAMG,UAAU,2BACZL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBAAf,kBACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,0BAAf,kBACAL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBAAf,oBAKRL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,WACfL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YAGnBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACXL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMD,UAAU,mBAAmBE,GAAG,aAAtC,WACAP,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMD,UAAU,mBAAmBE,GAAG,YAAtC,YAIJP,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACXL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMD,UAAU,oBAAoBE,GAAG,YAAvC,WACAP,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMD,UAAU,eAAeE,GAAG,aAAlC,cCvDD,SAASG,EAAKlB,GAC3B,OACEQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACS,EAAD,2DCAS,SAASC,EAAiBpB,GAEvC,IAAMqB,EAAaC,sBAAW,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAjB,EAAAkB,KAAC,SAAAC,EAAOC,GAAP,OAAAH,EAAAjB,EAAAqB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEvBC,YAASL,GAFc,wBAAAE,EAAAI,SAAAP,MAAD,gBAAAQ,GAAA,OAAAb,EAAAc,MAAAC,KAAAC,YAAA,IAKxBC,EAAUC,EAAQ,IAExB,OAAOjC,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,CAAW+B,QAASA,EAASG,KAAMtB,ICX7B,SAASuB,EAAQ5C,GAC9B,OACEQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACU,EAAD,MACAZ,EAAAC,EAAAC,cAACS,EAAD,MACAX,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YAEbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAf,SACAL,EAAAC,EAAAC,cAAA,SAAOmC,KAAK,OAAOhC,UAAU,wBAAwBiC,YAAY,sBAGnEtC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAf,WACAL,EAAAC,EAAAC,cAAA,YAAUG,UAAU,gBAAgBiC,YAAY,sBAGlDtC,EAAAC,EAAAC,cAAA,SAAOmC,KAAK,SAAShC,UAAU,wBAAwBkC,MAAM,8CCrBjEC,SAAOC,EAAMC,OAAO,CACxBC,QAAS,4BACTC,QAAS,CAACC,eAAgB,yBA0BbC,EAAA,qGAhBX,OAAON,EAAKO,IAAI,yCAEd3C,GACF,OAAOoC,EAAKO,IAAL,aAAAC,OAAsB5C,mCAExB6C,GACL,OAAOT,EAAKU,KAAK,YAAaD,kCAEzB7C,EAAI6C,GACT,OAAOT,EAAKW,IAAL,aAAAH,OAAsB5C,GAAM6C,kCAE9B7C,GACL,OAAOoC,EAAKY,OAAL,aAAAJ,OAAyB5C,4CAhBhC,MAAO,2CCJI,SAASiD,EAAc7D,GAAO,IAAA8D,EAAAxB,KAAAyB,EAGZC,mBAAS,IAHGC,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAAuC,EAAA,GAGpCI,EAHoCF,EAAA,GAG3BG,EAH2BH,EAAA,GAIrCI,EAAWC,cAGjBrE,oBAAU,WAAMsE,KAAqB,IAErC,IAAMA,EAAmB,WACvBC,EAAmBC,SAChBC,KAAK,SAAAC,GACJP,EAAYO,EAASlB,MACrBmB,QAAQC,IAAIF,EAASlB,QAEtBqB,MAAM,SAAAC,GACLH,QAAQC,IAAIE,MAIlB,SAASC,EAAcpE,GAErB4D,EAAmBZ,OAAOhD,GACvB8D,KAAK,SAAAC,GACJC,QAAQC,IAAIF,EAASlB,MACrBW,EAAYD,EAASc,OAAO,SAAAd,GAAQ,OAAIA,EAASe,aAAetE,OAEjEkE,MAAM,SAAAC,GACLH,QAAQC,IAAIE,KAIlB,SAASI,EAAiBvE,GACxByD,EAAS,mBAAmBzD,GAM9B,OACEJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACS,EAAD,MACAX,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBAEZsD,GAAYA,EAASiB,IAAI,SAACC,GAAD,OAExB7E,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eAAeyE,IAAKD,EAAQH,YAEzC1E,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBAAf,IAEEL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,sDAChB0E,QAASP,EAAcQ,KAAK1B,EAAMuB,EAAQH,aAD5C,kBAFF,KAME1E,EAAAC,EAAAC,cAAA,UAAQG,UAAU,8BAChB0E,QAASJ,EAAiBK,KAAK1B,EAAMuB,EAAQH,aAD/C,kBANF,MAYA1E,EAAAC,EAAAC,cAAA,QAAMG,UAAU,iBAAiBwE,EAAQI,cAEzCjF,EAAAC,EAAAC,cAAA,QAAMG,UAAU,eAAewE,EAAQK,sBAEvClF,EAAAC,EAAAC,cAAA,OACEG,UAAU,gBACVG,IAAKwD,EAAmBmB,gBAAgBN,EAAQO,6BAGlDpF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMD,UAAU,eAAeE,GAAI,YAAcsE,EAAQH,YAAzD,eAOJ1E,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAMD,UAAU,oBAAoBE,GAAG,mBAAvC,qBC3EO,SAAS8E,EAAc7F,GAGpC,IAAMqE,EAAWC,cACjBrE,oBAAU,YACS,IAAb6F,GACFzB,EAAS,cAEM,IAAb0B,GAEF1B,EAAS,eAV8B,IAAAN,EAmBZC,oBAAU,GAnBEC,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAAuC,EAAA,GAmBpCgC,EAnBoC9B,EAAA,GAmB3B+B,EAnB2B/B,EAAA,GAAAgC,EAoBhBjC,oBAAU,GApBMkC,EAAA1E,OAAA0C,EAAA,EAAA1C,CAAAyE,EAAA,GAoBpCE,EApBoCD,EAAA,GAoB7BE,EApB6BF,EAAA,GAAAG,EAsBdrC,mBAC3B,CACEkB,WAAY,KACZO,aAAc,GACdC,qBAAsB,GACtBY,oBAAqB,GACrBV,2BAA4B,GAC5BW,eAAiB,KACjBC,wBAAwB,EACxBC,yBAA0B,GAC1BC,oBAAqB,KAhCkBC,EAAAnF,OAAA0C,EAAA,EAAA1C,CAAA6E,EAAA,GAsBpChB,EAtBoCsB,EAAA,GAsB5BC,EAtB4BD,EAAA,GAAAE,EAoCZ7C,oBAAU,GApCE8C,EAAAtF,OAAA0C,EAAA,EAAA1C,CAAAqF,EAAA,GAoCpCf,EApCoCgB,EAAA,GAoC3BC,EApC2BD,EAAA,GAuCnClG,EAAOoG,cAAPpG,GAERX,oBAAU,WAAMgH,KAAgB,IAEhC,IAAMA,EAAa,WACjBzC,EAAmBjB,IAAI3C,GACpB8D,KAAK,SAAAC,GACJiC,EAAWjC,EAASlB,MACpBmB,QAAQC,IAAIF,EAASlB,MACrB2C,GAAU,KAEXtB,MAAM,SAAAC,GACLiB,GAAY,GACZpB,QAAQC,IAAIE,MAgBlB,OACEvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACS,EAAD,MACAX,EAAAC,EAAAC,cAAA,OAAKG,UAAU,oBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAEbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBAAf,IAEEL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,sDAChB0E,QArBU,SAAC3E,GAErB4D,EAAmBZ,OAAOhD,GACvB8D,KAAK,SAAAC,GACJC,QAAQC,IAAIF,EAASlB,MACrBsD,GAAY,KAEbjC,MAAM,SAAAC,GACLH,QAAQC,IAAIE,MAaiBS,KAAKlD,KAAM+C,EAAQH,aAD5C,kBAFF,KAME1E,EAAAC,EAAAC,cAAA,UAAQG,UAAU,8BAChB0E,QAnEZ,SAA0B3E,GACxByD,EAAS,mBAAmBzD,IAkEQ4E,KAAKlD,KAAM+C,EAAQH,aAD/C,kBANF,MAYA1E,EAAAC,EAAAC,cAAA,QAAMG,UAAU,gCAAiCwE,EAAQI,cAEzDjF,EAAAC,EAAAC,cAAA,QAAMG,UAAU,8BAA+BwE,EAAQK,sBAEvDlF,EAAAC,EAAAC,cAAA,QAAMG,UAAU,sCAAuCwE,EAAQiB,qBAI9DH,GAAUd,EAAQkB,eAAenB,IAAI,SAAC8B,GAAD,OAEtC1G,EAAAC,EAAAC,cAAA,OACEM,IAAKwD,EAAmBmB,gBAAgBuB,EAAMC,uBAC9CtG,UAAU,gBACVyE,IAAK4B,EAAME,sBAMwB,IAAnC/B,EAAQmB,uBACRhG,EAAAC,EAAAC,cAAA,KAAGG,UAAU,6BACXwG,KAAM7C,EAAmBmB,gBAAgBN,EAAQoB,yBACjDa,UAAQ,GAFV,qBAIA9G,EAAAC,EAAAC,cAAA,KAAGG,UAAU,6BACXwG,KAAMhC,EAAQqB,oBAAqBa,OAAO,UAD5C,uBClHG,SAASC,EAAUxH,GAAO,IAAA+D,EAEdC,mBAAShE,EAAMyH,SAFDxD,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAAuC,EAAA,GAAAE,EAAA,GAAAA,EAAA,GAIxC,OACCzD,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACdL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAcb,EAAM0H,YAIb,IAApB1H,EAAM2H,UAELnH,EAAAC,EAAAC,cAAA,YACIG,UAAU,gBACVD,GAAIZ,EAAM4H,UACV7E,MAAO/C,EAAM6H,WACbC,SAAU9H,EAAM+H,cAChBC,KAAMhI,EAAM4H,YAIlBpH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,MACkB,IAAhBX,EAAMiI,MACPzH,EAAAC,EAAAC,cAAA,SACCmC,KAAK,OACLhC,UAAU,wBACVD,GAAIZ,EAAM4H,UACV7E,MAAO/C,EAAM6H,WACbC,SAAU9H,EAAM+H,cAChBC,KAAMhI,EAAM4H,YAGVpH,EAAAC,EAAAC,cAAA,SACHmC,KAAK,OACLhC,UAAU,kBACVD,GAAIZ,EAAM4H,UACV7E,MAAO/C,EAAM6H,WACbC,SAAU9H,EAAM+H,cAChBC,KAAMhI,EAAM4H,cAOS,IAAlB5H,EAAMyH,QACPjH,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAAgBb,EAAMkI,mBACpC,2BC7CO,SAASC,EAAUnI,GAAO,IAAA+D,EAEdC,mBAAShE,EAAMyH,SAFDxD,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAAuC,EAAA,GAAAkC,GAAAhC,EAAA,GAAAA,EAAA,GAGND,mBAAShE,EAAMoI,cAHTlC,EAAA1E,OAAA0C,EAAA,EAAA1C,CAAAyE,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAKxC,OACC1F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,MACwB,IAAtBX,EAAMoI,YAEP5H,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACLL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAcb,EAAM0H,YAEX,IAAtB1H,EAAMqI,YAEP7H,EAAAC,EAAAC,cAAA,SACCmC,KAAK,OACLyF,UAAQ,EACRN,KAAMhI,EAAM4H,UACZ/G,UAAU,aACViH,SAAU9H,EAAM+H,gBAKvBvH,EAAAC,EAAAC,cAAA,SACFmC,KAAK,OACLmF,KAAMhI,EAAM4H,UACZ/G,UAAU,aACViH,SAAU9H,EAAM+H,iBAKW,IAAlB/H,EAAMyH,QAEPjH,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAAgBb,EAAMkI,mBAErC,MAKX1H,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACLL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAcb,EAAM0H,WACnClH,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YACZL,EAAAC,EAAAC,cAAA,OAAKM,IAAKuH,IAAY1H,UAAU,cAAc0E,QAASvF,EAAMwI,gBAErC,IAAtBxI,EAAMqI,YAEP7H,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aAEbb,EAAM6H,WAAWzC,IAAI,SAAC8B,GAAD,OACnB1G,EAAAC,EAAAC,cAAA,OAAK4E,IAAK4B,EAAME,kBAAmBF,EAAMC,2BAM7C3G,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aAAab,EAAM6H,eCtDpC,SAASY,EAAYzI,GAAO,IAAA+D,EAEZC,mBAAShE,EAAMqF,SAFHpB,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAAuC,EAAA,GAAAkC,GAAAhC,EAAA,GAAAA,EAAA,GAG0BD,mBAAShE,EAAM0I,6BAHzCxC,EAAA1E,OAAA0C,EAAA,EAAA1C,CAAAyE,EAAA,GAAAI,GAAAH,EAAA,GAAAA,EAAA,GAIqBlC,mBAAShE,EAAM2I,0BAJpChC,EAAAnF,OAAA0C,EAAA,EAAA1C,CAAA6E,EAAA,GAAAQ,GAAAF,EAAA,GAAAA,EAAA,GAK8B3C,mBAAShE,EAAM4I,+BAL7C9B,EAAAtF,OAAA0C,EAAA,EAAA1C,CAAAqF,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAQzC,OACEtG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,YAGbL,EAAAC,EAAAC,cAAC8G,EAAD,CACEG,WAAa,EACbM,OAAS,EACTP,UAAU,eACVE,UAAU,eACVC,WAAY7H,EAAMqF,QAAQI,aAC1BsC,cAAe/H,EAAM6I,qBACrBpB,QAASzH,EAAM8I,eAAerB,QAC9BS,kBAAmBlI,EAAM8I,eAAeC,UAI1CvI,EAAAC,EAAAC,cAAC8G,EAAD,CACEG,WAAa,EACbM,OAAS,EACTP,UAAU,iCACVE,UAAU,uBACVC,WAAY7H,EAAMqF,QAAQK,qBAC1BqC,cAAe/H,EAAMgJ,6BACrBvB,QAASzH,EAAMiJ,uBAAuBxB,QACtCS,kBAAmBlI,EAAMiJ,uBAAuBF,UAIlDvI,EAAAC,EAAAC,cAAC8G,EAAD,CACEG,WAAa,EACbM,OAAS,EACTP,UAAU,cACVE,UAAU,sBACVC,WAAY7H,EAAMqF,QAAQiB,oBAC1ByB,cAAe/H,EAAMkJ,4BACrBzB,QAASzH,EAAMmJ,sBAAsB1B,QACrCS,kBAAmBlI,EAAMmJ,sBAAsBJ,UAIjDvI,EAAAC,EAAAC,cAACyH,EAAD,CACEE,aAAa,EACbX,UAAU,YACVE,UAAU,6BACVG,cAAe/H,EAAMoJ,mCACrB3B,QAASzH,EAAMqJ,oBAAoB5B,QACnCS,kBAAmBlI,EAAMqJ,oBAAoBN,QAC7CX,YAAapI,EAAM0I,2BACnBF,aAAcxI,EAAMsJ,kCACpBzB,WAAY7H,EAAMqF,QAAQO,6BAI1BpF,EAAAC,EAAAC,cAACyH,EAAD,CACEE,aAAa,EACbX,UAAU,SACVE,UAAU,iBACVG,cAAe/H,EAAMuJ,uBACrB9B,QAASzH,EAAMwJ,iBAAiB/B,QAChCS,kBAAmBlI,EAAMwJ,iBAAiBT,QAC1CX,YAAapI,EAAM2I,wBACnBH,aAAcxI,EAAMyJ,sBACpB5B,WAAY7H,EAAMqF,QAAQkB,iBAI9B/F,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cAAf,UACAL,EAAAC,EAAAC,cAAA,UACEG,UAAU,kBACVD,GAAG,yBACHmC,MAAO/C,EAAMqF,QAAQmB,uBACrBsB,SAAU9H,EAAM0J,+BAChB1B,KAAK,0BACHxH,EAAAC,EAAAC,cAAA,UAAQqC,MAAM,QAAd,QACAvC,EAAAC,EAAAC,cAAA,UAAQqC,MAAM,SAAd,WAKqC,IAAzC/C,EAAMqF,QAAQmB,uBAEdhG,EAAAC,EAAAC,cAACyH,EAAD,CACEE,aAAa,EACbX,UAAU,eACVE,UAAU,2BACVG,cAAe/H,EAAM2J,iCACrBlC,QAASzH,EAAM4J,sBAAsBnC,QACrCS,kBAAmBlI,EAAM4J,sBAAsBb,QAC/CX,YAAapI,EAAM4I,6BACnBJ,aAAcxI,EAAM6J,gCACpBhC,WAAY7H,EAAMqF,QAAQoB,2BAK5BjG,EAAAC,EAAAC,cAAC8G,EAAD,CACEG,WAAa,EACbM,OAAS,EACTP,UAAU,OACVE,UAAU,sBACVC,WAAY7H,EAAMqF,QAAQqB,oBAC1BqB,cAAe/H,EAAM8J,4BACrBrC,QAASzH,EAAM+J,qBAAqBtC,QACpCS,kBAAmBlI,EAAM+J,qBAAqBhB,UAKjC,WAAf/I,EAAMgK,KACNxJ,EAAAC,EAAAC,cAAA,UAAQG,UAAU,wBAAwB0E,QAASvF,EAAMiK,aAAzD,kBAEAzJ,EAAAC,EAAAC,cAAA,UAAQG,UAAU,wBAAwB0E,QAASvF,EAAMiK,aAAzD,oBC1HK,SAASC,EAAclK,GAGpC,IAAMqE,EAAWC,cACjBrE,oBAAU,WACJoF,EAAQ8E,oBACV9F,EAAS,eAN8B,IAAAN,EAYfC,mBAC5B,CACIyB,aAAc,GACdC,qBAAsB,GACtBY,oBAAqB,GACrBV,2BAA4B,KAC5BW,eAAgB,GAChBC,wBAAwB,EACxBC,yBAA0B,KAC1BC,oBAAqB,GACrByD,oBAAoB,IAtBmBlG,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAAuC,EAAA,GAYrCsB,EAZqCpB,EAAA,GAY7B2C,EAZ6B3C,EAAA,GAAAgC,EAyBAjC,mBAAS,CAClDyD,SAAU,EACVsB,QAAU,KA3B+B7C,EAAA1E,OAAA0C,EAAA,EAAA1C,CAAAyE,EAAA,GAyBrC6C,EAzBqC5C,EAAA,GAyBrBkE,EAzBqBlE,EAAA,GAAAG,EA8BiBrC,mBAAS,CACnEyD,SAAU,EACVsB,QAAU,KAhC+BpC,EAAAnF,OAAA0C,EAAA,EAAA1C,CAAA6E,EAAA,GA8BpC4C,EA9BoCtC,EAAA,GA8BZ0D,EA9BY1D,EAAA,GAAAE,EAmCe7C,mBAAS,CACjEyD,SAAU,EACVsB,QAAU,KArC+BjC,EAAAtF,OAAA0C,EAAA,EAAA1C,CAAAqF,EAAA,GAmCpCsC,EAnCoCrC,EAAA,GAmCbwD,EAnCaxD,EAAA,GAAAyD,EAwCWvG,mBAAS,CAC7DyD,SAAU,EACVsB,QAAU,KA1C+ByB,EAAAhJ,OAAA0C,EAAA,EAAA1C,CAAA+I,EAAA,GAwCpClB,EAxCoCmB,EAAA,GAwCfC,EAxCeD,EAAA,GAAAE,EA6CK1G,mBAAS,CACvDyD,SAAU,EACVsB,QAAU,KA/C+B4B,EAAAnJ,OAAA0C,EAAA,EAAA1C,CAAAkJ,EAAA,GA6CpClB,EA7CoCmB,EAAA,GA6ClBC,EA7CkBD,EAAA,GAAAE,EAkDe7G,mBAAS,CACjEyD,SAAU,EACVsB,QAAU,KApD+B+B,EAAAtJ,OAAA0C,EAAA,EAAA1C,CAAAqJ,EAAA,GAkDpCjB,EAlDoCkB,EAAA,GAkDbC,EAlDaD,EAAA,GAAAE,EAuDahH,mBAAS,CAC/DyD,SAAU,EACVsB,QAAU,KAzD+BkC,EAAAzJ,OAAA0C,EAAA,EAAA1C,CAAAwJ,EAAA,GAuDpCjB,EAvDoCkB,EAAA,GAuDdC,EAvDcD,EAAA,GAmM5C,OACCzK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACCH,EAAAC,EAAAC,cAACS,EAAD,MACAX,EAAAC,EAAAC,cAAC+H,EAAD,CACCuB,KAAK,SACL3E,QAAUA,EAEVwD,qBA5I2B,SAAC9D,GAC5B6B,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuB1F,aAAeV,EAAEwC,OAAOxE,WA2IhDiG,6BAvIkC,SAACjE,GACpC6B,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuBzF,qBAAuBX,EAAEwC,OAAOxE,WAsIxDmG,4BAlIiC,SAACnE,GACnC6B,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuB7E,oBAAsBvB,EAAEwC,OAAOxE,WAiIvDqG,mCA7HwC,SAACrE,GAC1C6B,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuBvF,2BAA6Bb,EAAEwC,OAAO8D,MAAM,QA4HpE9B,uBAxH4B,SAACxE,GAC9B6B,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuB5E,eAAiBxB,EAAEwC,OAAO8D,WAuHlD3B,+BAnHoC,SAAC3E,GACtC,IAAIuG,GAAS,EAKXA,EAFqB,SAAnBvG,EAAEwC,OAAOxE,MAOb6D,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuB3E,uBAAyB8E,OAwGjD3B,iCApGsC,SAAC5E,GACxC6B,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuB1E,yBAA2B1B,EAAEwC,OAAO8D,MAAM,QAmGlEvB,4BA/FiC,SAAC/E,GACnC6B,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuBzE,oBAAsB3B,EAAEwC,OAAOxE,WA+FvD2F,4BAA8B,EAC9BC,yBAA2B,EAC3BC,8BAAgC,EAChCa,sBAAyB,KACzBH,kCAAqC,KACrCO,gCAAmC,KAEpCf,eAAkBA,EAClBG,uBAA0BA,EAC1BE,sBAAyBA,EACzBE,oBAAuBA,EACvBG,iBAAoBA,EACpBI,sBAAyBA,EACzBG,qBAAwBA,EAExBE,YAxGiB,SAAClF,GAGlB,IAAItB,EAAO,IAAI8H,SACf9H,EAAK+H,OAAO,eAAgBnG,EAAQI,cACpChC,EAAK+H,OAAO,uBAAwBnG,EAAQK,sBAC5CjC,EAAK+H,OAAO,sBAAuBnG,EAAQiB,qBAC3C7C,EAAK+H,OAAO,6BAA8BnG,EAAQO,4BAElD,IAAK,IAAI6F,EAAI,EAAGA,EAAIpG,EAAQkB,eAAemF,OAAQD,IACjDhI,EAAK+H,OAAL,iBAA8BnG,EAAQkB,eAAekF,IAGvDhI,EAAK+H,OAAO,yBAA0BnG,EAAQmB,wBAC9C/C,EAAK+H,OAAO,2BAA4BnG,EAAQoB,0BAChDhD,EAAK+H,OAAO,sBAAuBnG,EAAQqB,qBAG3ClC,EAAmBtB,OAAOO,GACzBiB,KAAK,SAAAC,GACoB,MAApBA,EAASgH,SACX/G,QAAQC,IAAIF,EAASlB,MACrBmD,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuBhB,oBAAqB,SAIjDrF,MAAM,SAAAC,GACqB,MAAtBA,EAAEJ,SAASgH,SAEbvB,EAAkB,CAAC3C,SAAU,EAAMsB,QAAU,KAC7CsB,EAA0B,CAAC5C,SAAU,EAAMsB,QAAU,KACrDuB,EAAyB,CAAC7C,SAAU,EAAMsB,QAAU,KACpD0B,EAAuB,CAAChD,SAAU,EAAMsB,QAAU,KAClD6B,EAAoB,CAACnD,SAAS,EAAMsB,QAAQ,KAC5CgC,EAAyB,CAACtD,SAAU,EAAMsB,QAAU,KACpDmC,EAAwB,CAACzD,SAAU,EAAMsB,QAAU,KAEnDhE,EAAEJ,SAASlB,KAAKmI,OAAOC,QAAQ,SAAAC,GAC7B,OAAQA,EAAMC,OACZ,IAAK,eACH3B,EAAkB,CAAC3C,SAAU,EAAOsB,QAAU+C,EAAME,MACpD,MACF,IAAK,uBACH3B,EAA0B,CAAC5C,SAAU,EAAOsB,QAAU+C,EAAME,MAC5D,MACF,IAAK,sBACH1B,EAAyB,CAAC7C,SAAU,EAAOsB,QAAU+C,EAAME,MAC3D,MACF,IAAK,6BACHvB,EAAuB,CAAChD,SAAU,EAAOsB,QAAU+C,EAAME,MACzD,MACF,IAAK,iBACHpB,EAAoB,CAACnD,SAAU,EAAOsB,QAAU+C,EAAME,MACtD,MACF,IAAK,2BACHjB,EAAyB,CAACtD,SAAU,EAAOsB,QAAU+C,EAAME,MAC3D,MACF,IAAK,sBACHd,EAAwB,CAACzD,SAAU,EAAOsB,QAAU+C,EAAME,gBCrLzD,SAASC,EAAcjM,GAGpC,IAAMqE,EAAWC,cACjBrE,oBAAU,WACJoF,EAAQ6G,oBACV7H,EAAS,cAEM,IAAb0B,GAEF1B,EAAS,cAEO,IAAd8H,GAEFC,OAduC,IAAArI,EAoBZC,oBAAU,GApBEC,EAAAzC,OAAA0C,EAAA,EAAA1C,CAAAuC,EAAA,GAoBpCgC,EApBoC9B,EAAA,GAoB3B+B,EApB2B/B,EAAA,GAAAgC,EAsBfjC,mBAC5B,CACIyB,aAAc,GACdC,qBAAsB,GACtBY,oBAAqB,GACrBV,2BAA4B,KAC5BW,eAAgB,GAChBC,wBAAwB,EACxBC,yBAA0B,KAC1BC,oBAAqB,GACrBwF,oBAAoB,IAhCmBhG,EAAA1E,OAAA0C,EAAA,EAAA1C,CAAAyE,EAAA,GAsBrCZ,EAtBqCa,EAAA,GAsB7BU,EAtB6BV,EAAA,GAAAG,EAqCVrC,oBAAS,GArCC2C,EAAAnF,OAAA0C,EAAA,EAAA1C,CAAA6E,EAAA,GAqCpC8F,EArCoCxF,EAAA,GAqC1B0F,EArC0B1F,EAAA,GAAAE,EAsCwB7C,oBAAS,GAtCjC8C,EAAAtF,OAAA0C,EAAA,EAAA1C,CAAAqF,EAAA,GAsCpC6B,EAtCoC5B,EAAA,GAsCTwF,EAtCSxF,EAAA,GAAAyD,EAuCmBvG,oBAAS,GAvC5BwG,EAAAhJ,OAAA0C,EAAA,EAAA1C,CAAA+I,EAAA,GAuCpC5B,EAvCoC6B,EAAA,GAuCX+B,EAvCW/B,EAAA,GAAAE,EAwC4B1G,oBAAS,GAxCrC2G,EAAAnJ,OAAA0C,EAAA,EAAA1C,CAAAkJ,EAAA,GAwCpC9B,EAxCoC+B,EAAA,GAwCP6B,EAxCO7B,EAAA,GAAAE,EA0CA7G,mBAAS,CAClDyD,SAAU,EACVsB,QAAU,KA5C+B+B,EAAAtJ,OAAA0C,EAAA,EAAA1C,CAAAqJ,EAAA,GA0CrC/B,EA1CqCgC,EAAA,GA0CrBV,EA1CqBU,EAAA,GAAAE,EA+CiBhH,mBAAS,CACnEyD,SAAU,EACVsB,QAAU,KAjD+BkC,EAAAzJ,OAAA0C,EAAA,EAAA1C,CAAAwJ,EAAA,GA+CpC/B,EA/CoCgC,EAAA,GA+CZZ,EA/CYY,EAAA,GAAAwB,EAoDezI,mBAAS,CACjEyD,SAAU,EACVsB,QAAU,KAtD+B2D,EAAAlL,OAAA0C,EAAA,EAAA1C,CAAAiL,EAAA,GAoDpCtD,EApDoCuD,EAAA,GAoDbpC,EApDaoC,EAAA,GAAAC,EAyDW3I,mBAAS,CAC7DyD,SAAU,EACVsB,QAAU,KA3D+B6D,EAAApL,OAAA0C,EAAA,EAAA1C,CAAAmL,EAAA,GAyDpCtD,EAzDoCuD,EAAA,GAyDfnC,EAzDemC,EAAA,GAAAC,EA8DK7I,mBAAS,CACvDyD,SAAU,EACVsB,QAAU,KAhE+B+D,EAAAtL,OAAA0C,EAAA,EAAA1C,CAAAqL,EAAA,GA8DpCrD,EA9DoCsD,EAAA,GA8DlBlC,EA9DkBkC,EAAA,GAAAC,GAmEe/I,mBAAS,CACjEyD,SAAU,EACVsB,QAAU,KArE+BiE,GAAAxL,OAAA0C,EAAA,EAAA1C,CAAAuL,GAAA,GAmEpCnD,GAnEoCoD,GAAA,GAmEbjC,GAnEaiC,GAAA,GAAAC,GAwEajJ,mBAAS,CAC/DyD,SAAU,EACVsB,QAAU,KA1E+BmE,GAAA1L,OAAA0C,EAAA,EAAA1C,CAAAyL,GAAA,GAwEpClD,GAxEoCmD,GAAA,GAwEdhC,GAxEcgC,GAAA,GA+EnCtM,GAAOoG,cAAPpG,GACRX,oBAAU,WACNgH,GAAWrG,KACb,IAEF,IAAMqG,GAAa,SAACrG,GAClB4D,EAAmBjB,IAAI3C,GACpB8D,KAAK,SAAAC,GACJiC,EAAWjC,EAASlB,MACpB4I,GAAa,GACbzH,QAAQC,IAAI,gBAEbC,MAAM,SAAAC,GACLiB,GAAY,GACZpB,QAAQC,IAAIE,MAIZqH,GAAmB,WACvBE,GAA8B,GAC9BC,GAA2B,IACY,IAAnClH,EAAQmB,wBAEVgG,GAAgC,GAElCH,OAAac,IAsKhB,OACC3M,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACCH,EAAAC,EAAAC,cAACS,EAAD,MACAX,EAAAC,EAAAC,cAAC+H,EAAD,CACCuB,KAAK,SACL3E,QAAUA,EAEVwD,qBAxK2B,SAAC9D,GAC5B6B,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuB1F,aAAeV,EAAEwC,OAAOxE,WAuKhDiG,6BAnKkC,SAACjE,GACpC6B,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuBzF,qBAAuBX,EAAEwC,OAAOxE,WAkKxDmG,4BA9JiC,SAACnE,GACnC6B,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuB7E,oBAAsBvB,EAAEwC,OAAOxE,WA6JvDqG,mCAzJwC,SAACrE,GAC1C6B,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuBvF,2BAA6Bb,EAAEwC,OAAO8D,MAAM,QAwJpE9B,uBA7I4B,SAACxE,GAC9B6B,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuB5E,eAAiBxB,EAAEwC,OAAO8D,WA4IlD3B,+BA9HoC,SAAC3E,GACtC,IAAIuG,GAAS,EAKXA,EAFqB,SAAnBvG,EAAEwC,OAAOxE,MAOb6D,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuB3E,uBAAyB8E,OAmHjD3B,iCA/GsC,SAAC5E,GACxC6B,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuB1E,yBAA2B1B,EAAEwC,OAAO8D,MAAM,QA8GlEvB,4BAnGiC,SAAC/E,GACnC6B,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuBzE,oBAAsB3B,EAAEwC,OAAOxE,WAmGvD2F,2BAA8BA,EAC9BC,wBAA2BA,EAC3BC,6BAAgCA,EAEhCa,sBAhJ2B,WAC5B7C,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuBiC,wBAAyB,MAElDb,GAA2B,GAC3B3F,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuBiC,wBAAyB,OA2IjD9D,kCA9JuC,WACxC1C,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuBvF,2BAA6B,SAEtD0G,GAA8B,IA2J7BzC,gCAlHqC,WACtCjD,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuB1E,yBAA2B,SAEpD+F,GAAgC,IAgHhC1D,eAAkBA,EAClBG,uBAA0BA,EAC1BE,sBAAyBA,EACzBE,oBAAuBA,EACvBG,iBAAoBA,EACpBI,sBAAyBA,GACzBG,qBAAwBA,GAExBE,YA7GkB,SAAClF,GAGnB,IAAItB,EAAO,IAAI8H,SASf,GARA9H,EAAK+H,OAAO,eAAgBnG,EAAQI,cACpChC,EAAK+H,OAAO,uBAAwBnG,EAAQK,sBAC5CjC,EAAK+H,OAAO,sBAAuBnG,EAAQiB,qBAC3C7C,EAAK+H,OAAO,6BAA8BnG,EAAQO,4BAGlDnC,EAAK+H,OAAO,yBAA0BnG,EAAQ+H,yBAEN,IAAnC/H,EAAQ+H,uBAEX,IAAK,IAAI3B,EAAI,EAAGA,EAAIpG,EAAQkB,eAAemF,OAAQD,IACjDhI,EAAK+H,OAAL,iBAA8BnG,EAAQkB,eAAekF,IAIzDhI,EAAK+H,OAAO,yBAA0BnG,EAAQmB,wBAC9C/C,EAAK+H,OAAO,2BAA4BnG,EAAQoB,0BAChDhD,EAAK+H,OAAO,sBAAuBnG,EAAQqB,qBAG3ClC,EAAmB6I,OAAOzM,GAAG6C,GAC1BiB,KAAK,SAAAC,GACJiC,EAAW,SAAAuE,GACT,OAAO3J,OAAA4J,EAAA,EAAA5J,CAAA,GAAK2J,EAAZ,CAAuBe,oBAAqB,QAG/CpH,MAAM,SAAAC,GACqB,MAAtBA,EAAEJ,SAASgH,SAEbvB,EAAkB,CAAC3C,SAAU,EAAMsB,QAAU,KAC7CsB,EAA0B,CAAC5C,SAAU,EAAMsB,QAAU,KACrDuB,EAAyB,CAAC7C,SAAU,EAAMsB,QAAU,KACpD0B,EAAuB,CAAChD,SAAU,EAAMsB,QAAU,KAClDgC,GAAyB,CAACtD,SAAU,EAAMsB,QAAU,KACpDmC,GAAwB,CAACzD,SAAU,EAAMsB,QAAU,KAEnDhE,EAAEJ,SAASlB,KAAKmI,OAAOC,QAAQ,SAAAC,GAC7B,OAAQA,EAAMC,OACZ,IAAK,eACL3B,EAAkB,CAAC3C,SAAU,EAAOsB,QAAU+C,EAAME,MACpD,MACA,IAAK,uBACL3B,EAA0B,CAAC5C,SAAU,EAAOsB,QAAU+C,EAAME,MAC5D,MACA,IAAK,sBACL1B,EAAyB,CAAC7C,SAAU,EAAOsB,QAAU+C,EAAME,MAC3D,MACA,IAAK,6BACLvB,EAAuB,CAAChD,SAAU,EAAOsB,QAAU+C,EAAME,MACzD,MACA,IAAK,iBACLpB,EAAoB,CAACnD,SAAU,EAAOsB,QAAU+C,EAAME,MACtD,MACA,IAAK,2BACLjB,GAAyB,CAACtD,SAAU,EAAOsB,QAAU+C,EAAME,MAC3D,MACA,IAAK,sBACLd,GAAwB,CAACzD,SAAU,EAAOsB,QAAU+C,EAAME,qCCjQzD,SAAS9K,EAAKlB,GAC3B,OACEQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACS,EAAD,MACAX,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,kBAAkBG,IAAKC,QCSjCqM,IAASC,WAAWrN,SAASsN,eAAe,SACpDC,OACHjN,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACEN,EAAAC,EAAAC,cAACgN,EAAA,EAAD,KACElN,EAAAC,EAAAC,cAACgN,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAASrN,EAAAC,EAAAC,cAACQ,EAAD,QAC/BV,EAAAC,EAAAC,cAACgN,EAAA,EAAD,CAAOE,KAAK,WAAWC,QAASrN,EAAAC,EAAAC,cAACkC,EAAD,QAChCpC,EAAAC,EAAAC,cAACgN,EAAA,EAAD,CAAOE,KAAK,YAAYC,QAASrN,EAAAC,EAAAC,cAACmD,EAAD,QACjCrD,EAAAC,EAAAC,cAACgN,EAAA,EAAD,CAAOE,KAAK,eAAeC,QAASrN,EAAAC,EAAAC,cAACmF,EAAD,QACpCrF,EAAAC,EAAAC,cAACgN,EAAA,EAAD,CAAOE,KAAK,kBAAkBC,QAASrN,EAAAC,EAAAC,cAACwJ,EAAD,QACvC1J,EAAAC,EAAAC,cAACgN,EAAA,EAAD,CAAOE,KAAK,sBAAsBC,QAASrN,EAAAC,EAAAC,cAACuL,EAAD,QAC3CzL,EAAAC,EAAAC,cAACgN,EAAA,EAAD,CAAOE,KAAK,OAAOC,QAASrN,EAAAC,EAAAC,cAACoN,EAAD,QAC5BtN,EAAAC,EAAAC,cAACgN,EAAA,EAAD,CAAOE,KAAK,IAAIC,QAASrN,EAAAC,EAAAC,cAACoN,EAAD","file":"static/js/main.75bf7294.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.bf2628e4.png\";","module.exports = __webpack_public_path__ + \"static/media/thunderParticle.5d153796.png\";","module.exports = __webpack_public_path__ + \"static/media/404.9e40b6a3.png\";","import React, { useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"./image/thunderParticle.png\";\r\nimport \"./App.css\";\r\n\r\n\r\nexport default function App(props) {\r\n\r\n    useEffect(()=>{  // Menu burger Animation et Display\r\n        document.querySelector(\".iconMenuBox\").addEventListener('click', function() {\r\n            // Icon\r\n            document.querySelector(\".icon-1\").classList.toggle('a');\r\n            document.querySelector(\".icon-2\").classList.toggle('c');\r\n            document.querySelector(\".icon-3\").classList.toggle('b');\r\n\r\n            // Menu\r\n            if (document.querySelector(\".burgerMenuBox\").classList.contains('appearing')  \r\n                || document.querySelector(\".burgerMenuBox\").classList.contains('disappearing') )\r\n            {\r\n                document.querySelector(\".burgerMenuBox\").classList.toggle('disappearing');\r\n                document.querySelector(\".burgerMenuBox\").classList.toggle('appearing');\r\n            }\r\n            else\r\n            {\r\n                document.querySelector(\".burgerMenuBox\").classList.toggle('appearing');\r\n            }\r\n        });\r\n    },[]) //notice the empty array here so it only happens once when the component is up\r\n\r\n\r\n    return (\r\n      <>   \r\n        <div id=\"particles-js\"></div> {/* particles.js container */}\r\n        <div className=\"Header\">\r\n            <Link className=\"leftBox\" to=\"/\">\r\n                <img className=\"itemLeftBox imageHeader\" src={logo}></img> \r\n                <span className=\"itemLeftBox titleHeader\">\r\n                    <div className=\"titleHeader-top\">Richard PERRET</div>\r\n                    <div className=\"hiding-titleHeader-bot\">Richard PERRET</div>\r\n                    <div className=\"titleHeader-bot\">Richard PERRET</div>\r\n                </span>\r\n            </Link>\r\n                                    {/* Version Mobile */}\r\n            {/* itemIconMenuBox */}\r\n            <div className=\"iconMenuBox\">\r\n                <div className=\"icon-1\"></div>\r\n                <div className=\"icon-2\"></div>\r\n                <div className=\"icon-3\"></div>\r\n            </div>\r\n\r\n            <div className=\"burgerMenuBox\">    \r\n                <Link className=\"itemBugerMenuBox\" to=\"/Projects\">PROJETS</Link>\r\n                <Link className=\"itemBugerMenuBox\" to=\"/Contact\">CONTACT</Link>\r\n            </div>\r\n\r\n                                    {/* Version Desktop */}\r\n            <div className=\"linksBox\">\r\n                <Link className=\"itemLinksBox blue\" to=\"/Contact\">CONTACT</Link>\r\n                <Link className=\"itemLinksBox\" to=\"/Projects\">PROJETS</Link> \r\n            </div>         \r\n        </div>\r\n      </>\r\n    );\r\n    }\r\n","import React, { Component } from \"react\";\r\nimport App from \"../App\"\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <>\r\n      <App />\r\n    </>\r\n  );\r\n}\r\n ","import React, { useCallback } from \"react\"; //JSX\r\nimport Particles from \"react-tsparticles\";\r\nimport type { Engine } from \"tsparticles-engine\";\r\nimport { loadFull } from \"tsparticles\";\r\n\r\n\r\nexport default function ContactParticles(props: unknown) {\r\n  // this customizes the component tsParticles installation\r\n  const customInit = useCallback(async (engine: Engine) => {\r\n    // this adds the bundle to tsParticles\r\n    await loadFull(engine);\r\n  });\r\n\r\n  const options = require(\"./dust.json\");\r\n  \r\n  return <Particles options={options} init={customInit} />;\r\n}","import React from \"react\"; //JSX\r\nimport App from \"../App\";\r\nimport ContactParticles from \"./particles/ContactParticles\";\r\n \r\nexport default function Contact(props) {\r\n  return (\r\n    <>\r\n      <ContactParticles />\r\n      <App />\r\n      <div className=\"wrapper-form\">\r\n        <div className=\"box-form\">\r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Email</div> \r\n            <input type=\"text\" className='textFields-form small' placeholder='johndoe@mail.com'></input>\r\n          </div>\r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Message</div>\r\n            <textarea className='textArea-form' placeholder='Hello Mr.PERRET,'></textarea>\r\n          </div>\r\n\r\n          <input type=\"submit\" className=\"item-form button-form\" value=\"Send\"/> \r\n          {/* onclick={} */}\r\n\r\n        </div>      \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nconst http = axios.create({\r\n  baseURL: \"http://localhost:3006/api\",\r\n  headers: {\"Content-type\": \"multipart/form-data\"}\r\n});\r\n\r\nclass ProjectDataService {\r\n\r\n  get getUploadsFiles() {\r\n    return \"http://localhost:3006/uploads/\";\r\n  } \r\n  \r\n  getAll() {\r\n    return http.get(\"/Projects\");\r\n  }\r\n  get(id) {\r\n    return http.get(`/Projects/${id}`);\r\n  }\r\n  create(data) {\r\n    return http.post(\"/Projects\", data);\r\n  }\r\n  update(id, data) {\r\n    return http.put(`/Projects/${id}`, data);\r\n  }\r\n  delete(id) {\r\n    return http.delete(`/Projects/${id}`);\r\n  }\r\n\r\n}\r\nexport default new ProjectDataService();\r\n","import React, { useState, useEffect } from 'react'; //React pour JSX\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\nimport App from \"../../App\"\r\n \r\nexport default function GetAllProject(props) {\r\n\r\n  //----------------------- Initial State -------------------------\r\n  const [projects,setProjects] = useState([]); //Déclare projects en tant qu'array vu qu'on va recevoir un tableau d'objets en json\r\n  const navigate = useNavigate();\r\n\r\n // useEffect = quand le composant est inétgré dans le DOM \r\n  useEffect(()=>{ retrieveProjects() },[]) //notice the empty array here so it only happens once\r\n\r\n  const retrieveProjects = () => {\r\n    ProjectDataService.getAll()\r\n      .then(response => {\r\n        setProjects(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e); \r\n      });\r\n  }\r\n\r\n  function deleteProject(id){ \r\n    //SWAL \r\n    ProjectDataService.delete(id)      \r\n      .then(response => {\r\n        console.log(response.data);\r\n        setProjects(projects.filter(projects => projects.project_id !== id)); //enleve le project supprimé du state pour que ca refresh\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  function redirectToUpdate(id){\r\n    navigate(\"/Project/update/\"+id);\r\n  }\r\n  \r\n\r\n\r\n  // ----------------- JSX ---------------\r\n  return (\r\n    <>\r\n      <App />\r\n      <div className=\"wrapper-project\">\r\n                   \r\n        {projects && projects.map((project) => (\r\n\r\n          <div className=\"item-project\" key={project.project_id}>\r\n\r\n            <div className=\"buttons-project\"> {/* if is_granted('ROLE_ADMIN') */}\r\n              \r\n              <button className=\"deleteProjectButton-project alertDisplayerDelete_JS\" \r\n                onClick={deleteProject.bind(this, project.project_id)}\r\n              >Delete project</button>  {/* CRSF TOKEN */} \r\n\r\n              <button className=\"updateProjectButton-project\" \r\n                onClick={redirectToUpdate.bind(this, project.project_id)}\r\n              >Update project</button>  {/* ->  CRSF TOKEN */}\r\n\r\n            </div>     \r\n\r\n            <span className=\"title-project\">{project.project_name}</span>\r\n\r\n            <span className=\"tag-project\">{project.project_technologies}</span>\r\n\r\n            <img \r\n              className=\"image-project\" \r\n              src={ProjectDataService.getUploadsFiles+project.project_thumbnail_filename}>\r\n            </img>\r\n     \r\n            <Link className=\"link-project\" to={\"/Project/\" + project.project_id}>See More</Link>\r\n            \r\n          </div>\r\n\r\n        ))}\r\n\r\n        {/* if is_granted('ROLE_ADMIN') %} */}\r\n        <Link className=\"buttonAdd-project\" to=\"/Project/create\">Add new project</Link>\r\n\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n \r\n ","import React, { useState, useEffect } from 'react';\r\nimport { Link , useParams , useNavigate } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\nimport App from \"../../App\"\r\n\r\n\r\nexport default function GetOneProject(props) {\r\n\r\n  //----------------------------REDIRECTION APRES click sur bouton update ou incorrect :id-----------------------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (redirect === true) {\r\n      navigate('/Projects');\r\n    }\r\n    if (notFound === true)\r\n    {\r\n      navigate('/NotFound');\r\n    }\r\n  });\r\n\r\n  function redirectToUpdate(id){\r\n    navigate(\"/Project/update/\"+id);\r\n  }\r\n\r\n  // ----------------- Initialize State -------------------\r\n  const [notFound,setNotFound] = useState (false); //id not found\r\n  const [loaded,setLoaded] = useState (false); //data not loaded \r\n\r\n  const [project,setProject] = useState( //déclare project en tant que liste key/value\r\n    {\r\n      project_id: null,\r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: \"\",\r\n      project_images : null,\r\n      project_is_file_format: true,\r\n      project_release_filename: \"\",\r\n      project_release_url: \"\" \r\n    }\r\n  );\r\n\r\n  const [redirect,setRedirect] = useState (false);\r\n\r\n  // ----------------- Get request params -------------------\r\n  const { id } = useParams(); //Retrouve le paramètre id\r\n  // useEffect = quand le composant est inétgré dans le DOM \r\n  useEffect(()=>{ getProject(); },[]) //notice the empty array here so it only happens once\r\n\r\n  const getProject = () => {\r\n    ProjectDataService.get(id)\r\n      .then(response => {\r\n        setProject(response.data);\r\n        console.log(response.data);\r\n        setLoaded(true);\r\n      })\r\n      .catch(e => {\r\n        setNotFound(true);\r\n        console.log(e);\r\n      });\r\n  }\r\n  \r\n  const deleteProject = (id) => { \r\n    //SWAL \r\n    ProjectDataService.delete(id)      \r\n      .then(response => {\r\n        console.log(response.data);\r\n        setRedirect(true); //Redirection vers page virtuelle Project\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <App />\r\n      <div className=\"wrapper-discover\">\r\n        <div className=\"box-discover\">\r\n\r\n          <div className=\"buttons-project\"> {/* if is_granted('ROLE_ADMIN') */}\r\n            \r\n            <button className=\"deleteProjectButton-project alertDisplayerDelete_JS\" \r\n              onClick={deleteProject.bind(this, project.project_id)}\r\n            >Delete project</button>  {/* CRSF TOKEN */} \r\n\r\n            <button className=\"updateProjectButton-project\" \r\n              onClick={redirectToUpdate.bind(this, project.project_id)}\r\n            >Update project</button>  {/* CRSF TOKEN */}\r\n\r\n          </div> \r\n\r\n          <span className=\"item-discover title-discover\">{ project.project_name }</span>\r\n\r\n          <span className=\"item-discover tag-discover\">{ project.project_technologies }</span>  \r\n\r\n          <span className=\"item-discover description-discover\">{ project.project_description }</span>\r\n\r\n          {/* for image in project.project_images */}\r\n\r\n          {loaded && project.project_images.map((image) => (\r\n\r\n          <img \r\n            src={ProjectDataService.getUploadsFiles+image.project_image_filename}\r\n            className=\"item-discover\" \r\n            key={image.project_image_id}>\r\n          </img>\r\n          ))}\r\n\r\n\r\n\r\n          { project.project_is_file_format === true ? \r\n            <a className=\"item-discover link-project\" \r\n              href={ProjectDataService.getUploadsFiles+project.project_release_filename} \r\n              download>Télécharger</a>\r\n          :\r\n            <a className=\"item-discover link-project\" \r\n              href={project.project_release_url} target=\"_blank\">Lien</a>\r\n          }  \r\n\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n ","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function TextInput(props) {\r\n\r\n\tconst [valid, setValid] = useState(props.isValid);\r\n\r\n\treturn (\r\n\t\t<div className=\"item-form\">\r\n\t\t\t<div className=\"label-form\">{props.labelName}</div>\r\n\r\n\t\t\t{/* le champ peut etre multiline ou single-line, et si single-line, small ou normal */}\r\n\r\n\t\t\t{ props.multiline === true ?\r\n\r\n\t\t    <textarea\r\n          className=\"textArea-form\" \r\n          id={props.fieldName}\r\n          value={props.fieldValue} \r\n          onChange={props.onChangeEvent} \r\n          name={props.fieldName}>\r\n        </textarea> \r\n\r\n\t\t\t: \r\n\t\t\t\t<>\r\n\t\t\t\t{ props.small === true ?\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"textFields-form small\" \r\n\t\t\t\t\t\tid={props.fieldName} \r\n\t\t\t\t\t\tvalue={props.fieldValue} \r\n\t\t\t\t\t\tonChange={props.onChangeEvent} \r\n\t\t\t\t\t\tname={props.fieldName}\r\n\t\t      />\r\n\t      :\r\n\t      \t<input \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"textFields-form\" \r\n\t\t\t\t\tid={props.fieldName} \r\n\t\t\t\t\tvalue={props.fieldValue} \r\n\t\t\t\t\tonChange={props.onChangeEvent} \r\n\t\t\t\t\tname={props.fieldName}\r\n\t      \t/>\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t</>\r\n\r\n\t\t\t}\r\n\r\n      { props.isValid === false ?\r\n      \t<div className=\"errorMessage\">{props.validationMessage}</div>\r\n      : null }\r\n\r\n\t\t</div> \r\n \t);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n//Assets\r\nimport deleteLogo from \"../../image/delete.png\";\r\n\r\nexport default function FileInput(props) {\r\n\r\n\tconst [valid, setValid] = useState(props.isValid);\r\n\tconst [removable, setRemovable] = useState(props.isRemovable);\r\n\r\n\treturn (\t\t\r\n\t\t<>\r\n\t\t{ props.isRemovable === false ?\r\n\r\n\t\t\t<div className=\"item-form\">\r\n            \t<div className=\"label-form\">{props.labelName}</div>\r\n\r\n            \t{ props.isMultiFile === true ?\r\n\r\n            \t\t<input \r\n\t            \t\ttype='file' \r\n\t            \t\tmultiple \r\n\t            \t\tname={props.fieldName}             \t\t \r\n\t            \t\tclassName='files-form'\r\n\t            \t\tonChange={props.onChangeEvent}>\r\n            \t\t</input>\r\n\r\n\t\t\t\t:\r\n\r\n\t\t\t\t    <input \r\n\t\t\t\t\t\ttype='file' \r\n\t\t\t\t\t\tname={props.fieldName} \r\n\t\t\t\t\t\tclassName='files-form'\r\n\t\t\t\t\t\tonChange={props.onChangeEvent}>\r\n\t\t            </input>\r\n\t\t\t\t}\r\n\r\n\r\n\t            { props.isValid === false ?\r\n\r\n\t            \t<div className=\"errorMessage\">{props.validationMessage}</div>\r\n\t            : \r\n\t            \tnull \r\n\t            }\r\n\t         </div>\r\n\r\n\t\t:\t\r\n\t\t\t<div className=\"item-form\">\r\n            \t<div className=\"label-form\">{props.labelName}</div>\r\n            \t<div className=\"file-box\">\r\n              \t\t<img src={deleteLogo} className=\"icon-delete\" onClick={props.onResetEvent}></img>\r\n\r\n              \t\t{ props.isMultiFile === true ?\r\n\r\n              \t\t\t<div className=\"file-name\">\r\n              \t\t\t\r\n\t              \t\t{ props.fieldValue.map((image) => (\r\n\t                  \t\t<div key={image.project_image_id}>{image.project_image_filename}</div>             \r\n\t                \t))}\r\n\r\n\t                \t</div>\r\n\t                :\r\n\r\n              \t\t\t<div className=\"file-name\">{props.fieldValue}</div>\r\n              \t\t}\r\n\r\n            \t</div>\r\n          \t</div> \r\n\r\n\t\t}\r\n\t\t</>\r\n\t);\r\n}","import React, { useState, useEffect } from 'react';\r\n//Components\r\nimport TextInput from \"../Form/TextInput\"\r\nimport FileInput from \"../Form/FileInput\"\r\n\r\n//Assets\r\nimport deleteLogo from \"../../image/delete.png\";\r\n\r\nexport default function FormProject(props) {\r\n\r\n  const [project,setProject] = useState(props.project);\r\n  const [removeThumbnailPossibility,setRemoveThumbnailPossibility] = useState(props.removeThumbnailPossibility);\r\n  const [removeImagesPossibility, setRemoveImagesPossibility] = useState(props.removeImagesPossibility);\r\n  const [removeReleaseFilePossibility,setRemoveReleaseFilePossibility] = useState(props.removeReleaseFilePossibility);\r\n\r\n//-------------------------------- JSX -----------------------------------------\r\n  return (\r\n    <div className=\"wrapper-form\">\r\n      <div className=\"box-form\">\r\n     \r\n        {/*----------------------------------------- Name Field ------------------------------------------*/}\r\n        <TextInput \r\n          multiline = {false}\r\n          small = {true}\r\n          labelName=\"Project Name\"\r\n          fieldName=\"project_name\"\r\n          fieldValue={props.project.project_name}\r\n          onChangeEvent={props.onChangeProject_name}\r\n          isValid={props.nameValidation.isValid}\r\n          validationMessage={props.nameValidation.message}>\r\n        </TextInput>\r\n\r\n      {/*----------------------------------------- Technologies Field ----------------------------------------*/}\r\n        <TextInput \r\n          multiline = {false}\r\n          small = {false}\r\n          labelName=\"Source and target technologies\"\r\n          fieldName=\"project_technologies\"\r\n          fieldValue={props.project.project_technologies}\r\n          onChangeEvent={props.onChangeProject_technologies}\r\n          isValid={props.technologiesValidation.isValid}\r\n          validationMessage={props.technologiesValidation.message}>\r\n        </TextInput>\r\n\r\n      {/*----------------------------------------- Description Field ----------------------------------------*/}         \r\n        <TextInput \r\n          multiline = {true}\r\n          small = {false}\r\n          labelName=\"Description\"\r\n          fieldName=\"project_description\"\r\n          fieldValue={props.project.project_description}\r\n          onChangeEvent={props.onChangeProject_description}\r\n          isValid={props.descriptionValidation.isValid}\r\n          validationMessage={props.descriptionValidation.message}>\r\n        </TextInput>\r\n\r\n      {/*----------------------------------------- Thumbnail Field ----------------------------------------*/}\r\n        <FileInput \r\n          isMultiFile={false}\r\n          labelName=\"Thumbnail\"\r\n          fieldName=\"project_thumbnail_filename\"\r\n          onChangeEvent={props.onChangeProject_thumbnail_filename}\r\n          isValid={props.thumbnailValidation.isValid}\r\n          validationMessage={props.thumbnailValidation.message}\r\n          isRemovable={props.removeThumbnailPossibility}\r\n          onResetEvent={props.onResetProject_thumbnail_filename}\r\n          fieldValue={props.project.project_thumbnail_filename}>\r\n        </FileInput>\r\n       \r\n      {/*--------------------------------------------- Images Field--------------------------------------*/}\r\n          <FileInput \r\n            isMultiFile={true}\r\n            labelName=\"Images\"\r\n            fieldName=\"project_images\"\r\n            onChangeEvent={props.onChangeProject_images}\r\n            isValid={props.imagesValidation.isValid}\r\n            validationMessage={props.imagesValidation.message}\r\n            isRemovable={props.removeImagesPossibility}\r\n            onResetEvent={props.onResetProject_images}\r\n            fieldValue={props.project.project_images}>\r\n          </FileInput>\r\n\r\n      {/*--------------------------------------- Format Select------------------------------------------------*/}\r\n        <div className=\"item-form\">\r\n          <div className=\"label-form\">Format</div>\r\n          <select \r\n            className='FormatChoice_JS'\r\n            id=\"project_is_file_format\"  \r\n            value={props.project.project_is_file_format} \r\n            onChange={props.onChangeProject_is_file_format} \r\n            name=\"project_is_file_format\">\r\n              <option value=\"true\">File</option>\r\n              <option value=\"false\">Link</option>\r\n          </select>\r\n        </div>    \r\n\r\n      {/*----------------------------------------- Release Field (URL OR FILE)----------------------------------------------*/}\r\n        { props.project.project_is_file_format === true ?\r\n\r\n          <FileInput \r\n            isMultiFile={false}\r\n            labelName=\"Release File\"\r\n            fieldName=\"project_release_filename\"\r\n            onChangeEvent={props.onChangeProject_release_filename}\r\n            isValid={props.releaseFileValidation.isValid}\r\n            validationMessage={props.releaseFileValidation.message}\r\n            isRemovable={props.removeReleaseFilePossibility}\r\n            onResetEvent={props.onResetProject_release_filename}\r\n            fieldValue={props.project.project_release_filename}>\r\n          </FileInput>\r\n\r\n        :\r\n\r\n          <TextInput \r\n            multiline = {false}\r\n            small = {false}\r\n            labelName=\"Link\"\r\n            fieldName=\"project_release_url\"\r\n            fieldValue={props.project.project_release_url} \r\n            onChangeEvent={props.onChangeProject_release_url}\r\n            isValid={props.releaseUrlValidation.isValid}\r\n            validationMessage={props.releaseUrlValidation.message}>\r\n          </TextInput>\r\n        }\r\n\r\n      {/*----------------------------------------- Button Submit----------------------------------------*/}\r\n        { props.mode === \"create\" ?\r\n          <button className=\"item-form button-form\" onClick={props.saveProject}>Create Project</button>\r\n        :\r\n          <button className=\"item-form button-form\" onClick={props.saveProject}>Update Project</button>\r\n        } \r\n\r\n      </div>\r\n  </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\n//Components\r\nimport App from \"../../App\";\r\nimport FormProject from \"./FormProject\"\r\n\r\nexport default function CreateProject(props) {\r\n\r\n\t//----------------------------REDIRECTION APRES VALIDATION DU FORM-----------------------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (project.project_is_created) {\r\n      navigate('/Projects');\r\n    }\r\n  });\r\n\r\n  //--------------------------------- State Initial -------------------------------------\r\n\r\n\tconst [project,setProject] = useState( //déclare en tant que liste key/value\r\n  { \r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: null,\r\n      project_images: [],\r\n      project_is_file_format: true,\r\n      project_release_filename: null,\r\n      project_release_url: \"\",\r\n      project_is_created: false,\r\n  });\r\n\r\n\tconst [nameValidation, setNameValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [technologiesValidation, setTechnologiesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [descriptionValidation, setDescriptionValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [thumbnailValidation, setThumbnailValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [imagesValidation, setImagesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  }) \r\n\r\n  const [releaseFileValidation, setReleaseFileValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [releaseUrlValidation, setReleaseUrlValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n// ------------------------- Evenementiel (modification du state en fonction des inputs) -------------------------\r\n\r\n  const onChangeProject_name = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_name : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_technologies = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_technologies : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_description = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_description : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_thumbnail_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : e.target.files[0] } //pcq c'est un fichier\r\n    });\r\n  }\r\n\r\n  const onChangeProject_images = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images : e.target.files } //pas d'index pcq c'est multifile\r\n    });\r\n  }\r\n\r\n  const onChangeProject_is_file_format = (e) => {\r\n    let result = true; \r\n    //si on passe e.target.value, project_is_file_format pointera sur un objet et non une valeur\r\n    // du coup setState n'aura plus d'incidence\r\n    if (e.target.value === \"true\")\r\n    {\r\n      result = true;\r\n    }\r\n    else {\r\n      result = false;\r\n    }\r\n    setProject(prevState => {\r\n      return { ...prevState, project_is_file_format : result }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : e.target.files[0]  }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_url = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_url : e.target.value }\r\n    });\r\n  } \r\n\r\n//------------------------------------ CALL API ----------------------------------------------------------\r\n\r\n const saveProject = (e) => {\r\n\r\n    //------------- instanciation d'un objet FormData pour envoyer les données à l'API --------------   \r\n    let data = new FormData(); // --> \"content\" : \"multipart/form-data\"\r\n    data.append('project_name', project.project_name);\r\n    data.append('project_technologies', project.project_technologies);\r\n    data.append('project_description', project.project_description);\r\n    data.append('project_thumbnail_filename', project.project_thumbnail_filename);\r\n\r\n    for (let i = 0; i < project.project_images.length; i++) { // images files\r\n      data.append(`project_images`, project.project_images[i]);\r\n    }    \r\n\r\n    data.append('project_is_file_format', project.project_is_file_format);\r\n    data.append('project_release_filename', project.project_release_filename);\r\n    data.append('project_release_url', project.project_release_url);\r\n\r\n    //--------------------------------- Request --------------------------------------\r\n    ProjectDataService.create(data)\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        console.log(response.data);\r\n        setProject(prevState => {\r\n          return { ...prevState, project_is_created : true }\r\n        });\r\n      }\r\n    })\r\n    .catch(e => {\r\n      if (e.response.status === 422) {\r\n        // Reset des states pour éviter que certains messages persistent même apres correction\r\n        setNameValidation({isValid : true, message : \"\"})\r\n        setTechnologiesValidation({isValid : true, message : \"\"})\r\n        setDescriptionValidation({isValid : true, message : \"\"})\r\n        setThumbnailValidation({isValid : true, message : \"\"})\r\n        setImagesValidation({isValid: true, message:\"\"})\r\n        setReleaseFileValidation({isValid : true, message : \"\"})\r\n        setReleaseUrlValidation({isValid : true, message : \"\"}) \r\n        // Gestion des erreurs et ajout au state error\r\n        e.response.data.errors.forEach(error => {\r\n          switch (error.param) { \r\n            case \"project_name\":\r\n              setNameValidation({isValid : false, message : error.msg});\r\n              break;\r\n            case \"project_technologies\":\r\n              setTechnologiesValidation({isValid : false, message : error.msg});\r\n              break;\r\n            case \"project_description\":\r\n              setDescriptionValidation({isValid : false, message : error.msg});\r\n              break;\r\n            case \"project_thumbnail_filename\":\r\n              setThumbnailValidation({isValid : false, message : error.msg});\r\n              break;\r\n            case \"project_images\":\r\n              setImagesValidation({isValid : false, message : error.msg});\r\n              break;\r\n            case \"project_release_filename\":\r\n              setReleaseFileValidation({isValid : false, message : error.msg});\r\n              break;\r\n            case \"project_release_url\":\r\n              setReleaseUrlValidation({isValid : false, message : error.msg});\r\n              break;\r\n          }          \r\n        });\r\n      }\r\n      else \r\n      {\r\n        //SWAL Server error\r\n      } \r\n    });\r\n  }\r\n\r\n//----------------------------------------------------------- JSX -----------------------------------------------------\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<App></App>\r\n\t\t\t<FormProject\r\n\t\t\t\tmode=\"create\"\r\n\t\t\t\tproject= {project}\r\n\r\n\t\t\t\tonChangeProject_name = {onChangeProject_name}\r\n\t  \t\tonChangeProject_technologies = {onChangeProject_technologies}\r\n\t  \t\tonChangeProject_description = {onChangeProject_description}\r\n\t  \t\tonChangeProject_thumbnail_filename = {onChangeProject_thumbnail_filename}\r\n\t  \t\tonChangeProject_images = {onChangeProject_images}\r\n\t  \t\tonChangeProject_is_file_format = {onChangeProject_is_file_format}\r\n\t  \t\tonChangeProject_release_filename = {onChangeProject_release_filename}\r\n\t  \t\tonChangeProject_release_url = {onChangeProject_release_url}\r\n\r\n\t  \t\tremoveThumbnailPossibility = {false}\r\n\t  \t\tremoveImagesPossibility = {false} \r\n\t  \t\tremoveReleaseFilePossibility = {false}\r\n\t  \t\tonResetProject_images = {null}\r\n\t  \t\tonResetProject_thumbnail_filename = {null} \r\n\t  \t\tonResetProject_release_filename = {null}\r\n\r\n\t\t\t\tnameValidation = {nameValidation}\r\n\t\t\t\ttechnologiesValidation = {technologiesValidation}\r\n\t\t\t\tdescriptionValidation = {descriptionValidation}\r\n\t\t\t\tthumbnailValidation = {thumbnailValidation}\r\n\t\t\t\timagesValidation = {imagesValidation}\r\n\t\t\t\treleaseFileValidation = {releaseFileValidation}\r\n\t\t\t\treleaseUrlValidation = {releaseUrlValidation}\r\n\r\n\t\t\t\tsaveProject = {saveProject}\r\n\t\t\t>\r\n\t\t\t</FormProject>\r\n\t\t</>\r\n\r\n\t);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\n//Components\r\nimport App from \"../../App\";\r\nimport FormProject from \"./FormProject\"\r\n\r\nexport default function UpdateProject(props) {\r\n\r\n  //----------------------------REDIRECTION APRES VALIDATION DU FORM ou 404 -----------------------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (project.project_is_updated) {\r\n      navigate('/Projects');\r\n    }\r\n    if (notFound === true)\r\n    {\r\n      navigate('/NotFound');\r\n    }\r\n    if (dataFound === true)\r\n    {\r\n      setRemoveButtons();\r\n    }\r\n\r\n  });\r\n\r\n  //--------------------------------- State Initial -------------------------------------\r\n  const [notFound,setNotFound] = useState (false); //id not found\r\n\r\n\tconst [project,setProject] = useState( //déclare en tant que liste key/value\r\n  { \r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: null,\r\n      project_images: [],\r\n      project_is_file_format: true,\r\n      project_release_filename: null,\r\n      project_release_url: \"\",\r\n      project_is_updated: false,\r\n  });\r\n\r\n  //Pour reset une et une seule fois, en mode update, le champ file \r\n  // cad supprimer le fichier côté serveur\r\n  const [dataFound,setDataFound] = useState(false);\r\n  const [removeThumbnailPossibility,setRemoveThumbnailPossibility] = useState(false);\r\n  const [removeImagesPossibility, setRemoveImagesPossibility] = useState(false);\r\n  const [removeReleaseFilePossibility,setRemoveReleaseFilePossibility] = useState(false);\r\n\r\n\tconst [nameValidation, setNameValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [technologiesValidation, setTechnologiesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [descriptionValidation, setDescriptionValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [thumbnailValidation, setThumbnailValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [imagesValidation, setImagesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  }) \r\n\r\n  const [releaseFileValidation, setReleaseFileValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [releaseUrlValidation, setReleaseUrlValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  // --------------- actualisation du state pour MODE UPDATE (herité avec props) -------------------------------\r\n  \r\n  const { id } = useParams(); //Retrouve le paramètre id\r\n  useEffect(() => { // à l'instanciation du component     \r\n      getProject(id);\r\n  },[]) //notice the empty array here so it only happens once \r\n\r\n  const getProject = (id) => {\r\n    ProjectDataService.get(id)\r\n      .then(response => {\r\n        setProject(response.data);\r\n        setDataFound(true); //pour définir les options de removes avec croix rouge  \r\n        console.log(\"DATA FOUND\"); //TEST  \r\n      })\r\n      .catch(e => {\r\n        setNotFound(true);\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  const setRemoveButtons = () => {\r\n    setRemoveThumbnailPossibility(true); //Enclenche la possibilité de supprimer le fichier côté serveur\r\n    setRemoveImagesPossibility(true);\r\n    if (project.project_is_file_format === true) //seulement si c'est un release de type file\r\n    {\r\n      setRemoveReleaseFilePossibility(true); //Enclenche la possibilité de supprimer le fichier côté serveur\r\n    }\r\n    setDataFound(undefined); //Reset pour éviter que ca ne relance cette fonction à chaque modif du state\r\n  }\r\n\r\n// ------------------------- Evenementiel (modification du state en fonction des inputs) -------------------------\r\n\r\n  const onChangeProject_name = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_name : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_technologies = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_technologies : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_description = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_description : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_thumbnail_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : e.target.files[0] } //pcq c'est un fichier\r\n    });\r\n  }\r\n\r\n  const onResetProject_thumbnail_filename = () => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : null } //pcq c'est un fichier\r\n    });\r\n    setRemoveThumbnailPossibility(false);\r\n  }\r\n\r\n  const onChangeProject_images = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images : e.target.files } //pas d'index pcq c'est multifile\r\n    });\r\n  }\r\n\r\n  const onResetProject_images = () => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images_updated : true } //pcq c'est un fichier\r\n    });\r\n    setRemoveImagesPossibility(false);\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images_updated : true }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_is_file_format = (e) => {\r\n    let result = true; \r\n    //si on passe e.target.value, project_is_file_format pointera sur un objet et non une valeur\r\n    // du coup setState n'aura plus d'incidence\r\n    if (e.target.value === \"true\")\r\n    {\r\n      result = true;\r\n    }\r\n    else {\r\n      result = false;\r\n    }\r\n    setProject(prevState => {\r\n      return { ...prevState, project_is_file_format : result }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : e.target.files[0]  }\r\n    });\r\n  }\r\n\r\n  const onResetProject_release_filename = () => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : null } //pcq c'est un fichier\r\n    });\r\n    setRemoveReleaseFilePossibility(false);\r\n  }\r\n\r\n  const onChangeProject_release_url = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_url : e.target.value }\r\n    });\r\n  } \r\n\r\n//------------------------------------ CALL API ----------------------------------------------------------\r\n\r\n  const saveProject = (e) => {\r\n\r\n    //------------- instanciation d'un objet FormData pour envoyer les données à l'API --------------   \r\n    let data = new FormData(); // --> \"content\" : \"multipart/form-data\"\r\n    data.append('project_name', project.project_name);\r\n    data.append('project_technologies', project.project_technologies);\r\n    data.append('project_description', project.project_description);\r\n    data.append('project_thumbnail_filename', project.project_thumbnail_filename);\r\n\r\n    // images files\r\n    data.append('project_images_updated', project.project_images_updated);\r\n    //Si les images ont été modifiés par l'utilisateur\r\n    if ( project.project_images_updated === true) \r\n    {\r\n      for (let i = 0; i < project.project_images.length; i++) {\r\n        data.append(`project_images`, project.project_images[i]);\r\n      }    \r\n    }  \r\n\r\n    data.append('project_is_file_format', project.project_is_file_format);\r\n    data.append('project_release_filename', project.project_release_filename);\r\n    data.append('project_release_url', project.project_release_url);\r\n\r\n    //--------------------------------- Request --------------------------------------\r\n    ProjectDataService.update(id,data)\r\n      .then(response => {\r\n        setProject(prevState => {\r\n          return { ...prevState, project_is_updated : true }\r\n        });\r\n      })\r\n      .catch(e => {\r\n        if (e.response.status === 422) {\r\n          // Reset des states pour éviter que certains messages persistent même apres correction\r\n          setNameValidation({isValid : true, message : \"\"})\r\n          setTechnologiesValidation({isValid : true, message : \"\"})\r\n          setDescriptionValidation({isValid : true, message : \"\"})\r\n          setThumbnailValidation({isValid : true, message : \"\"})\r\n          setReleaseFileValidation({isValid : true, message : \"\"})\r\n          setReleaseUrlValidation({isValid : true, message : \"\"}) \r\n          // Gestion des erreurs et ajout au state error\r\n          e.response.data.errors.forEach(error => {\r\n            switch (error.param) {\r\n              case \"project_name\":\r\n              setNameValidation({isValid : false, message : error.msg})\r\n              break;\r\n              case \"project_technologies\":\r\n              setTechnologiesValidation({isValid : false, message : error.msg})\r\n              break;\r\n              case \"project_description\":\r\n              setDescriptionValidation({isValid : false, message : error.msg})\r\n              break;\r\n              case \"project_thumbnail_filename\":\r\n              setThumbnailValidation({isValid : false, message : error.msg})\r\n              break;\r\n              case \"project_images\":\r\n              setImagesValidation({isValid : false, message : error.msg});\r\n              break;\r\n              case \"project_release_filename\":\r\n              setReleaseFileValidation({isValid : false, message : error.msg})\r\n              break;\r\n              case \"project_release_url\":\r\n              setReleaseUrlValidation({isValid : false, message : error.msg})\r\n              break;\r\n            }\r\n          });\r\n\r\n        }\r\n        else \r\n        {\r\n          //SWAL Server error\r\n        }  \r\n      });\r\n  }\r\n\r\n\r\n//----------------------------------------------------------- JSX -----------------------------------------------------\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<App></App>\r\n\t\t\t<FormProject\r\n\t\t\t\tmode=\"update\"\r\n\t\t\t\tproject= {project}\r\n\r\n\t\t\t\tonChangeProject_name = {onChangeProject_name}\r\n\t  \t\tonChangeProject_technologies = {onChangeProject_technologies}\r\n\t  \t\tonChangeProject_description = {onChangeProject_description}\r\n\t  \t\tonChangeProject_thumbnail_filename = {onChangeProject_thumbnail_filename}\r\n\t  \t\tonChangeProject_images = {onChangeProject_images}\r\n\t  \t\tonChangeProject_is_file_format = {onChangeProject_is_file_format}\r\n\t  \t\tonChangeProject_release_filename = {onChangeProject_release_filename}\r\n\t  \t\tonChangeProject_release_url = {onChangeProject_release_url}\r\n\r\n\t  \t\tremoveThumbnailPossibility = {removeThumbnailPossibility}\r\n\t  \t\tremoveImagesPossibility = {removeImagesPossibility} \r\n\t  \t\tremoveReleaseFilePossibility = {removeReleaseFilePossibility}\r\n\r\n\t  \t\tonResetProject_images = {onResetProject_images}\r\n\t  \t\tonResetProject_thumbnail_filename = {onResetProject_thumbnail_filename} \r\n\t  \t\tonResetProject_release_filename = {onResetProject_release_filename}\r\n\r\n\t\t\t\tnameValidation = {nameValidation}\r\n\t\t\t\ttechnologiesValidation = {technologiesValidation}\r\n\t\t\t\tdescriptionValidation = {descriptionValidation}\r\n\t\t\t\tthumbnailValidation = {thumbnailValidation}\r\n\t\t\t\timagesValidation = {imagesValidation}\r\n\t\t\t\treleaseFileValidation = {releaseFileValidation}\r\n\t\t\t\treleaseUrlValidation = {releaseUrlValidation}\r\n\r\n\t\t\t\tsaveProject = {saveProject}\r\n\t\t\t>\r\n\t\t\t</FormProject>\r\n\t\t</>\r\n\r\n\t);\r\n}","import React, { Component } from \"react\";\r\nimport App from \"../App\";\r\nimport logo from \"../image/404.png\";\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <>\r\n      <App />\r\n      <div className=\"wrapper-form\">\r\n        <img className=\"not-found-image\" src={logo}></img>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n ","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Contact from \"./components/Contact\";\nimport GetAllProject from \"./components/Project/GetAllProject\";\nimport GetOneProject from \"./components/Project/GetOneProject\";\nimport CreateProject from \"./components/Project/CreateProject\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport NotFound from \"./components/NotFound\";\n\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <Routes>\n      <Route exact path=\"/\" element={<Home />} />\n      <Route path=\"/Contact\" element={<Contact />} />\n      <Route path=\"/Projects\" element={<GetAllProject />} />\n      <Route path=\"/Project/:id\" element={<GetOneProject />} />\n      <Route path=\"/Project/create\" element={<CreateProject/>} />\n      <Route path=\"/Project/update/:id\" element={<UpdateProject/>} /> \n      <Route path=\"/404\" element={<NotFound/>} />\n      <Route path=\"*\" element={<NotFound/>} />\n\n    </Routes>\n  </BrowserRouter> \n); //render l'argument 1 <JSX> dans l'argument 2 <root element>"],"sourceRoot":""}