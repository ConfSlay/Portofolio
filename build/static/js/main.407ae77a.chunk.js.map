{"version":3,"sources":["services/auth.service.js","Base.js","components/Home.js","components/Auth/IdentifiantField.js","components/Auth/PasswordField.js","components/Auth/AuthForm.js","components/ToastDisplayer.js","components/Auth/Login.js","components/Contact.js","services/project.service.js","components/Project/ButtonWithBorder.js","components/Project/GetAllProject.js","components/Project/Caroussel.js","components/Project/GetOneProject.js","components/Form/TextInput.js","components/Form/FileInput.js","components/Project/FormProject.js","components/Project/CreateProject.js","components/Project/UpdateProject.js","components/NotFound.js","App.js","index.js","image/delete.png","image/border.svg","image/Thunder.svg","image/icons/Linkedin.svg","image/icons/Github.svg","image/icons/sendIcon.svg","image/404.png","image/Button-border.svg"],"names":["API_URL","AuthService","login","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","username","password","authentification","wrap","_context","prev","next","axios","post","catch","error","sent","abrupt","localStorage","setItem","JSON","stringify","data","stop","_x","_x2","apply","this","arguments","logout","removeItem","then","response","getCurrentUser","parse","getItem","App","props","useEffect","document","querySelector","addEventListener","classList","toggle","contains","menuBurgerDisappearing","react_default","createElement","Fragment","id","className","react_router_dom","to","src","logo","onClick","isAdmin","class","Home","IdentifiantField","labelName","type","fieldName","value","fieldValue","onChange","onChangeEvent","name","PasswordField","AuthForm","UsernameFieldName","UsernameFieldValue","OnChangeUsername","PasswordFieldName","PasswordFieldValue","OnChangePassword","isValid","validationMessage","submitAuth","ToastDisplayer","isError","message","Swal","fire","position","icon","title","iconColor","background","color","toast","showConfirmButton","showCancelButton","timer","Login","navigate","useNavigate","authentificated","_useState","useState","_useState2","slicedToArray","setUsername","_useState3","_useState4","setPassword","_useState5","_useState6","setIsValid","_useState7","_useState8","setAuthentificated","_useState9","_useState10","disabledSubmit","setDisabledSubmit","e","console","log","target","Contact","goToSocial","window","open","border","sendIcon","placeholder","linkedinLogo","githubLogo","http","create","baseURL","headers","Content-type","project_service","get","concat","put","delete","ButtonWithBorder","isInApp","ButtonTo","ButtonValue","isDownload","href","GetAllProject","_this","projects","setProjects","retrieveProjects","ProjectDataService","getAll","deleteProject","confirmButtonText","cancelButtonText","confirmButtonColor","cancelButtonColor","result","isConfirmed","filter","project_id","redirectToUpdate","map","project","key","bind","project_name","project_technologies","getUploadsFiles","project_thumbnail_filename","Caroussel","settings","dots","infinite","speed","slidesToShow","slidesToScroll","lib_default","loaded","project_images","image","project_image_filename","project_image_id","GetOneProject","redirect","notFound","setNotFound","setLoaded","project_description","project_is_file_format","project_release_filename","project_release_url","setProject","setRedirect","useParams","getProject","project_is_youtube_not_images","project_youtube_link","allow","allowfullscreen","TextInput","multiline","small","FileInput","isRemovable","isMultiFile","multiple","deleteLogo","onResetEvent","FormProject","removeThumbnailPossibility","removeImagesPossibility","removeReleaseFilePossibility","onChangeProject_name","nameValidation","onChangeProject_technologies","technologiesValidation","onChangeProject_description","descriptionValidation","onChangeProject_thumbnail_filename","thumbnailValidation","onResetProject_thumbnail_filename","onChangeProject_is_youtube_not_images","onChangeProject_images","imagesValidation","onResetProject_images","onChangeProject_youtube_link","youtubeLinkValidation","onChangeProject_is_file_format","onChangeProject_release_filename","releaseFileValidation","onResetProject_release_filename","onChangeProject_release_url","releaseUrlValidation","mode","saveProject","CreateProject","project_is_created","setNameValidation","setTechnologiesValidation","setDescriptionValidation","_useState11","_useState12","setThumbnailValidation","_useState13","_useState14","setYoutubeLinkValidation","_useState15","_useState16","setImagesValidation","_useState17","_useState18","setReleaseFileValidation","_useState19","_useState20","setReleaseUrlValidation","prevState","objectSpread","files","FormData","append","i","length","status","errors","forEach","param","msg","UpdateProject","project_is_updated","dataFound","setRemoveButtons","setDataFound","setRemoveThumbnailPossibility","setRemoveImagesPossibility","setRemoveReleaseFilePossibility","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","undefined","project_images_updated","update","NotFound","admin","setIsAdmin","Base_App","page","ReactDOM","createRoot","getElementById","render","react_router","exact","path","element","App_App","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.407ae77a.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst API_URL = \"http://localhost:3006/api/auth/\";\r\n\r\nconst login = async (username, password) => {\r\n\r\n  const authentification = await axios.post(API_URL + \"login\", {username,password,})\r\n    .catch(error => { //tout code http autre que 200 sera ici\r\n      return false;\r\n  });\r\n\r\n\r\n  if (authentification === false)\r\n  {\r\n    return false;\r\n  }\r\n  else \r\n  {\r\n    localStorage.setItem(\"user\", JSON.stringify(authentification.data));\r\n    return true;\r\n  }\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n  return axios.post(API_URL + \"logout\").then((response) => {\r\n    return response.data;\r\n  });\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  \r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n  \r\n};\r\n\r\nconst AuthService = {\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n}\r\n\r\nexport default AuthService;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link , useNavigate } from \"react-router-dom\";\r\n//import logo from \"./image/thunderParticle.png\";\r\nimport logo from \"./image/Thunder.svg\";\r\n\r\n\r\n\r\nexport default function App(props) {\r\n\r\n    \r\n    // ----- Component mount --------  \r\n    useEffect(()=>{ \r\n        // ---- Menu burger Animation et Display des composants burger -----------\r\n        document.querySelector(\".iconMenuBox\").addEventListener('click', function() {\r\n            // Icon\r\n            document.querySelector(\".icon-1\").classList.toggle('a');\r\n            document.querySelector(\".icon-2\").classList.toggle('c');\r\n            document.querySelector(\".icon-3\").classList.toggle('b');\r\n\r\n            // Menu\r\n            if (document.querySelector(\".burgerMenuBox\").classList.contains('appearing')  \r\n                || document.querySelector(\".burgerMenuBox\").classList.contains('disappearing') )\r\n            {\r\n                document.querySelector(\".burgerMenuBox\").classList.toggle('disappearing');\r\n                document.querySelector(\".burgerMenuBox\").classList.toggle('appearing');\r\n            }\r\n            else\r\n            {\r\n                document.querySelector(\".burgerMenuBox\").classList.toggle('appearing');\r\n            }\r\n        });\r\n    },[]); //notice the empty array here so it only happens once when the component is up\r\n\r\n    const menuBurgerDisappearing = () => {\r\n\r\n        // Fais disparaitre le defilement du menu burger à chaque clic sur un lien vu que c'est une SPA\r\n        //icon\r\n        document.querySelector(\".icon-1\").classList.toggle('a');\r\n        document.querySelector(\".icon-2\").classList.toggle('c');\r\n        document.querySelector(\".icon-3\").classList.toggle('b');\r\n        //menu\r\n        document.querySelector(\".burgerMenuBox\").classList.toggle('disappearing');\r\n        document.querySelector(\".burgerMenuBox\").classList.toggle('appearing');\r\n    };\r\n\r\n\r\n\r\n    // ------------ JSX ------------------\r\n    return (\r\n      <>   \r\n        <div id=\"background\"></div> \r\n\r\n        <div className=\"Header\">\r\n            <Link className=\"leftBox\" to=\"/\">\r\n                <img className=\"itemLeftBox imageHeader\" src={logo}></img> \r\n                <span className=\"itemLeftBox titleHeader\">\r\n                    <div className=\"titleHeader-top\">Richard PERRET</div>\r\n                    <div className=\"hiding-titleHeader-bot\">Richard PERRET</div>\r\n                    <div className=\"titleHeader-bot\">Richard PERRET</div>\r\n                </span>\r\n            </Link>\r\n\r\n            {/* Version Mobile */}\r\n\r\n            <div className=\"iconMenuBox\">\r\n                <div className=\"icon-1\"></div>\r\n                <div className=\"icon-2\"></div>\r\n                <div className=\"icon-3\"></div>\r\n            </div>\r\n\r\n            <div className=\"burgerMenuBox\">    \r\n                <Link className=\"itemBugerMenuBox\" to=\"/Projects\"  onClick={menuBurgerDisappearing}>PROJECTS</Link>\r\n                <Link className=\"itemBugerMenuBox\" to=\"/Contact\"  onClick={menuBurgerDisappearing}>CONTACT</Link>\r\n            </div>\r\n\r\n            {/* Version Desktop */}\r\n\r\n            <div className=\"linksBox\">\r\n                <Link className=\"itemLinksBox\" to=\"/Contact\">CONTACT</Link>\r\n                <Link className=\"itemLinksBox\" to=\"/Projects\">PROJECTS</Link> \r\n            </div>         \r\n        </div>\r\n\r\n        { props.isAdmin === true ? \r\n            <button class=\"logoutBubble\" onClick={props.logout}>Logout</button>\r\n        :\r\n            null\r\n        }   \r\n      </>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport App from \"../App\"\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <>\r\n    </>\r\n  );\r\n}\r\n ","import React, { Component } from \"react\";\r\n\r\nexport default function IdentifiantField(props) {\r\n\r\n  return (\r\n    <div className=\"item-form\">\r\n      <div className=\"label-form\">{props.labelName}</div>\r\n\r\n      <input \r\n        type=\"text\" \r\n        className=\"textFields-form small\"\r\n        id={props.fieldName} \r\n        value={props.fieldValue} \r\n        onChange={props.onChangeEvent} \r\n        name={props.fieldName}\r\n      />\r\n\r\n    </div>\r\n  );\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default function   PasswordField(props) {\r\n\r\n  return (\r\n    <div className=\"item-form\">\r\n      <div className=\"label-form\">{props.labelName}</div>\r\n\r\n      <input \r\n        type=\"password\" \r\n        className=\"textFields-form small\"\r\n        id={props.fieldName} \r\n        value={props.fieldValue} \r\n        onChange={props.onChangeEvent} \r\n        name={props.fieldName}\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { Component } from \"react\";\r\nimport App from \"../../App\";\r\nimport IdentifiantField from \"./IdentifiantField\";\r\nimport PasswordField from \"./PasswordField\";\r\n\r\nexport default function AuthForm(props) {\r\n\r\n  return (\r\n\r\n      <div className=\"wrapper-form\">\r\n        <div className=\"box-form\">\r\n\r\n          <IdentifiantField\r\n            labelName=\"Username\"\r\n            fieldName={props.UsernameFieldName}\r\n            fieldValue={props.UsernameFieldValue}\r\n            onChangeEvent={props.OnChangeUsername}\r\n          >\r\n          </IdentifiantField>\r\n\r\n          <PasswordField\r\n            labelName=\"Password\"\r\n            fieldName={props.PasswordFieldName}\r\n            fieldValue={props.PasswordFieldValue}\r\n            onChangeEvent={props.OnChangePassword}\r\n          >\r\n          </PasswordField>\r\n\r\n          { props.isValid === false ?\r\n\r\n            <div className=\"item-form errorMessage\">{props.validationMessage}</div>\r\n          : \r\n                null \r\n          }\r\n\r\n          <button className=\"item-form button-form\" onClick={props.submitAuth}>Connect</button>\r\n\r\n        </div>\r\n      </div>\r\n  );\r\n}","import Swal from \"sweetalert2\";\r\n \r\nexport default function ToastDisplayer(isError, message) {\r\n\r\n\tif (isError === true) { // Error Alert\r\n\r\n\t\tSwal.fire({\r\n\t\t\tposition: 'center',\r\n\t\t\ticon: 'error',\r\n\t\t\ttitle: message,\r\n\t\t\ticonColor : 'rgb(232,16,41)',\r\n\t\t\tbackground: 'rgb(33,33,33)',\r\n\t\t\tcolor : 'rgb(255,255,255)',\r\n\t\t\ttoast : true,\r\n\t\t\tshowConfirmButton: false,\r\n\t        showCancelButton: false,\r\n\t\t\ttimer: 2000\r\n\t\t}); // disparait 2 sec apres instanciation\r\n\r\n\t}\r\n\telse { //Success Alert\r\n\r\n\t\tSwal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: message, \r\n            iconColor : 'rgb(51,204,51)',\r\n            background: 'rgb(33,33,33)',\r\n            color : 'rgb(255,255,255)',\r\n            toast : true,\r\n            showConfirmButton: false,\r\n            showCancelButton: false,\r\n            timer: 2000\r\n        }); // disparait 2 sec apres instanciation\r\n\r\n\t}\r\n\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport App from \"../../App\";\r\nimport AuthForm from \"./AuthForm\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport ToastDisplayer from \"../ToastDisplayer\";\r\n\r\n\r\nexport default function Login(props) {\r\n\r\n\t//--------------REDIRECTION APRES VALIDATION DU FORM--------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (authentificated === true) {\r\n      navigate('/Projects');\r\n    }\r\n  });\r\n\r\n  //---------------State ---------------------\r\n\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [isValid, setIsValid] = useState(true); // Validation du form\r\n\tconst [authentificated, setAuthentificated] = useState(false); // Résultat Auth\r\n\tconst [disabledSubmit, setDisabledSubmit] = useState(false); // Bloquage du bouton submit durant process\r\n\r\n\t// --------- Events -----------------------\r\n\r\n\tconst OnChangeUsername = (e) => { setUsername(e.target.value);};\r\n\r\n\tconst OnChangePassword = (e) => { setPassword(e.target.value);};\r\n\r\n\tconst submitAuth = async (e) => {\r\n\t\tif (disabledSubmit === false) {\r\n\t\t\tconsole.log(\"in\");\r\n\r\n\t\t\tsetDisabledSubmit(true); //Blocage du bouton\r\n\t\t\tconst Authentificated = await AuthService.login(username,password);\r\n\r\n\t\t\tif (Authentificated) {\r\n\t\t\t\tsetIsValid(true);\r\n\t\t\t\tsetAuthentificated(true);\r\n\t\t\t\tToastDisplayer(false,\"Hello senpai :) \");\r\n\t\t\t}\t\r\n\t\t\telse {\r\n\t\t\t\tsetIsValid(false);\r\n\t\t\t}\t\r\n\r\n\t\t\tsetDisabledSubmit(false); //déblocage du bouton\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\t// ------------- JSX ---------------\r\n  return (\r\n\r\n  \t<AuthForm\r\n\t\t\tUsernameFieldName = \"user_username\"\r\n\t\t\tUsernameFieldValue = {username}\r\n\t\t\tOnChangeUsername = {OnChangeUsername}\r\n\t\t\tPasswordFieldName = \"user_password\"\r\n\t\t\tPasswordFieldValue = {password}\r\n\t\t\tOnChangePassword = {OnChangePassword}\r\n\t\t\tsubmitAuth = {submitAuth}\r\n\t\t\tisValid = {isValid}\r\n\t\t\tvalidationMessage = \"Authentification failed\">\t\t\r\n    </AuthForm>\r\n\r\n  );\r\n}","import React, { useState , useEffect }  from \"react\"; //JSX\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport App from \"../App\";\r\nimport ContactParticles from \"./particles/ContactParticles\";\r\nimport linkedinLogo from \"../image/icons/Linkedin.svg\";\r\nimport githubLogo from \"../image/icons/Github.svg\" ;\r\nimport sendIcon from \"../image/icons/sendIcon.svg\" ;\r\nimport border from \"../image/border.svg\" ;\r\n \r\nexport default function Contact(props) {\r\n\r\n  //---------------- STATE ----------------\r\n  const [disabledSubmit, setDisabledSubmit] = useState(false); // Bloquage du bouton submit durant process\r\n\r\n  const sendMessage = () => {\r\n    if (disabledSubmit === false){\r\n      setDisabledSubmit(true);\r\n      // DO STUFF\r\n      // ....\r\n      setDisabledSubmit(false);\r\n    }\r\n  };\r\n\r\n  const goToSocial = (e) => {\r\n    switch (e) {\r\n      case \"linkedin\":\r\n        window.open(\"https://www.linkedin.com/in/richardperret/\", \"_blank\") //LinkedIn\r\n        break;\r\n      case \"github\":\r\n        window.open(\"https://github.com/ConfSlay\", \"_blank\") //Github\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"content-container\">\r\n\r\n      <img src={border} className=\"border-top-left\"></img>\r\n      <img src={border} className=\"border-bot-right\"></img>\r\n\r\n      <div className=\"title-container\">\r\n        <div className=\"title grey\">WANT TO GET</div>\r\n        <div className=\"title blue\">IN TOUCH ?</div>\r\n      </div>\r\n\r\n      <div className=\"box-form-contact\">\r\n        <img className=\"button-form-contact\" src={sendIcon} onClick={sendMessage}></img>\r\n        <div className=\"title-form-contact\">Send me a message</div>\r\n        <input type=\"text\" className='textFields-form-contact' placeholder='Name'></input>\r\n        <input type=\"text\" className='textFields-form-contact' placeholder='Email'></input>\r\n        <textarea className='textArea-form-contact' placeholder='Message'></textarea>           \r\n      </div>    \r\n\r\n      <div className=\"social-container\">\r\n        <div className=\"linkedin-container\" onClick={() => {goToSocial(\"linkedin\")} } >\r\n          <img src={linkedinLogo}></img>\r\n        </div>\r\n        <div className=\"github-container\" onClick={() => {goToSocial(\"github\")} } >\r\n          <img src={githubLogo}></img>\r\n        </div>\r\n      </div>  \r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nconst http = axios.create({\r\n  baseURL: \"http://localhost:3006/api\",\r\n  headers: {\"Content-type\": \"multipart/form-data\"}\r\n});\r\n\r\nclass ProjectDataService {\r\n\r\n  get getUploadsFiles() {\r\n    return \"http://localhost:3006/uploads/\";\r\n  } \r\n  \r\n  getAll() {\r\n    return http.get(\"/Projects\");\r\n  }\r\n  get(id) {\r\n    return http.get(`/Projects/${id}`);\r\n  }\r\n  create(data) {\r\n    return http.post(\"/Projects\", data);\r\n  }\r\n  update(id, data) {\r\n    return http.put(`/Projects/${id}`, data);\r\n  }\r\n  delete(id) {\r\n    return http.delete(`/Projects/${id}`);\r\n  }\r\n\r\n}\r\nexport default new ProjectDataService();\r\n","import React, { useState , useEffect }  from \"react\"; //JSX\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport ButtonBorder from \"../../image/Button-border.svg\" ;\r\n\r\n \r\nexport default function ButtonWithBorder(props) {\r\n\r\n  return (\r\n  <>\r\n    { props.isInApp === true ?\r\n      <Link className=\"button-container-project\" to={props.ButtonTo}>\r\n        <div className=\"button-border-project button-border-project-bot-left\"></div>\r\n        <div className=\"button-border-project button-border-project-top-right\"></div>\r\n        <div className=\"button-text-project\" >{props.ButtonValue}</div>\r\n      </Link>  \r\n    :\r\n    <>\r\n      { props.isDownload === true ?\r\n\r\n        <a className=\"button-container-project\" href={props.ButtonTo}>\r\n          <div className=\"button-border-project button-border-project-bot-left\"></div>\r\n          <div className=\"button-border-project button-border-project-top-right\"></div>\r\n          <div className=\"button-text-project\" >{props.ButtonValue}</div>\r\n        </a>\r\n      :\r\n        <a className=\"button-container-project\" href={props.ButtonTo} target=\"_blank\">\r\n          <div className=\"button-border-project button-border-project-bot-left\"></div>\r\n          <div className=\"button-border-project button-border-project-top-right\"></div>\r\n          <div className=\"button-text-project\" >{props.ButtonValue}</div>\r\n        </a>\r\n      }\r\n    </>\r\n    }\r\n  </>\r\n\r\n\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react'; //React pour JSX\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport App from \"../../App\";\r\nimport ToastDisplayer from \"../ToastDisplayer\";\r\nimport ButtonWithBorder from \"./ButtonWithBorder\";\r\n \r\nexport default function GetAllProject(props) {\r\n\r\n  //----------------------- Initial State -------------------------\r\n  const [projects,setProjects] = useState([]); //Déclare projects en tant qu'array vu qu'on va recevoir un tableau d'objets en json\r\n  const navigate = useNavigate();\r\n\r\n // useEffect avec ,[])  = quand le composant est inétgré dans le DOM \r\n  useEffect(()=>{ \r\n\r\n    retrieveProjects(); \r\n\r\n  },[]) //notice the empty array here so it only happens once\r\n\r\n  const retrieveProjects = () => {\r\n    ProjectDataService.getAll()\r\n      .then(response => {\r\n        setProjects(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e); \r\n      });\r\n  }\r\n\r\n  function deleteProject(id){ \r\n\r\n    //SWAL \r\n    Swal.fire({\r\n      position: 'center',\r\n      icon: 'warning',\r\n      title: 'Do you really want to delete this project ?',\r\n      showCancelButton: true,\r\n      showConfirmButton: true,\r\n      confirmButtonText: 'Oui',\r\n      cancelButtonText: \"Non\",\r\n      iconColor : 'rgb(232,16,41)',\r\n      confirmButtonColor: \"rgb(232,16,41)\",\r\n      cancelButtonColor: \"rgb(61,61,61)\",\r\n      background: 'rgb(33,33,33)',\r\n      color : 'rgb(255,255,255)'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        //DELETE PROJECT\r\n        ProjectDataService.delete(id)      \r\n        .then(response => {\r\n          setProjects(projects.filter(projects => projects.project_id !== id)); //enleve le project supprimé du state pour que ca refresh\r\n          ToastDisplayer(false,\"Project deleted !\");\r\n        })\r\n        .catch(e => {\r\n          ToastDisplayer(true,\"An error occured ...\");\r\n          console.log(e);\r\n        });\r\n          \r\n      }\r\n    });\r\n  }\r\n\r\n  function redirectToUpdate(id){\r\n    navigate(\"/Project/update/\"+id);\r\n  }\r\n  \r\n\r\n\r\n  // ----------------- JSX ---------------\r\n  return (\r\n    <div className=\"wrapper-project\">\r\n                 \r\n      {projects && projects.map((project) => (\r\n\r\n        <div className=\"item-project\" key={project.project_id}>\r\n\r\n          { props.isAdmin ? \r\n\r\n            <div className=\"buttons-project\"> \r\n              \r\n              <button className=\"deleteProjectButton-project alertDisplayerDelete_JS\" \r\n                onClick={deleteProject.bind(this, project.project_id)}\r\n              >Delete project</button>\r\n\r\n              <button className=\"updateProjectButton-project\" \r\n                onClick={redirectToUpdate.bind(this, project.project_id)}\r\n              >Update project</button> \r\n\r\n            </div>\r\n\r\n          :\r\n            null\r\n          }\r\n   \r\n\r\n          <span className=\"title-project\">{project.project_name}</span>\r\n\r\n          <span className=\"tag-project\">{project.project_technologies}</span>\r\n\r\n          <img \r\n            className=\"image-project\" \r\n            src={ProjectDataService.getUploadsFiles+project.project_thumbnail_filename}>\r\n          </img>\r\n          \r\n          <ButtonWithBorder \r\n            ButtonValue = \"Discover\"\r\n            ButtonTo={\"/Project/\" + project.project_id}\r\n            isInApp={true}>\r\n          </ButtonWithBorder>\r\n          \r\n        </div>\r\n\r\n      ))}\r\n\r\n      { props.isAdmin ?\r\n\r\n        <Link className=\"buttonAdd-project\" to=\"/Project/create\">Add new project</Link>\r\n\r\n      :\r\n        null\r\n      }\r\n              \r\n    </div>\r\n  );\r\n}\r\n \r\n ","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\n// react-slick CSS\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n// Data service\r\nimport ProjectDataService from \"../../services/project.service\";\r\n\r\n\r\nexport default function Caroussel(props) {\r\n\r\n\t//props.images -> liste des images\r\n\r\n\tconst settings = {\r\n\t\tdots: true,\r\n\t\tinfinite: true,\r\n\t\tspeed: 500,\r\n\t\tslidesToShow: 1,\r\n\t\tslidesToScroll: 1\r\n    };\r\n\r\n    //className=\"image-discover\"\r\n\treturn (\r\n\t\t<div className=\"item-discover caroussel-discover\">\t\r\n\t\t\t<Slider {...settings}>\t\t\r\n\t\t\t\t{/* for image in project.project_images */}\r\n\r\n\t\t\t\t{props.loaded && props.project.project_images.map((image) => (\r\n\t\t\t\t\t<img \r\n\r\n\t\t\t\t\t\tsrc={ProjectDataService.getUploadsFiles+image.project_image_filename}\r\n\t\t\t\t\t\tkey={image.project_image_id}>\r\n\t\t\t\t\t</img>\r\n\t\t\t\t))}\r\n\t        </Slider>\r\n\t\t</div>\r\n\r\n\t);\r\n}\t\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link , useParams , useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport App from \"../../App\";\r\nimport ToastDisplayer from \"../ToastDisplayer\";\r\nimport Caroussel from \"./Caroussel\";\r\nimport ButtonWithBorder from \"./ButtonWithBorder\";\r\n\r\nexport default function GetOneProject(props) {\r\n\r\n  //----------------------------REDIRECTION APRES click sur bouton update ou incorrect :id-----------------------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (redirect === true) {\r\n      navigate('/Projects');\r\n    }\r\n    if (notFound === true)\r\n    {\r\n      navigate('/NotFound');\r\n    }\r\n  });\r\n\r\n  function redirectToUpdate(id){\r\n    navigate(\"/Project/update/\"+id);\r\n  }\r\n\r\n  // ----------------- Initialize State -------------------\r\n  const [notFound,setNotFound] = useState (false); //id not found\r\n  const [loaded,setLoaded] = useState (false); //data not loaded \r\n\r\n  const [project,setProject] = useState( //déclare project en tant que liste key/value\r\n    {\r\n      project_id: null,\r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: \"\",\r\n      project_images : null,\r\n      project_is_file_format: true,\r\n      project_release_filename: \"\",\r\n      project_release_url: \"\" \r\n    }\r\n  );\r\n\r\n  const [redirect,setRedirect] = useState (false);\r\n\r\n  // ----------------- Get request params -------------------\r\n  const { id } = useParams(); //Retrouve le paramètre id\r\n  // useEffect = quand le composant est inétgré dans le DOM \r\n  useEffect(()=>{ getProject(); },[]) //notice the empty array here so it only happens once\r\n\r\n  const getProject = () => {\r\n    ProjectDataService.get(id)\r\n      .then(response => {\r\n        setProject(response.data);\r\n        console.log(response.data);\r\n        setLoaded(true);\r\n      })\r\n      .catch(e => {\r\n        setNotFound(true);\r\n        console.log(e);\r\n      });\r\n  }\r\n  \r\n  const deleteProject = (id) => { \r\n    //SWAL\r\n    Swal.fire({\r\n      position: 'center',\r\n      icon: 'warning',\r\n      title: 'Do you really want to delete this project ?',\r\n      showCancelButton: true,\r\n      showConfirmButton: true,\r\n      confirmButtonText: 'Oui',\r\n      cancelButtonText: \"Non\",\r\n      iconColor : 'rgb(232,16,41)',\r\n      confirmButtonColor: \"rgb(232,16,41)\",\r\n      cancelButtonColor: \"rgb(61,61,61)\",\r\n      background: 'rgb(33,33,33)',\r\n      color : 'rgb(255,255,255)'\r\n    }).then((result) => {\r\n     if (result.isConfirmed) {\r\n        //DELETE PROJECT  \r\n        ProjectDataService.delete(id)      \r\n        .then(response => {\r\n            console.log(response.data);\r\n            ToastDisplayer(false,\"Project deleted !\");\r\n            setRedirect(true); //Redirection vers page virtuelle Project\r\n        })\r\n        .catch(e => {\r\n            ToastDisplayer(true,\"An error occured ...\");\r\n            console.log(e);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper-discover\">\r\n      <div className=\"box-discover\">\r\n\r\n\r\n        { props.isAdmin ?\r\n\r\n          <div className=\"buttons-project\"> \r\n          \r\n            <button className=\"deleteProjectButton-project alertDisplayerDelete_JS\" \r\n              onClick={deleteProject.bind(this, project.project_id)}\r\n            >Delete project</button> \r\n\r\n            <button className=\"updateProjectButton-project\" \r\n              onClick={redirectToUpdate.bind(this, project.project_id)}\r\n            >Update project</button> \r\n\r\n          </div> \r\n\r\n        :\r\n          null\r\n        }\r\n\r\n        \r\n\r\n        <div className=\"item-discover\"> \r\n          <div className=\"title-discover\">{ project.project_name }</div>\r\n          <div className=\"tag-discover\">{ project.project_technologies }</div>  \r\n        </div>\r\n\r\n        <span className=\"item-discover description-discover\">{ project.project_description }</span>\r\n\r\n        { project.project_is_youtube_not_images === false ? \r\n          <Caroussel\r\n            loaded={loaded}\r\n            project={project}\r\n          >\r\n          </Caroussel>\r\n\r\n        :\r\n\r\n          <iframe \r\n            className=\"youtube-discover item-discover\" \r\n            src={project.project_youtube_link} \r\n            title=\"YouTube video player\" \r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \r\n            allowfullscreen>\r\n          </iframe>\r\n        }\r\n\r\n\r\n        { project.project_is_file_format === true ? \r\n          <ButtonWithBorder \r\n            ButtonValue = \"Download\"\r\n            ButtonTo={ProjectDataService.getUploadsFiles+project.project_release_filename}\r\n            isInApp={false}\r\n            isDownload={true}>\r\n          </ButtonWithBorder>\r\n        :\r\n          <ButtonWithBorder \r\n            ButtonValue = \"Link\"\r\n            ButtonTo={project.project_release_url}\r\n            isInApp={false}\r\n            isDownload={false}>\r\n          </ButtonWithBorder>\r\n        }  \r\n\r\n      </div>\r\n  </div>\r\n  );\r\n}\r\n\r\n\r\n ","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function TextInput(props) {\r\n\r\n\tconst [valid, setValid] = useState(props.isValid);\r\n\r\n\treturn (\r\n\t\t<div className=\"item-form\">\r\n\t\t\t<div className=\"label-form\">{props.labelName}</div>\r\n\r\n\t\t\t{/* le champ peut etre multiline ou single-line, et si single-line, small ou normal */}\r\n\r\n\t\t\t{ props.multiline === true ?\r\n\r\n\t\t    <textarea\r\n\t\t\t\tclassName=\"textArea-form\" \r\n\t\t\t\tid={props.fieldName}\r\n\t\t\t\tvalue={props.fieldValue} \r\n\t\t\t\tonChange={props.onChangeEvent} \r\n\t\t\t\tname={props.fieldName}>\r\n        \t</textarea> \r\n\r\n\t\t\t: \r\n\t\t\t\t<>\r\n\t\t\t\t{ props.small === true ?\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"textFields-form small\" \r\n\t\t\t\t\t\tid={props.fieldName} \r\n\t\t\t\t\t\tvalue={props.fieldValue} \r\n\t\t\t\t\t\tonChange={props.onChangeEvent} \r\n\t\t\t\t\t\tname={props.fieldName}\r\n\t\t\t\t\t/>\r\n\t\t\t\t:\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"textFields-form\" \r\n\t\t\t\t\t\tid={props.fieldName} \r\n\t\t\t\t\t\tvalue={props.fieldValue} \r\n\t\t\t\t\t\tonChange={props.onChangeEvent} \r\n\t\t\t\t\t\tname={props.fieldName}\r\n\t      \t\t\t/>\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t</>\r\n\r\n\t\t\t}\r\n\r\n      { props.isValid === false ?\r\n      \t<div className=\"errorMessage\">{props.validationMessage}</div>\r\n      : null }\r\n\r\n\t\t</div> \r\n \t);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n//Assets\r\nimport deleteLogo from \"../../image/delete.png\";\r\n\r\nexport default function FileInput(props) {\r\n\r\n\tconst [valid, setValid] = useState(props.isValid);\r\n\tconst [removable, setRemovable] = useState(props.isRemovable);\r\n\r\n\treturn (\t\t\r\n\t\t<>\r\n\t\t{ props.isRemovable === false ?\r\n\r\n\t\t\t<div className=\"item-form\">\r\n            \t<div className=\"label-form\">{props.labelName}</div>\r\n\r\n            \t{ props.isMultiFile === true ?\r\n\r\n            \t\t<input \r\n\t            \t\ttype='file' \r\n\t            \t\tmultiple \r\n\t            \t\tname={props.fieldName}             \t\t \r\n\t            \t\tclassName='files-form'\r\n\t            \t\tonChange={props.onChangeEvent}>\r\n            \t\t</input>\r\n\r\n\t\t\t\t:\r\n\r\n\t\t\t\t    <input \r\n\t\t\t\t\t\ttype='file' \r\n\t\t\t\t\t\tname={props.fieldName} \r\n\t\t\t\t\t\tclassName='files-form'\r\n\t\t\t\t\t\tonChange={props.onChangeEvent}>\r\n\t\t            </input>\r\n\t\t\t\t}\r\n\r\n\r\n\t            { props.isValid === false ?\r\n\r\n\t            \t<div className=\"errorMessage\">{props.validationMessage}</div>\r\n\t            : \r\n\t            \tnull \r\n\t            }\r\n\t         </div>\r\n\r\n\t\t:\t\r\n\t\t\t<div className=\"item-form\">\r\n            \t<div className=\"label-form\">{props.labelName}</div>\r\n            \t<div className=\"file-box\">\r\n              \t\t<img src={deleteLogo} className=\"icon-delete\" onClick={props.onResetEvent}></img>\r\n\r\n              \t\t{ props.isMultiFile === true ?\r\n\r\n              \t\t\t<div className=\"file-name\">\r\n              \t\t\t\r\n\t              \t\t{ props.fieldValue.map((image) => (\r\n\t                  \t\t<div key={image.project_image_id}>{image.project_image_filename}</div>             \r\n\t                \t))}\r\n\r\n\t                \t</div>\r\n\t                :\r\n\r\n              \t\t\t<div className=\"file-name\">{props.fieldValue}</div>\r\n              \t\t}\r\n\r\n            \t</div>\r\n          \t</div> \r\n\r\n\t\t}\r\n\t\t</>\r\n\t);\r\n}","import React, { useState, useEffect } from 'react';\r\n//Components\r\nimport TextInput from \"../Form/TextInput\"\r\nimport FileInput from \"../Form/FileInput\"\r\n\r\n//Assets\r\nimport deleteLogo from \"../../image/delete.png\";\r\n\r\nexport default function FormProject(props) {\r\n\r\n  const [project,setProject] = useState(props.project);\r\n  const [removeThumbnailPossibility,setRemoveThumbnailPossibility] = useState(props.removeThumbnailPossibility);\r\n  const [removeImagesPossibility, setRemoveImagesPossibility] = useState(props.removeImagesPossibility);\r\n  const [removeReleaseFilePossibility,setRemoveReleaseFilePossibility] = useState(props.removeReleaseFilePossibility);\r\n\r\n//-------------------------------- JSX -----------------------------------------\r\n  return (\r\n    <div className=\"wrapper-form\">\r\n      <div className=\"box-form\">\r\n     \r\n        {/*----------------------------------------- Name Field ------------------------------------------*/}\r\n        <TextInput \r\n          multiline = {false}\r\n          small = {true}\r\n          labelName=\"Project Name\"\r\n          fieldName=\"project_name\"\r\n          fieldValue={props.project.project_name}\r\n          onChangeEvent={props.onChangeProject_name}\r\n          isValid={props.nameValidation.isValid}\r\n          validationMessage={props.nameValidation.message}>\r\n        </TextInput>\r\n\r\n      {/*----------------------------------------- Technologies Field ----------------------------------------*/}\r\n        <TextInput \r\n          multiline = {false}\r\n          small = {false}\r\n          labelName=\"Source and target technologies\"\r\n          fieldName=\"project_technologies\"\r\n          fieldValue={props.project.project_technologies}\r\n          onChangeEvent={props.onChangeProject_technologies}\r\n          isValid={props.technologiesValidation.isValid}\r\n          validationMessage={props.technologiesValidation.message}>\r\n        </TextInput>\r\n\r\n      {/*----------------------------------------- Description Field ----------------------------------------*/}         \r\n        <TextInput \r\n          multiline = {true}\r\n          small = {false}\r\n          labelName=\"Description\"\r\n          fieldName=\"project_description\"\r\n          fieldValue={props.project.project_description}\r\n          onChangeEvent={props.onChangeProject_description}\r\n          isValid={props.descriptionValidation.isValid}\r\n          validationMessage={props.descriptionValidation.message}>\r\n        </TextInput>\r\n\r\n      {/*----------------------------------------- Thumbnail Field ----------------------------------------*/}\r\n        <FileInput \r\n          isMultiFile={false}\r\n          labelName=\"Thumbnail\"\r\n          fieldName=\"project_thumbnail_filename\"\r\n          onChangeEvent={props.onChangeProject_thumbnail_filename}\r\n          isValid={props.thumbnailValidation.isValid}\r\n          validationMessage={props.thumbnailValidation.message}\r\n          isRemovable={props.removeThumbnailPossibility}\r\n          onResetEvent={props.onResetProject_thumbnail_filename}\r\n          fieldValue={props.project.project_thumbnail_filename}>\r\n        </FileInput>\r\n\r\n      {/*--------------------------------------- Format Select Release ------------------------------------------------*/}\r\n        <div className=\"item-form\">\r\n          <div className=\"label-form\">Content Format</div>\r\n          <select \r\n            className='FormatChoice_JS'\r\n            id=\"project_is_file_format\"  \r\n            value={props.project.project_is_youtube_not_images} \r\n            onChange={props.onChangeProject_is_youtube_not_images} \r\n            name=\"project_is_youtube_not_images\">\r\n              <option value=\"true\">Youtube Video</option>\r\n              <option value=\"false\">Carrousel & Images</option>\r\n          </select>\r\n        </div> \r\n       \r\n      {/*--------------------------------------------- Content Format Youtube or Images Carrousel --------------------------------------*/}\r\n\r\n          { props.project.project_is_youtube_not_images === false ?\r\n\r\n            <FileInput \r\n              isMultiFile={true}\r\n              labelName=\"Images for Carrousel\"\r\n              fieldName=\"project_images\"\r\n              onChangeEvent={props.onChangeProject_images}\r\n              isValid={props.imagesValidation.isValid}\r\n              validationMessage={props.imagesValidation.message}\r\n              isRemovable={props.removeImagesPossibility}\r\n              onResetEvent={props.onResetProject_images}\r\n              fieldValue={props.project.project_images}>\r\n            </FileInput>\r\n\r\n          :\r\n\r\n            <TextInput \r\n              multiline = {false}\r\n              small = {false}\r\n              labelName=\"Youtube Link\"\r\n              fieldName=\"project_youtube_link\"\r\n              fieldValue={props.project.project_youtube_link} \r\n              onChangeEvent={props.onChangeProject_youtube_link}\r\n              isValid={props.youtubeLinkValidation.isValid}\r\n              validationMessage={props.youtubeLinkValidation.message}>\r\n            </TextInput>\r\n            \r\n          }\r\n\r\n      {/*--------------------------------------- Format Select Release ------------------------------------------------*/}\r\n        <div className=\"item-form\">\r\n          <div className=\"label-form\">Release Format</div>\r\n          <select \r\n            className='FormatChoice_JS'\r\n            id=\"project_is_file_format\"  \r\n            value={props.project.project_is_file_format} \r\n            onChange={props.onChangeProject_is_file_format} \r\n            name=\"project_is_file_format\">\r\n              <option value=\"true\">File</option>\r\n              <option value=\"false\">Link</option>\r\n          </select>\r\n        </div>    \r\n\r\n      {/*----------------------------------------- Release Field (URL OR FILE)----------------------------------------------*/}\r\n        { props.project.project_is_file_format === true ?\r\n\r\n          <FileInput \r\n            isMultiFile={false}\r\n            labelName=\"Release File\"\r\n            fieldName=\"project_release_filename\"\r\n            onChangeEvent={props.onChangeProject_release_filename}\r\n            isValid={props.releaseFileValidation.isValid}\r\n            validationMessage={props.releaseFileValidation.message}\r\n            isRemovable={props.removeReleaseFilePossibility}\r\n            onResetEvent={props.onResetProject_release_filename}\r\n            fieldValue={props.project.project_release_filename}>\r\n          </FileInput>\r\n\r\n        :\r\n\r\n          <TextInput \r\n            multiline = {false}\r\n            small = {false}\r\n            labelName=\"Link\"\r\n            fieldName=\"project_release_url\"\r\n            fieldValue={props.project.project_release_url} \r\n            onChangeEvent={props.onChangeProject_release_url}\r\n            isValid={props.releaseUrlValidation.isValid}\r\n            validationMessage={props.releaseUrlValidation.message}>\r\n          </TextInput>\r\n        }\r\n\r\n      {/*----------------------------------------- Button Submit----------------------------------------*/}\r\n        { props.mode === \"create\" ?\r\n          <button className=\"item-form button-form\" onClick={props.saveProject}>Create Project</button>\r\n        :\r\n          <button className=\"item-form button-form\" onClick={props.saveProject}>Update Project</button>\r\n        } \r\n\r\n      </div>\r\n  </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\n//Components\r\nimport App from \"../../App\";\r\nimport FormProject from \"./FormProject\";\r\nimport ToastDisplayer from \"../ToastDisplayer\";\r\n\r\nexport default function CreateProject(props) {\r\n\r\n\t//----------------------------REDIRECTION APRES VALIDATION DU FORM ou UNAUTHORIZED-----------------------\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (project.project_is_created) {\r\n      navigate('/Projects');\r\n    }\r\n\r\n    // ----- Check if Admin AND redirect if not-------------\r\n    if (!props.isAdmin)\r\n    {\r\n        navigate('/Projects');\r\n    }\r\n\r\n  });\r\n\r\n  //--------------------------------- State Initial -------------------------------------\r\n\r\n  const [disabledSubmit, setDisabledSubmit] = useState(false); // Bloquage du bouton submit durant process\r\n\r\n\tconst [project,setProject] = useState( //déclare en tant que liste key/value\r\n  { \r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: null,\r\n      project_is_youtube_not_images : true,\r\n      project_youtube_link : \"\",\r\n      project_images: [],\r\n      project_is_file_format: true,\r\n      project_release_filename: null,\r\n      project_release_url: \"\",\r\n      project_is_created: false,\r\n  });\r\n\r\n\tconst [nameValidation, setNameValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [technologiesValidation, setTechnologiesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [descriptionValidation, setDescriptionValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [thumbnailValidation, setThumbnailValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [youtubeLinkValidation, setYoutubeLinkValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [imagesValidation, setImagesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  }) \r\n\r\n  const [releaseFileValidation, setReleaseFileValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [releaseUrlValidation, setReleaseUrlValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n// ------------------------- Evenementiel (modification du state en fonction des inputs) -------------------------\r\n\r\n  const onChangeProject_name = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_name : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_technologies = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_technologies : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_description = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_description : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_thumbnail_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : e.target.files[0] } //pcq c'est un fichier\r\n    });\r\n  }\r\n\r\n  const onChangeProject_is_youtube_not_images = (e) => {\r\n    let result = true; \r\n    //si on passe e.target.value, project_is_file_format pointera sur un objet et non une valeur\r\n    // du coup setState n'aura plus d'incidence\r\n    if (e.target.value === \"true\")\r\n    {\r\n      result = true;\r\n    }\r\n    else {\r\n      result = false;\r\n    }\r\n    setProject(prevState => {\r\n      return { ...prevState, project_is_youtube_not_images : result }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_youtube_link = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_youtube_link : e.target.value } \r\n    });\r\n  }\r\n\r\n  const onChangeProject_images = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images : e.target.files } //pas d'index pcq c'est multifile\r\n    });\r\n  }\r\n\r\n  const onChangeProject_is_file_format = (e) => {\r\n    let result = true; \r\n    //si on passe e.target.value, project_is_file_format pointera sur un objet et non une valeur\r\n    // du coup setState n'aura plus d'incidence\r\n    if (e.target.value === \"true\")\r\n    {\r\n      result = true;\r\n    }\r\n    else {\r\n      result = false;\r\n    }\r\n    setProject(prevState => {\r\n      return { ...prevState, project_is_file_format : result }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : e.target.files[0]  }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_url = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_url : e.target.value }\r\n    });\r\n  } \r\n\r\n//------------------------------------ CALL API ----------------------------------------------------------\r\n\r\n const saveProject = (e) => {\r\n\r\n    if (disabledSubmit === false) {\r\n      setDisabledSubmit(true);\r\n\r\n      //------------- instanciation d'un objet FormData pour envoyer les données à l'API --------------   \r\n      let data = new FormData(); // --> \"content\" : \"multipart/form-data\"\r\n      data.append('project_name', project.project_name);\r\n      data.append('project_technologies', project.project_technologies);\r\n      data.append('project_description', project.project_description);\r\n      data.append('project_thumbnail_filename', project.project_thumbnail_filename);\r\n      data.append('project_is_youtube_not_images', project.project_is_youtube_not_images);\r\n      data.append('project_youtube_link', project.project_youtube_link);\r\n      if (project.project_is_youtube_not_images === false)\r\n      {\r\n        for (let i = 0; i < project.project_images.length; i++) { // images files\r\n          data.append(`project_images`, project.project_images[i]);\r\n        }\r\n      }\r\n      data.append('project_is_file_format', project.project_is_file_format);\r\n      data.append('project_release_filename', project.project_release_filename);\r\n      data.append('project_release_url', project.project_release_url);\r\n\r\n      //--------------------------------- Request --------------------------------------\r\n      ProjectDataService.create(data)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          console.log(response.data);\r\n          setProject(prevState => {\r\n            return { ...prevState, project_is_created : true }\r\n          });\r\n\r\n          //SWAL\r\n          ToastDisplayer(false, \"Project created !\");\r\n\r\n        }\r\n      })\r\n      .catch(e => {\r\n        if (e.response.status === 422) {\r\n\r\n          // Reset des states pour éviter que certains messages persistent même apres correction\r\n          setNameValidation({isValid : true, message : \"\"});\r\n          setTechnologiesValidation({isValid : true, message : \"\"});\r\n          setDescriptionValidation({isValid : true, message : \"\"});\r\n          setThumbnailValidation({isValid : true, message : \"\"});\r\n          setYoutubeLinkValidation({isValid : true, message : \"\"});\r\n          setImagesValidation({isValid: true, message:\"\"});\r\n          setReleaseFileValidation({isValid : true, message : \"\"});\r\n          setReleaseUrlValidation({isValid : true, message : \"\"}) ;\r\n          // Gestion des erreurs et ajout au state error\r\n          e.response.data.errors.forEach(error => {\r\n            switch (error.param) { \r\n              case \"project_name\":\r\n                setNameValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_technologies\":\r\n                setTechnologiesValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_description\":\r\n                setDescriptionValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_thumbnail_filename\":\r\n                setThumbnailValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_youtube_link\":\r\n                setYoutubeLinkValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_images\":\r\n                setImagesValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_release_filename\":\r\n                setReleaseFileValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_release_url\":\r\n                setReleaseUrlValidation({isValid : false, message : error.msg});\r\n                break;\r\n            }          \r\n          });\r\n        }\r\n        else \r\n        {\r\n          //SWAL Server error\r\n          ToastDisplayer(true, \"Internal server error ...\");\r\n        } \r\n      });\r\n\r\n      setDisabledSubmit(false);\r\n    }\r\n  } \r\n    \r\n\r\n//----------------------------------------------------------- JSX -----------------------------------------------------\r\n\r\n\treturn (\r\n\r\n\t\t\t<FormProject\r\n\t\t\t\tmode=\"create\"\r\n\t\t\t\tproject= {project}\r\n\r\n\t\t\t\tonChangeProject_name = {onChangeProject_name}\r\n\t  \t\tonChangeProject_technologies = {onChangeProject_technologies}\r\n\t  \t\tonChangeProject_description = {onChangeProject_description}\r\n\t  \t\tonChangeProject_thumbnail_filename = {onChangeProject_thumbnail_filename}\r\n        onChangeProject_is_youtube_not_images = {onChangeProject_is_youtube_not_images}\r\n        onChangeProject_youtube_link = {onChangeProject_youtube_link}\r\n\t  \t\tonChangeProject_images = {onChangeProject_images}\r\n\t  \t\tonChangeProject_is_file_format = {onChangeProject_is_file_format}\r\n\t  \t\tonChangeProject_release_filename = {onChangeProject_release_filename}\r\n\t  \t\tonChangeProject_release_url = {onChangeProject_release_url}\r\n\r\n\t  \t\tremoveThumbnailPossibility = {false}\r\n\t  \t\tremoveImagesPossibility = {false} \r\n\t  \t\tremoveReleaseFilePossibility = {false}\r\n\t  \t\tonResetProject_images = {null}\r\n\t  \t\tonResetProject_thumbnail_filename = {null} \r\n\t  \t\tonResetProject_release_filename = {null}\r\n\r\n\t\t\t\tnameValidation = {nameValidation}\r\n\t\t\t\ttechnologiesValidation = {technologiesValidation}\r\n\t\t\t\tdescriptionValidation = {descriptionValidation}\r\n\t\t\t\tthumbnailValidation = {thumbnailValidation}\r\n        youtubeLinkValidation = {youtubeLinkValidation}\r\n\t\t\t\timagesValidation = {imagesValidation}\r\n\t\t\t\treleaseFileValidation = {releaseFileValidation}\r\n\t\t\t\treleaseUrlValidation = {releaseUrlValidation}\r\n\r\n\t\t\t\tsaveProject = {saveProject}\r\n\t\t\t>\r\n\t\t\t</FormProject>\r\n\r\n\t);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\n//Components\r\nimport App from \"../../App\";\r\nimport FormProject from \"./FormProject\";\r\nimport ToastDisplayer from \"../ToastDisplayer\";\r\n\r\nexport default function UpdateProject(props) {\r\n\r\n  //----------------------------REDIRECTION APRES VALIDATION DU FORM ou 404 -----------------------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (project.project_is_updated) {\r\n      navigate('/Projects');\r\n    }\r\n    if (notFound === true)\r\n    {\r\n      navigate('/NotFound');\r\n    }\r\n    if (dataFound === true)\r\n    {\r\n      setRemoveButtons();\r\n    }\r\n\r\n    // ----- Check if Admin AND redirect if not-------------\r\n    if (!props.isAdmin)\r\n    {\r\n        navigate('/Projects');\r\n    }\r\n  });\r\n\r\n\r\n  //--------------------------------- State Initial -------------------------------------\r\n\r\n  const [disabledSubmit, setDisabledSubmit] = useState(false); // Bloquage du bouton submit durant process\r\n\r\n  const [notFound,setNotFound] = useState (false); //id not found\r\n\r\n\tconst [project,setProject] = useState( //déclare en tant que liste key/value\r\n  { \r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: null,\r\n      project_is_youtube_not_images : true,\r\n      project_youtube_link : \"\",\r\n      project_images: [],\r\n      project_is_file_format: true,\r\n      project_release_filename: null,\r\n      project_release_url: \"\",\r\n      project_is_updated: false,\r\n  });\r\n\r\n  //Pour reset une et une seule fois, en mode update, le champ file \r\n  // cad supprimer le fichier côté serveur\r\n  const [dataFound,setDataFound] = useState(false);\r\n  const [removeThumbnailPossibility,setRemoveThumbnailPossibility] = useState(false);\r\n  const [removeImagesPossibility, setRemoveImagesPossibility] = useState(false);\r\n  const [removeReleaseFilePossibility,setRemoveReleaseFilePossibility] = useState(false);\r\n\r\n\tconst [nameValidation, setNameValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [technologiesValidation, setTechnologiesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [descriptionValidation, setDescriptionValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [thumbnailValidation, setThumbnailValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [youtubeLinkValidation, setYoutubeLinkValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [imagesValidation, setImagesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  }) \r\n\r\n  const [releaseFileValidation, setReleaseFileValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [releaseUrlValidation, setReleaseUrlValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  // --------------- actualisation du state pour MODE UPDATE (herité avec props) -------------------------------\r\n  \r\n  const { id } = useParams(); //Retrouve le paramètre id\r\n  useEffect(() => { // à l'instanciation du component     \r\n      getProject(id);\r\n  },[]) //notice the empty array here so it only happens once \r\n\r\n  const getProject = (id) => {\r\n    ProjectDataService.get(id)\r\n      .then(response => {\r\n        setProject(response.data);\r\n        setDataFound(true); //pour définir les options de removes avec croix rouge   \r\n      })\r\n      .catch(e => {\r\n        setNotFound(true);\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  const setRemoveButtons = () => {\r\n    setRemoveThumbnailPossibility(true); //Enclenche la possibilité de supprimer le fichier côté serveur\r\n    if (project.project_is_youtube_not_images === false) //seulement si c'est un release de type file\r\n    {\r\n      setRemoveImagesPossibility(true); //Enclenche la possibilité de supprimer le fichier côté serveur\r\n    }    \r\n    if (project.project_is_file_format === true) //seulement si c'est un release de type file\r\n    {\r\n      setRemoveReleaseFilePossibility(true); //Enclenche la possibilité de supprimer le fichier côté serveur\r\n    }\r\n    setDataFound(undefined); //Reset pour éviter que ca ne relance cette fonction à chaque modif du state\r\n  }\r\n\r\n// ------------------------- Evenementiel (modification du state en fonction des inputs) -------------------------\r\n\r\n  const onChangeProject_name = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_name : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_technologies = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_technologies : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_description = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_description : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_thumbnail_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : e.target.files[0] } //pcq c'est un fichier\r\n    });\r\n  }\r\n\r\n  const onResetProject_thumbnail_filename = () => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : null } //pcq c'est un fichier\r\n    });\r\n    setRemoveThumbnailPossibility(false);\r\n  }\r\n\r\n  const onChangeProject_is_youtube_not_images = (e) => {\r\n    let result = true; \r\n    //si on passe e.target.value, project_is_file_format pointera sur un objet et non une valeur\r\n    // du coup setState n'aura plus d'incidence\r\n    if (e.target.value === \"true\")\r\n    {\r\n      result = true;\r\n      setProject(prevState => {\r\n        return { ...prevState, project_images_updated : false } //pcq c'est un fichier\r\n      });\r\n    }\r\n    else {\r\n      result = false;\r\n      setProject(prevState => {\r\n        return { ...prevState, project_images_updated : true } //pcq c'est un fichier\r\n      });\r\n    }\r\n    setProject(prevState => {\r\n      return { ...prevState, project_is_youtube_not_images : result }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_youtube_link = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_youtube_link :  e.target.value  } \r\n    });\r\n\r\n  }\r\n\r\n  const onChangeProject_images = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images : e.target.files } //pas d'index pcq c'est multifile\r\n    });\r\n  }\r\n\r\n  const onResetProject_images = () => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images_updated : true } //pcq c'est un fichier\r\n    });\r\n    setRemoveImagesPossibility(false);\r\n  }\r\n\r\n  const onChangeProject_is_file_format = (e) => {\r\n    let result = true; \r\n    //si on passe e.target.value, project_is_file_format pointera sur un objet et non une valeur\r\n    // du coup setState n'aura plus d'incidence\r\n    if (e.target.value === \"true\")\r\n    {\r\n      result = true;\r\n    }\r\n    else {\r\n      result = false;\r\n    }\r\n    setProject(prevState => {\r\n      return { ...prevState, project_is_file_format : result }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : e.target.files[0]  }\r\n    });\r\n  }\r\n\r\n  const onResetProject_release_filename = () => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : null } //pcq c'est un fichier\r\n    });\r\n    setRemoveReleaseFilePossibility(false);\r\n  }\r\n\r\n  const onChangeProject_release_url = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_url : e.target.value }\r\n    });\r\n  } \r\n\r\n//------------------------------------ CALL API ----------------------------------------------------------\r\n\r\n  const saveProject = (e) => {\r\n\r\n    if (disabledSubmit === false){\r\n      setDisabledSubmit(true);\r\n\r\n      //------------- instanciation d'un objet FormData pour envoyer les données à l'API --------------   \r\n      let data = new FormData(); // --> \"content\" : \"multipart/form-data\"\r\n      data.append('project_name', project.project_name);\r\n      data.append('project_technologies', project.project_technologies);\r\n      data.append('project_description', project.project_description);\r\n      data.append('project_thumbnail_filename', project.project_thumbnail_filename);\r\n      data.append('project_is_youtube_not_images', project.project_is_youtube_not_images);\r\n      data.append('project_youtube_link', project.project_youtube_link);\r\n      // images files\r\n      data.append('project_images_updated', project.project_images_updated);\r\n      //Si les images ont été modifiés par l'utilisateur\r\n      if ( project.project_images_updated === true && project.project_is_youtube_not_images === false) \r\n      {\r\n        for (let i = 0; i < project.project_images.length; i++) {\r\n          data.append(`project_images`, project.project_images[i]);\r\n        }    \r\n      }  \r\n\r\n      data.append('project_is_file_format', project.project_is_file_format);\r\n      data.append('project_release_filename', project.project_release_filename);\r\n      data.append('project_release_url', project.project_release_url);\r\n\r\n      //--------------------------------- Request --------------------------------------\r\n      ProjectDataService.update(id,data)\r\n        .then(response => {\r\n          setProject(prevState => {\r\n            return { ...prevState, project_is_updated : true }\r\n          });\r\n          //SWAL\r\n          ToastDisplayer(false, \"Project updated !\");\r\n        })\r\n        .catch(e => {\r\n          if (e.response.status === 422) {\r\n\r\n            // Reset des states pour éviter que certains messages persistent même apres correction\r\n          setNameValidation({isValid : true, message : \"\"});\r\n          setTechnologiesValidation({isValid : true, message : \"\"});\r\n          setDescriptionValidation({isValid : true, message : \"\"});\r\n          setThumbnailValidation({isValid : true, message : \"\"});\r\n          setYoutubeLinkValidation({isValid : true, message : \"\"});\r\n          setImagesValidation({isValid: true, message:\"\"});\r\n          setReleaseFileValidation({isValid : true, message : \"\"});\r\n          setReleaseUrlValidation({isValid : true, message : \"\"}) ;\r\n            // Gestion des erreurs et ajout au state error\r\n            e.response.data.errors.forEach(error => {\r\n              switch (error.param) {\r\n                case \"project_name\":\r\n                  setNameValidation({isValid : false, message : error.msg});\r\n                  break;\r\n                case \"project_technologies\":\r\n                  setTechnologiesValidation({isValid : false, message : error.msg});\r\n                  break;\r\n                case \"project_description\":\r\n                  setDescriptionValidation({isValid : false, message : error.msg});\r\n                  break;\r\n                case \"project_thumbnail_filename\":\r\n                  setThumbnailValidation({isValid : false, message : error.msg});\r\n                  break;\r\n                case \"project_youtube_link\":\r\n                  setYoutubeLinkValidation({isValid : false, message : error.msg});\r\n                  break;\r\n                case \"project_images\":\r\n                  setImagesValidation({isValid : false, message : error.msg});\r\n                  break;\r\n                case \"project_release_filename\":\r\n                  setReleaseFileValidation({isValid : false, message : error.msg});\r\n                  break;\r\n                case \"project_release_url\":\r\n                  setReleaseUrlValidation({isValid : false, message : error.msg});\r\n                  break;\r\n              }\r\n            });\r\n\r\n          }\r\n          else \r\n          {\r\n            // SWAL\r\n            ToastDisplayer(true, \"Internal server error ...\");\r\n          }  \r\n        });\r\n\r\n      setDisabledSubmit(false);\r\n    }\r\n   \r\n  }\r\n\r\n\r\n//----------------------------------------------------------- JSX -----------------------------------------------------\r\n\r\n\treturn (\r\n\r\n\t\t\t<FormProject\r\n\t\t\t\tmode=\"update\"\r\n\t\t\t\tproject= {project}\r\n\r\n\t\t\t\tonChangeProject_name = {onChangeProject_name}\r\n\t  \t\tonChangeProject_technologies = {onChangeProject_technologies}\r\n\t  \t\tonChangeProject_description = {onChangeProject_description}\r\n\t  \t\tonChangeProject_thumbnail_filename = {onChangeProject_thumbnail_filename}\r\n        onChangeProject_is_youtube_not_images = {onChangeProject_is_youtube_not_images}\r\n        onChangeProject_youtube_link = {onChangeProject_youtube_link}\r\n\t  \t\tonChangeProject_images = {onChangeProject_images}\r\n\t  \t\tonChangeProject_is_file_format = {onChangeProject_is_file_format}\r\n\t  \t\tonChangeProject_release_filename = {onChangeProject_release_filename}\r\n\t  \t\tonChangeProject_release_url = {onChangeProject_release_url}\r\n\r\n\t  \t\tremoveThumbnailPossibility = {removeThumbnailPossibility}\r\n\t  \t\tremoveImagesPossibility = {removeImagesPossibility} \r\n\t  \t\tremoveReleaseFilePossibility = {removeReleaseFilePossibility}\r\n\r\n\t  \t\tonResetProject_images = {onResetProject_images}\r\n\t  \t\tonResetProject_thumbnail_filename = {onResetProject_thumbnail_filename} \r\n\t  \t\tonResetProject_release_filename = {onResetProject_release_filename}\r\n\r\n\t\t\t\tnameValidation = {nameValidation}\r\n\t\t\t\ttechnologiesValidation = {technologiesValidation}\r\n\t\t\t\tdescriptionValidation = {descriptionValidation}\r\n\t\t\t\tthumbnailValidation = {thumbnailValidation}\r\n        youtubeLinkValidation = {youtubeLinkValidation}\r\n\t\t\t\timagesValidation = {imagesValidation}\r\n\t\t\t\treleaseFileValidation = {releaseFileValidation}\r\n\t\t\t\treleaseUrlValidation = {releaseUrlValidation}\r\n\r\n\t\t\t\tsaveProject = {saveProject}\r\n\t\t\t>\r\n\t\t\t</FormProject>\r\n\r\n\t);\r\n}","import React, { Component } from \"react\";\r\nimport App from \"../App\";\r\nimport logo from \"../image/404.png\";\r\n\r\nexport default function NotFound(props) {\r\n  return (\r\n\r\n      <div className=\"wrapper-form\">\r\n        <img className=\"not-found-image\" src={logo}></img>\r\n      </div>\r\n\r\n  );\r\n}\r\n ","import React, { useState, useEffect} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AuthService from \"./services/auth.service\";\r\nimport \"./App.css\";\r\nimport Base from \"./Base\";\r\nimport Home from \"./components/Home\";\r\nimport Login from \"./components/Auth/Login\";\r\nimport Contact from \"./components/Contact\";\r\nimport GetAllProject from \"./components/Project/GetAllProject\";\r\nimport GetOneProject from \"./components/Project/GetOneProject\";\r\nimport CreateProject from \"./components/Project/CreateProject\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport ToastDisplayer from \"./components/ToastDisplayer\";\r\n\r\n\r\nexport default function App(props) {\r\n\r\n    //--------------REDIRECTION APRES LOGOUT  --------\r\n    const navigate = useNavigate();\r\n    useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n\r\n        // ----- Check if Admin -------------\r\n        const admin = AuthService.getCurrentUser();\r\n        if (admin)\r\n        {\r\n            setIsAdmin(true); \r\n        }\r\n        else\r\n        {\r\n            setIsAdmin(false); \r\n        }\r\n\r\n        if (redirect === true)\r\n        {\r\n            setRedirect(false);\r\n            navigate('/Projects');\r\n        }\r\n\r\n    });\r\n\r\n    // --------- STATE --------------\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n\r\n    const logout = () => {\r\n        AuthService.logout();\r\n        setIsAdmin(false);\r\n        if (props.page === 'CreateProject' || props.page === 'UpdateProject')\r\n        {\r\n            setRedirect(true);\r\n        }\r\n        ToastDisplayer(false,\"Goodbye senpai :( \");\r\n        \r\n    };\r\n\r\n\r\n    // ------------ JSX ------------------\r\n    return (\r\n      <>   \r\n       <Base logout={logout} isAdmin={isAdmin} />\r\n       \r\n        {\r\n            {\r\n                'Home': <Home />,\r\n                'Login': <Login  />,\r\n                'Contact': <Contact />,\r\n                'GetAllProject': <GetAllProject isAdmin={isAdmin}/>,\r\n                'GetOneProject': <GetOneProject isAdmin={isAdmin}/>,\r\n                'CreateProject': <CreateProject isAdmin={isAdmin}/>,\r\n                'UpdateProject': <UpdateProject isAdmin={isAdmin}/>,\r\n                \"NotFound\" :  <NotFound />             \r\n            }[props.page]\r\n        }\r\n    </>\r\n\r\n    );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nimport App from \"./App\";\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <Routes>\n      <Route exact path=\"/\" element={<App page=\"Home\" />} />\n      <Route path=\"/Login\" element={<App page=\"Login\"  />} />\n      <Route path=\"/Contact\" element={<App page=\"Contact\" />} />\n      <Route path=\"/Projects\" element={<App page=\"GetAllProject\" />} />\n      <Route path=\"/Project/:id\" element={<App page=\"GetOneProject\" />} />\n      <Route path=\"/Project/create\" element={<App page=\"CreateProject\" />} />\n      <Route path=\"/Project/update/:id\" element={<App page=\"UpdateProject\" />} />  \n      <Route path=\"/404\" element={<App page=\"NotFound\"/>} />\n      <Route path=\"*\" element={<App page=\"NotFound\"/>} />\n    </Routes>\n  </BrowserRouter> \n); //render l'argument 1 <JSX> dans l'argument 2 <root element>\n","module.exports = __webpack_public_path__ + \"static/media/delete.bf2628e4.png\";","module.exports = __webpack_public_path__ + \"static/media/border.d83dc4f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Thunder.6afc9c72.svg\";","module.exports = __webpack_public_path__ + \"static/media/Linkedin.b013d643.svg\";","module.exports = __webpack_public_path__ + \"static/media/Github.1ad9830c.svg\";","module.exports = __webpack_public_path__ + \"static/media/sendIcon.f576de7f.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.9e40b6a3.png\";","module.exports = __webpack_public_path__ + \"static/media/Button-border.b1e36ff5.svg\";"],"sourceRoot":""}