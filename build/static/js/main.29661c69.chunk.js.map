{"version":3,"sources":["services/auth.service.js","Base.js","components/Home.js","components/Auth/IdentifiantField.js","components/Auth/PasswordField.js","components/Auth/AuthForm.js","components/Auth/Login.js","components/particles/ContactParticles.js","components/Contact.js","services/project.service.js","components/Project/GetAllProject.js","components/Project/Caroussel.js","components/Project/GetOneProject.js","components/Form/TextInput.js","components/Form/FileInput.js","components/Project/FormProject.js","components/Project/CreateProject.js","components/Project/UpdateProject.js","components/NotFound.js","App.js","index.js","image/delete.png","image/thunderParticle.png","image/404.png"],"names":["API_URL","AuthService","login","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","username","password","authentification","wrap","_context","prev","next","axios","post","catch","error","sent","abrupt","localStorage","setItem","JSON","stringify","data","stop","_x","_x2","apply","this","arguments","logout","removeItem","then","response","getCurrentUser","parse","getItem","App","props","useEffect","document","querySelector","addEventListener","classList","toggle","contains","react_default","createElement","Fragment","id","className","react_router_dom","to","src","logo","isAdmin","class","onClick","Home","IdentifiantField","labelName","type","fieldName","value","fieldValue","onChange","onChangeEvent","name","PasswordField","AuthForm","UsernameFieldName","UsernameFieldValue","OnChangeUsername","PasswordFieldName","PasswordFieldValue","OnChangePassword","isValid","validationMessage","submitAuth","Login","navigate","useNavigate","authentificated","_useState","useState","_useState2","slicedToArray","setUsername","_useState3","_useState4","setPassword","_useState5","_useState6","setIsValid","_useState7","_useState8","setAuthentificated","_useState9","_useState10","disabledSubmit","setDisabledSubmit","e","console","log","target","ContactParticles","customInit","useCallback","engine","loadFull","options","require","react_tsparticles_default","init","Contact","placeholder","onclick","http","create","baseURL","headers","Content-type","project_service","get","concat","put","delete","GetAllProject","_this","projects","setProjects","retrieveProjects","ProjectDataService","getAll","deleteProject","filter","project_id","redirectToUpdate","map","project","key","bind","project_name","project_technologies","getUploadsFiles","project_thumbnail_filename","Caroussel","settings","dots","infinite","speed","slidesToShow","slidesToScroll","lib_default","loaded","project_images","image","project_image_filename","project_image_id","GetOneProject","redirect","notFound","setNotFound","setLoaded","project_description","project_is_file_format","project_release_filename","project_release_url","setProject","setRedirect","useParams","getProject","href","download","TextInput","multiline","small","FileInput","isRemovable","isMultiFile","multiple","deleteLogo","onResetEvent","FormProject","removeThumbnailPossibility","removeImagesPossibility","removeReleaseFilePossibility","onChangeProject_name","nameValidation","message","onChangeProject_technologies","technologiesValidation","onChangeProject_description","descriptionValidation","onChangeProject_thumbnail_filename","thumbnailValidation","onResetProject_thumbnail_filename","onChangeProject_images","imagesValidation","onResetProject_images","onChangeProject_is_file_format","onChangeProject_release_filename","releaseFileValidation","onResetProject_release_filename","onChangeProject_release_url","releaseUrlValidation","mode","saveProject","CreateProject","project_is_created","setNameValidation","setTechnologiesValidation","setDescriptionValidation","_useState11","_useState12","setThumbnailValidation","_useState13","_useState14","setImagesValidation","_useState15","_useState16","setReleaseFileValidation","_useState17","_useState18","setReleaseUrlValidation","prevState","objectSpread","files","result","FormData","append","i","length","status","errors","forEach","param","msg","UpdateProject","project_is_updated","dataFound","setRemoveButtons","setDataFound","setRemoveThumbnailPossibility","setRemoveImagesPossibility","setRemoveReleaseFilePossibility","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","_useState27","_useState28","undefined","project_images_updated","update","NotFound","admin","setIsAdmin","Base_App","page","ReactDOM","createRoot","getElementById","render","react_router","exact","path","element","App_App","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.29661c69.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst API_URL = \"http://localhost:3006/api/auth/\";\r\n\r\nconst login = async (username, password) => {\r\n\r\n  const authentification = await axios.post(API_URL + \"login\", {username,password,})\r\n    .catch(error => { //tout code http autre que 200 sera ici\r\n      return false;\r\n  });\r\n\r\n\r\n  if (authentification === false)\r\n  {\r\n    return false;\r\n  }\r\n  else \r\n  {\r\n    localStorage.setItem(\"user\", JSON.stringify(authentification.data));\r\n    return true;\r\n  }\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n  return axios.post(API_URL + \"logout\").then((response) => {\r\n    return response.data;\r\n  });\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  \r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n  \r\n};\r\n\r\nconst AuthService = {\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n}\r\n\r\nexport default AuthService;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link , useNavigate } from \"react-router-dom\";\r\nimport logo from \"./image/thunderParticle.png\";\r\n\r\n\r\nexport default function App(props) {\r\n\r\n    \r\n    // ----- Component mount --------  \r\n    useEffect(()=>{ \r\n        // ---- Menu burger Animation et Display des composants burger -----------\r\n        document.querySelector(\".iconMenuBox\").addEventListener('click', function() {\r\n            // Icon\r\n            document.querySelector(\".icon-1\").classList.toggle('a');\r\n            document.querySelector(\".icon-2\").classList.toggle('c');\r\n            document.querySelector(\".icon-3\").classList.toggle('b');\r\n\r\n            // Menu\r\n            if (document.querySelector(\".burgerMenuBox\").classList.contains('appearing')  \r\n                || document.querySelector(\".burgerMenuBox\").classList.contains('disappearing') )\r\n            {\r\n                document.querySelector(\".burgerMenuBox\").classList.toggle('disappearing');\r\n                document.querySelector(\".burgerMenuBox\").classList.toggle('appearing');\r\n            }\r\n            else\r\n            {\r\n                document.querySelector(\".burgerMenuBox\").classList.toggle('appearing');\r\n            }\r\n        });\r\n\r\n    },[]); //notice the empty array here so it only happens once when the component is up\r\n\r\n\r\n\r\n    // ------------ JSX ------------------\r\n    return (\r\n      <>   \r\n        <div id=\"background\"></div> \r\n\r\n        <div className=\"Header\">\r\n            <Link className=\"leftBox\" to=\"/\">\r\n                <img className=\"itemLeftBox imageHeader\" src={logo}></img> \r\n                <span className=\"itemLeftBox titleHeader\">\r\n                    <div className=\"titleHeader-top\">Richard PERRET</div>\r\n                    <div className=\"hiding-titleHeader-bot\">Richard PERRET</div>\r\n                    <div className=\"titleHeader-bot\">Richard PERRET</div>\r\n                </span>\r\n            </Link>\r\n                                    {/* Version Mobile */}\r\n            {/* itemIconMenuBox */}\r\n            <div className=\"iconMenuBox\">\r\n                <div className=\"icon-1\"></div>\r\n                <div className=\"icon-2\"></div>\r\n                <div className=\"icon-3\"></div>\r\n            </div>\r\n\r\n            <div className=\"burgerMenuBox\">    \r\n                <Link className=\"itemBugerMenuBox\" to=\"/Projects\">PROJETS</Link>\r\n                <Link className=\"itemBugerMenuBox\" to=\"/Contact\">CONTACT</Link>\r\n            </div>\r\n\r\n                                    {/* Version Desktop */}\r\n            <div className=\"linksBox\">\r\n                <Link className=\"itemLinksBox blue\" to=\"/Contact\">CONTACT</Link>\r\n                <Link className=\"itemLinksBox\" to=\"/Projects\">PROJETS</Link> \r\n            </div>         \r\n        </div>\r\n\r\n        { props.isAdmin === true ? \r\n            <button class=\"logoutBubble\" onClick={props.logout}>Déconnexion</button>\r\n        :\r\n            null\r\n        }   \r\n      </>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport App from \"../App\"\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <>\r\n    </>\r\n  );\r\n}\r\n ","import React, { Component } from \"react\";\r\n\r\nexport default function IdentifiantField(props) {\r\n\r\n  return (\r\n    <div className=\"item-form\">\r\n      <div className=\"label-form\">{props.labelName}</div>\r\n\r\n      <input \r\n        type=\"text\" \r\n        className=\"textFields-form small\"\r\n        id={props.fieldName} \r\n        value={props.fieldValue} \r\n        onChange={props.onChangeEvent} \r\n        name={props.fieldName}\r\n      />\r\n\r\n    </div>\r\n  );\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default function   PasswordField(props) {\r\n\r\n  return (\r\n    <div className=\"item-form\">\r\n      <div className=\"label-form\">{props.labelName}</div>\r\n\r\n      <input \r\n        type=\"password\" \r\n        className=\"textFields-form small\"\r\n        id={props.fieldName} \r\n        value={props.fieldValue} \r\n        onChange={props.onChangeEvent} \r\n        name={props.fieldName}\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { Component } from \"react\";\r\nimport App from \"../../App\";\r\nimport IdentifiantField from \"./IdentifiantField\";\r\nimport PasswordField from \"./PasswordField\";\r\n\r\nexport default function AuthForm(props) {\r\n\r\n  return (\r\n\r\n      <div className=\"wrapper-form\">\r\n        <div className=\"box-form\">\r\n\r\n          <IdentifiantField\r\n            labelName=\"Username\"\r\n            fieldName={props.UsernameFieldName}\r\n            fieldValue={props.UsernameFieldValue}\r\n            onChangeEvent={props.OnChangeUsername}\r\n          >\r\n          </IdentifiantField>\r\n\r\n          <PasswordField\r\n            labelName=\"Password\"\r\n            fieldName={props.PasswordFieldName}\r\n            fieldValue={props.PasswordFieldValue}\r\n            onChangeEvent={props.OnChangePassword}\r\n          >\r\n          </PasswordField>\r\n\r\n          { props.isValid === false ?\r\n\r\n            <div className=\"item-form errorMessage\">{props.validationMessage}</div>\r\n          : \r\n                null \r\n          }\r\n\r\n          <button className=\"item-form button-form\" onClick={props.submitAuth}>Connect</button>\r\n\r\n        </div>\r\n      </div>\r\n  );\r\n}","import React, { useState, useEffect} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport App from \"../../App\";\r\nimport AuthForm from \"./AuthForm\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\n\r\nexport default function Login(props) {\r\n\r\n\t//--------------REDIRECTION APRES VALIDATION DU FORM--------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (authentificated === true) {\r\n      navigate('/Projects');\r\n    }\r\n  });\r\n\r\n  //---------------State ---------------------\r\n\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [isValid, setIsValid] = useState(true); // Validation du form\r\n\tconst [authentificated, setAuthentificated] = useState(false); // Résultat Auth\r\n\tconst [disabledSubmit, setDisabledSubmit] = useState(false); // Bloquage du bouton submit durant process\r\n\r\n\t// --------- Events -----------------------\r\n\r\n\tconst OnChangeUsername = (e) => { setUsername(e.target.value);};\r\n\r\n\tconst OnChangePassword = (e) => { setPassword(e.target.value);};\r\n\r\n\tconst submitAuth = async (e) => {\r\n\t\tif (disabledSubmit === false) {\r\n\t\t\tconsole.log(\"in\");\r\n\r\n\t\t\tsetDisabledSubmit(true);\r\n\t\t\tconst Authentificated = await AuthService.login(username,password);\r\n\r\n\t\t\tif (Authentificated) {\r\n\t\t\t\tsetIsValid(true);\r\n\t\t\t\tsetAuthentificated(true);\r\n\t\t\t}\t\r\n\t\t\telse {\r\n\t\t\t\tsetIsValid(false);\r\n\t\t\t}\t\r\n\r\n\t\t\tsetDisabledSubmit(false);\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\t// ------------- JSX ---------------\r\n  return (\r\n\r\n  \t<AuthForm\r\n\t\t\tUsernameFieldName = \"user_username\"\r\n\t\t\tUsernameFieldValue = {username}\r\n\t\t\tOnChangeUsername = {OnChangeUsername}\r\n\t\t\tPasswordFieldName = \"user_password\"\r\n\t\t\tPasswordFieldValue = {password}\r\n\t\t\tOnChangePassword = {OnChangePassword}\r\n\t\t\tsubmitAuth = {submitAuth}\r\n\t\t\tisValid = {isValid}\r\n\t\t\tvalidationMessage = \"Authentification failed\">\t\t\r\n    </AuthForm>\r\n\r\n  );\r\n}","import React, { useCallback } from \"react\"; //JSX\r\nimport Particles from \"react-tsparticles\";\r\nimport type { Engine } from \"tsparticles-engine\";\r\nimport { loadFull } from \"tsparticles\";\r\n\r\n\r\nexport default function ContactParticles(props: unknown) {\r\n  // this customizes the component tsParticles installation\r\n  const customInit = useCallback(async (engine: Engine) => {\r\n    // this adds the bundle to tsParticles\r\n    await loadFull(engine);\r\n  });\r\n\r\n  const options = require(\"./dust.json\");\r\n  \r\n  return <Particles options={options} init={customInit} />;\r\n}","import React, { useState , useEffect }  from \"react\"; //JSX\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport App from \"../App\";\r\nimport ContactParticles from \"./particles/ContactParticles\";\r\n \r\nexport default function Contact(props) {\r\n\r\n  //---------------- STATE ----------------\r\n  const [disabledSubmit, setDisabledSubmit] = useState(false); // Bloquage du bouton submit durant process\r\n\r\n  const sendMessage = () => {\r\n    if (disabledSubmit === false){\r\n      setDisabledSubmit(true);\r\n      // DO STUFF\r\n      // ....\r\n      setDisabledSubmit(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ContactParticles />\r\n      <div className=\"wrapper-form\">\r\n        <div className=\"box-form\">\r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Email</div> \r\n            <input type=\"text\" className='textFields-form small' placeholder='johndoe@mail.com'></input>\r\n          </div>\r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Message</div>\r\n            <textarea className='textArea-form' placeholder='Hello Mr.PERRET,'></textarea>\r\n          </div>\r\n\r\n          <input type=\"submit\" className=\"item-form button-form\" value=\"Send\" onclick={sendMessage}></input> \r\n           \r\n\r\n        </div>      \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nconst http = axios.create({\r\n  baseURL: \"http://localhost:3006/api\",\r\n  headers: {\"Content-type\": \"multipart/form-data\"}\r\n});\r\n\r\nclass ProjectDataService {\r\n\r\n  get getUploadsFiles() {\r\n    return \"http://localhost:3006/uploads/\";\r\n  } \r\n  \r\n  getAll() {\r\n    return http.get(\"/Projects\");\r\n  }\r\n  get(id) {\r\n    return http.get(`/Projects/${id}`);\r\n  }\r\n  create(data) {\r\n    return http.post(\"/Projects\", data);\r\n  }\r\n  update(id, data) {\r\n    return http.put(`/Projects/${id}`, data);\r\n  }\r\n  delete(id) {\r\n    return http.delete(`/Projects/${id}`);\r\n  }\r\n\r\n}\r\nexport default new ProjectDataService();\r\n","import React, { useState, useEffect } from 'react'; //React pour JSX\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport App from \"../../App\"\r\n \r\nexport default function GetAllProject(props) {\r\n\r\n  //----------------------- Initial State -------------------------\r\n  const [projects,setProjects] = useState([]); //Déclare projects en tant qu'array vu qu'on va recevoir un tableau d'objets en json\r\n  const navigate = useNavigate();\r\n\r\n // useEffect avec ,[])  = quand le composant est inétgré dans le DOM \r\n  useEffect(()=>{ \r\n\r\n    retrieveProjects(); \r\n\r\n  },[]) //notice the empty array here so it only happens once\r\n\r\n  const retrieveProjects = () => {\r\n    ProjectDataService.getAll()\r\n      .then(response => {\r\n        setProjects(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e); \r\n      });\r\n  }\r\n\r\n  function deleteProject(id){ \r\n    //SWAL \r\n    ProjectDataService.delete(id)      \r\n      .then(response => {\r\n        setProjects(projects.filter(projects => projects.project_id !== id)); //enleve le project supprimé du state pour que ca refresh\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  function redirectToUpdate(id){\r\n    navigate(\"/Project/update/\"+id);\r\n  }\r\n  \r\n\r\n\r\n  // ----------------- JSX ---------------\r\n  return (\r\n    <div className=\"wrapper-project\">\r\n                 \r\n      {projects && projects.map((project) => (\r\n\r\n        <div className=\"item-project\" key={project.project_id}>\r\n\r\n          { props.isAdmin ? \r\n\r\n            <div className=\"buttons-project\"> \r\n              \r\n              <button className=\"deleteProjectButton-project alertDisplayerDelete_JS\" \r\n                onClick={deleteProject.bind(this, project.project_id)}\r\n              >Delete project</button>\r\n\r\n              <button className=\"updateProjectButton-project\" \r\n                onClick={redirectToUpdate.bind(this, project.project_id)}\r\n              >Update project</button> \r\n\r\n            </div>\r\n\r\n          :\r\n            null\r\n          }\r\n   \r\n\r\n          <span className=\"title-project\">{project.project_name}</span>\r\n\r\n          <span className=\"tag-project\">{project.project_technologies}</span>\r\n\r\n          <img \r\n            className=\"image-project\" \r\n            src={ProjectDataService.getUploadsFiles+project.project_thumbnail_filename}>\r\n          </img>\r\n   \r\n          <Link className=\"link-project\" to={\"/Project/\" + project.project_id}>See More</Link>\r\n          \r\n        </div>\r\n\r\n      ))}\r\n\r\n      { props.isAdmin ?\r\n\r\n        <Link className=\"buttonAdd-project\" to=\"/Project/create\">Add new project</Link>\r\n\r\n      :\r\n        null\r\n      }\r\n              \r\n    </div>\r\n  );\r\n}\r\n \r\n ","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\n// react-slick CSS\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n// Data service\r\nimport ProjectDataService from \"../../services/project.service\";\r\n\r\n\r\nexport default function Caroussel(props) {\r\n\r\n\t//props.images -> liste des images\r\n\r\n\tconst settings = {\r\n\t\tdots: true,\r\n\t\tinfinite: true,\r\n\t\tspeed: 500,\r\n\t\tslidesToShow: 1,\r\n\t\tslidesToScroll: 1\r\n    };\r\n\r\n    //className=\"image-discover\"\r\n\treturn (\r\n\t\t<div className=\"item-discover caroussel-discover\">\t\r\n\t\t\t<Slider {...settings}>\t\t\r\n\t\t\t\t{/* for image in project.project_images */}\r\n\r\n\t\t\t\t{props.loaded && props.project.project_images.map((image) => (\r\n\t\t\t\t\t<img \r\n\r\n\t\t\t\t\t\tsrc={ProjectDataService.getUploadsFiles+image.project_image_filename}\r\n\t\t\t\t\t\tkey={image.project_image_id}>\r\n\t\t\t\t\t</img>\r\n\t\t\t\t))}\r\n\t        </Slider>\r\n\t\t</div>\r\n\r\n\t);\r\n}\t\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link , useParams , useNavigate } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport App from \"../../App\"\r\nimport Caroussel from \"./Caroussel\";\r\n\r\n\r\nexport default function GetOneProject(props) {\r\n\r\n  //----------------------------REDIRECTION APRES click sur bouton update ou incorrect :id-----------------------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (redirect === true) {\r\n      navigate('/Projects');\r\n    }\r\n    if (notFound === true)\r\n    {\r\n      navigate('/NotFound');\r\n    }\r\n  });\r\n\r\n  function redirectToUpdate(id){\r\n    navigate(\"/Project/update/\"+id);\r\n  }\r\n\r\n  // ----------------- Initialize State -------------------\r\n  const [notFound,setNotFound] = useState (false); //id not found\r\n  const [loaded,setLoaded] = useState (false); //data not loaded \r\n\r\n  const [project,setProject] = useState( //déclare project en tant que liste key/value\r\n    {\r\n      project_id: null,\r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: \"\",\r\n      project_images : null,\r\n      project_is_file_format: true,\r\n      project_release_filename: \"\",\r\n      project_release_url: \"\" \r\n    }\r\n  );\r\n\r\n  const [redirect,setRedirect] = useState (false);\r\n\r\n  // ----------------- Get request params -------------------\r\n  const { id } = useParams(); //Retrouve le paramètre id\r\n  // useEffect = quand le composant est inétgré dans le DOM \r\n  useEffect(()=>{ getProject(); },[]) //notice the empty array here so it only happens once\r\n\r\n  const getProject = () => {\r\n    ProjectDataService.get(id)\r\n      .then(response => {\r\n        setProject(response.data);\r\n        console.log(response.data);\r\n        setLoaded(true);\r\n      })\r\n      .catch(e => {\r\n        setNotFound(true);\r\n        console.log(e);\r\n      });\r\n  }\r\n  \r\n  const deleteProject = (id) => { \r\n    //SWAL \r\n    ProjectDataService.delete(id)      \r\n      .then(response => {\r\n        console.log(response.data);\r\n        setRedirect(true); //Redirection vers page virtuelle Project\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper-discover\">\r\n      <div className=\"box-discover\">\r\n\r\n\r\n        { props.isAdmin ?\r\n\r\n          <div className=\"buttons-project\"> \r\n          \r\n            <button className=\"deleteProjectButton-project alertDisplayerDelete_JS\" \r\n              onClick={deleteProject.bind(this, project.project_id)}\r\n            >Delete project</button> \r\n\r\n            <button className=\"updateProjectButton-project\" \r\n              onClick={redirectToUpdate.bind(this, project.project_id)}\r\n            >Update project</button> \r\n\r\n          </div> \r\n\r\n        :\r\n          null\r\n        }\r\n\r\n        \r\n\r\n        <span className=\"item-discover title-discover\">{ project.project_name }</span>\r\n\r\n        <span className=\"item-discover tag-discover\">{ project.project_technologies }</span>  \r\n\r\n        <span className=\"item-discover description-discover\">{ project.project_description }</span>\r\n\r\n        \r\n        <Caroussel\r\n          loaded={loaded}\r\n          project={project}\r\n        >\r\n        </Caroussel>\r\n\r\n\r\n        { project.project_is_file_format === true ? \r\n          <a className=\"item-discover link-project\" \r\n            href={ProjectDataService.getUploadsFiles+project.project_release_filename} \r\n            download>Télécharger</a>\r\n        :\r\n          <a className=\"item-discover link-project\" \r\n            href={project.project_release_url} target=\"_blank\">Lien</a>\r\n        }  \r\n\r\n      </div>\r\n  </div>\r\n  );\r\n}\r\n\r\n\r\n ","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function TextInput(props) {\r\n\r\n\tconst [valid, setValid] = useState(props.isValid);\r\n\r\n\treturn (\r\n\t\t<div className=\"item-form\">\r\n\t\t\t<div className=\"label-form\">{props.labelName}</div>\r\n\r\n\t\t\t{/* le champ peut etre multiline ou single-line, et si single-line, small ou normal */}\r\n\r\n\t\t\t{ props.multiline === true ?\r\n\r\n\t\t    <textarea\r\n\t\t\t\tclassName=\"textArea-form\" \r\n\t\t\t\tid={props.fieldName}\r\n\t\t\t\tvalue={props.fieldValue} \r\n\t\t\t\tonChange={props.onChangeEvent} \r\n\t\t\t\tname={props.fieldName}>\r\n        \t</textarea> \r\n\r\n\t\t\t: \r\n\t\t\t\t<>\r\n\t\t\t\t{ props.small === true ?\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"textFields-form small\" \r\n\t\t\t\t\t\tid={props.fieldName} \r\n\t\t\t\t\t\tvalue={props.fieldValue} \r\n\t\t\t\t\t\tonChange={props.onChangeEvent} \r\n\t\t\t\t\t\tname={props.fieldName}\r\n\t\t\t\t\t/>\r\n\t\t\t\t:\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"textFields-form\" \r\n\t\t\t\t\t\tid={props.fieldName} \r\n\t\t\t\t\t\tvalue={props.fieldValue} \r\n\t\t\t\t\t\tonChange={props.onChangeEvent} \r\n\t\t\t\t\t\tname={props.fieldName}\r\n\t      \t\t\t/>\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t</>\r\n\r\n\t\t\t}\r\n\r\n      { props.isValid === false ?\r\n      \t<div className=\"errorMessage\">{props.validationMessage}</div>\r\n      : null }\r\n\r\n\t\t</div> \r\n \t);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n//Assets\r\nimport deleteLogo from \"../../image/delete.png\";\r\n\r\nexport default function FileInput(props) {\r\n\r\n\tconst [valid, setValid] = useState(props.isValid);\r\n\tconst [removable, setRemovable] = useState(props.isRemovable);\r\n\r\n\treturn (\t\t\r\n\t\t<>\r\n\t\t{ props.isRemovable === false ?\r\n\r\n\t\t\t<div className=\"item-form\">\r\n            \t<div className=\"label-form\">{props.labelName}</div>\r\n\r\n            \t{ props.isMultiFile === true ?\r\n\r\n            \t\t<input \r\n\t            \t\ttype='file' \r\n\t            \t\tmultiple \r\n\t            \t\tname={props.fieldName}             \t\t \r\n\t            \t\tclassName='files-form'\r\n\t            \t\tonChange={props.onChangeEvent}>\r\n            \t\t</input>\r\n\r\n\t\t\t\t:\r\n\r\n\t\t\t\t    <input \r\n\t\t\t\t\t\ttype='file' \r\n\t\t\t\t\t\tname={props.fieldName} \r\n\t\t\t\t\t\tclassName='files-form'\r\n\t\t\t\t\t\tonChange={props.onChangeEvent}>\r\n\t\t            </input>\r\n\t\t\t\t}\r\n\r\n\r\n\t            { props.isValid === false ?\r\n\r\n\t            \t<div className=\"errorMessage\">{props.validationMessage}</div>\r\n\t            : \r\n\t            \tnull \r\n\t            }\r\n\t         </div>\r\n\r\n\t\t:\t\r\n\t\t\t<div className=\"item-form\">\r\n            \t<div className=\"label-form\">{props.labelName}</div>\r\n            \t<div className=\"file-box\">\r\n              \t\t<img src={deleteLogo} className=\"icon-delete\" onClick={props.onResetEvent}></img>\r\n\r\n              \t\t{ props.isMultiFile === true ?\r\n\r\n              \t\t\t<div className=\"file-name\">\r\n              \t\t\t\r\n\t              \t\t{ props.fieldValue.map((image) => (\r\n\t                  \t\t<div key={image.project_image_id}>{image.project_image_filename}</div>             \r\n\t                \t))}\r\n\r\n\t                \t</div>\r\n\t                :\r\n\r\n              \t\t\t<div className=\"file-name\">{props.fieldValue}</div>\r\n              \t\t}\r\n\r\n            \t</div>\r\n          \t</div> \r\n\r\n\t\t}\r\n\t\t</>\r\n\t);\r\n}","import React, { useState, useEffect } from 'react';\r\n//Components\r\nimport TextInput from \"../Form/TextInput\"\r\nimport FileInput from \"../Form/FileInput\"\r\n\r\n//Assets\r\nimport deleteLogo from \"../../image/delete.png\";\r\n\r\nexport default function FormProject(props) {\r\n\r\n  const [project,setProject] = useState(props.project);\r\n  const [removeThumbnailPossibility,setRemoveThumbnailPossibility] = useState(props.removeThumbnailPossibility);\r\n  const [removeImagesPossibility, setRemoveImagesPossibility] = useState(props.removeImagesPossibility);\r\n  const [removeReleaseFilePossibility,setRemoveReleaseFilePossibility] = useState(props.removeReleaseFilePossibility);\r\n\r\n//-------------------------------- JSX -----------------------------------------\r\n  return (\r\n    <div className=\"wrapper-form\">\r\n      <div className=\"box-form\">\r\n     \r\n        {/*----------------------------------------- Name Field ------------------------------------------*/}\r\n        <TextInput \r\n          multiline = {false}\r\n          small = {true}\r\n          labelName=\"Project Name\"\r\n          fieldName=\"project_name\"\r\n          fieldValue={props.project.project_name}\r\n          onChangeEvent={props.onChangeProject_name}\r\n          isValid={props.nameValidation.isValid}\r\n          validationMessage={props.nameValidation.message}>\r\n        </TextInput>\r\n\r\n      {/*----------------------------------------- Technologies Field ----------------------------------------*/}\r\n        <TextInput \r\n          multiline = {false}\r\n          small = {false}\r\n          labelName=\"Source and target technologies\"\r\n          fieldName=\"project_technologies\"\r\n          fieldValue={props.project.project_technologies}\r\n          onChangeEvent={props.onChangeProject_technologies}\r\n          isValid={props.technologiesValidation.isValid}\r\n          validationMessage={props.technologiesValidation.message}>\r\n        </TextInput>\r\n\r\n      {/*----------------------------------------- Description Field ----------------------------------------*/}         \r\n        <TextInput \r\n          multiline = {true}\r\n          small = {false}\r\n          labelName=\"Description\"\r\n          fieldName=\"project_description\"\r\n          fieldValue={props.project.project_description}\r\n          onChangeEvent={props.onChangeProject_description}\r\n          isValid={props.descriptionValidation.isValid}\r\n          validationMessage={props.descriptionValidation.message}>\r\n        </TextInput>\r\n\r\n      {/*----------------------------------------- Thumbnail Field ----------------------------------------*/}\r\n        <FileInput \r\n          isMultiFile={false}\r\n          labelName=\"Thumbnail\"\r\n          fieldName=\"project_thumbnail_filename\"\r\n          onChangeEvent={props.onChangeProject_thumbnail_filename}\r\n          isValid={props.thumbnailValidation.isValid}\r\n          validationMessage={props.thumbnailValidation.message}\r\n          isRemovable={props.removeThumbnailPossibility}\r\n          onResetEvent={props.onResetProject_thumbnail_filename}\r\n          fieldValue={props.project.project_thumbnail_filename}>\r\n        </FileInput>\r\n       \r\n      {/*--------------------------------------------- Images Field--------------------------------------*/}\r\n          <FileInput \r\n            isMultiFile={true}\r\n            labelName=\"Images\"\r\n            fieldName=\"project_images\"\r\n            onChangeEvent={props.onChangeProject_images}\r\n            isValid={props.imagesValidation.isValid}\r\n            validationMessage={props.imagesValidation.message}\r\n            isRemovable={props.removeImagesPossibility}\r\n            onResetEvent={props.onResetProject_images}\r\n            fieldValue={props.project.project_images}>\r\n          </FileInput>\r\n\r\n      {/*--------------------------------------- Format Select------------------------------------------------*/}\r\n        <div className=\"item-form\">\r\n          <div className=\"label-form\">Format</div>\r\n          <select \r\n            className='FormatChoice_JS'\r\n            id=\"project_is_file_format\"  \r\n            value={props.project.project_is_file_format} \r\n            onChange={props.onChangeProject_is_file_format} \r\n            name=\"project_is_file_format\">\r\n              <option value=\"true\">File</option>\r\n              <option value=\"false\">Link</option>\r\n          </select>\r\n        </div>    \r\n\r\n      {/*----------------------------------------- Release Field (URL OR FILE)----------------------------------------------*/}\r\n        { props.project.project_is_file_format === true ?\r\n\r\n          <FileInput \r\n            isMultiFile={false}\r\n            labelName=\"Release File\"\r\n            fieldName=\"project_release_filename\"\r\n            onChangeEvent={props.onChangeProject_release_filename}\r\n            isValid={props.releaseFileValidation.isValid}\r\n            validationMessage={props.releaseFileValidation.message}\r\n            isRemovable={props.removeReleaseFilePossibility}\r\n            onResetEvent={props.onResetProject_release_filename}\r\n            fieldValue={props.project.project_release_filename}>\r\n          </FileInput>\r\n\r\n        :\r\n\r\n          <TextInput \r\n            multiline = {false}\r\n            small = {false}\r\n            labelName=\"Link\"\r\n            fieldName=\"project_release_url\"\r\n            fieldValue={props.project.project_release_url} \r\n            onChangeEvent={props.onChangeProject_release_url}\r\n            isValid={props.releaseUrlValidation.isValid}\r\n            validationMessage={props.releaseUrlValidation.message}>\r\n          </TextInput>\r\n        }\r\n\r\n      {/*----------------------------------------- Button Submit----------------------------------------*/}\r\n        { props.mode === \"create\" ?\r\n          <button className=\"item-form button-form\" onClick={props.saveProject}>Create Project</button>\r\n        :\r\n          <button className=\"item-form button-form\" onClick={props.saveProject}>Update Project</button>\r\n        } \r\n\r\n      </div>\r\n  </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\n//Components\r\nimport App from \"../../App\";\r\nimport FormProject from \"./FormProject\"\r\n\r\nexport default function CreateProject(props) {\r\n\r\n\t//----------------------------REDIRECTION APRES VALIDATION DU FORM ou UNAUTHORIZED-----------------------\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (project.project_is_created) {\r\n      navigate('/Projects');\r\n    }\r\n\r\n    // ----- Check if Admin AND redirect if not-------------\r\n    if (!props.isAdmin)\r\n    {\r\n        navigate('/Projects');\r\n    }\r\n\r\n  });\r\n\r\n  //--------------------------------- State Initial -------------------------------------\r\n\r\n  const [disabledSubmit, setDisabledSubmit] = useState(false); // Bloquage du bouton submit durant process\r\n\r\n\tconst [project,setProject] = useState( //déclare en tant que liste key/value\r\n  { \r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: null,\r\n      project_images: [],\r\n      project_is_file_format: true,\r\n      project_release_filename: null,\r\n      project_release_url: \"\",\r\n      project_is_created: false,\r\n  });\r\n\r\n\tconst [nameValidation, setNameValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [technologiesValidation, setTechnologiesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [descriptionValidation, setDescriptionValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [thumbnailValidation, setThumbnailValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [imagesValidation, setImagesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  }) \r\n\r\n  const [releaseFileValidation, setReleaseFileValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [releaseUrlValidation, setReleaseUrlValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n// ------------------------- Evenementiel (modification du state en fonction des inputs) -------------------------\r\n\r\n  const onChangeProject_name = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_name : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_technologies = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_technologies : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_description = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_description : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_thumbnail_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : e.target.files[0] } //pcq c'est un fichier\r\n    });\r\n  }\r\n\r\n  const onChangeProject_images = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images : e.target.files } //pas d'index pcq c'est multifile\r\n    });\r\n  }\r\n\r\n  const onChangeProject_is_file_format = (e) => {\r\n    let result = true; \r\n    //si on passe e.target.value, project_is_file_format pointera sur un objet et non une valeur\r\n    // du coup setState n'aura plus d'incidence\r\n    if (e.target.value === \"true\")\r\n    {\r\n      result = true;\r\n    }\r\n    else {\r\n      result = false;\r\n    }\r\n    setProject(prevState => {\r\n      return { ...prevState, project_is_file_format : result }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : e.target.files[0]  }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_url = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_url : e.target.value }\r\n    });\r\n  } \r\n\r\n//------------------------------------ CALL API ----------------------------------------------------------\r\n\r\n const saveProject = (e) => {\r\n\r\n    if (disabledSubmit === false) {\r\n      setDisabledSubmit(true);\r\n\r\n      //------------- instanciation d'un objet FormData pour envoyer les données à l'API --------------   \r\n      let data = new FormData(); // --> \"content\" : \"multipart/form-data\"\r\n      data.append('project_name', project.project_name);\r\n      data.append('project_technologies', project.project_technologies);\r\n      data.append('project_description', project.project_description);\r\n      data.append('project_thumbnail_filename', project.project_thumbnail_filename);\r\n\r\n      for (let i = 0; i < project.project_images.length; i++) { // images files\r\n        data.append(`project_images`, project.project_images[i]);\r\n      }    \r\n\r\n      data.append('project_is_file_format', project.project_is_file_format);\r\n      data.append('project_release_filename', project.project_release_filename);\r\n      data.append('project_release_url', project.project_release_url);\r\n\r\n      //--------------------------------- Request --------------------------------------\r\n      ProjectDataService.create(data)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          console.log(response.data);\r\n          setProject(prevState => {\r\n            return { ...prevState, project_is_created : true }\r\n          });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        if (e.response.status === 422) {\r\n          // Reset des states pour éviter que certains messages persistent même apres correction\r\n          setNameValidation({isValid : true, message : \"\"})\r\n          setTechnologiesValidation({isValid : true, message : \"\"})\r\n          setDescriptionValidation({isValid : true, message : \"\"})\r\n          setThumbnailValidation({isValid : true, message : \"\"})\r\n          setImagesValidation({isValid: true, message:\"\"})\r\n          setReleaseFileValidation({isValid : true, message : \"\"})\r\n          setReleaseUrlValidation({isValid : true, message : \"\"}) \r\n          // Gestion des erreurs et ajout au state error\r\n          e.response.data.errors.forEach(error => {\r\n            switch (error.param) { \r\n              case \"project_name\":\r\n                setNameValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_technologies\":\r\n                setTechnologiesValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_description\":\r\n                setDescriptionValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_thumbnail_filename\":\r\n                setThumbnailValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_images\":\r\n                setImagesValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_release_filename\":\r\n                setReleaseFileValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_release_url\":\r\n                setReleaseUrlValidation({isValid : false, message : error.msg});\r\n                break;\r\n            }          \r\n          });\r\n        }\r\n        else \r\n        {\r\n          //SWAL Server error\r\n        } \r\n      });\r\n\r\n      setDisabledSubmit(false);\r\n    }\r\n  } \r\n    \r\n\r\n//----------------------------------------------------------- JSX -----------------------------------------------------\r\n\r\n\treturn (\r\n\r\n\t\t\t<FormProject\r\n\t\t\t\tmode=\"create\"\r\n\t\t\t\tproject= {project}\r\n\r\n\t\t\t\tonChangeProject_name = {onChangeProject_name}\r\n\t  \t\tonChangeProject_technologies = {onChangeProject_technologies}\r\n\t  \t\tonChangeProject_description = {onChangeProject_description}\r\n\t  \t\tonChangeProject_thumbnail_filename = {onChangeProject_thumbnail_filename}\r\n\t  \t\tonChangeProject_images = {onChangeProject_images}\r\n\t  \t\tonChangeProject_is_file_format = {onChangeProject_is_file_format}\r\n\t  \t\tonChangeProject_release_filename = {onChangeProject_release_filename}\r\n\t  \t\tonChangeProject_release_url = {onChangeProject_release_url}\r\n\r\n\t  \t\tremoveThumbnailPossibility = {false}\r\n\t  \t\tremoveImagesPossibility = {false} \r\n\t  \t\tremoveReleaseFilePossibility = {false}\r\n\t  \t\tonResetProject_images = {null}\r\n\t  \t\tonResetProject_thumbnail_filename = {null} \r\n\t  \t\tonResetProject_release_filename = {null}\r\n\r\n\t\t\t\tnameValidation = {nameValidation}\r\n\t\t\t\ttechnologiesValidation = {technologiesValidation}\r\n\t\t\t\tdescriptionValidation = {descriptionValidation}\r\n\t\t\t\tthumbnailValidation = {thumbnailValidation}\r\n\t\t\t\timagesValidation = {imagesValidation}\r\n\t\t\t\treleaseFileValidation = {releaseFileValidation}\r\n\t\t\t\treleaseUrlValidation = {releaseUrlValidation}\r\n\r\n\t\t\t\tsaveProject = {saveProject}\r\n\t\t\t>\r\n\t\t\t</FormProject>\r\n\r\n\t);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\n//Components\r\nimport App from \"../../App\";\r\nimport FormProject from \"./FormProject\"\r\n\r\nexport default function UpdateProject(props) {\r\n\r\n  //----------------------------REDIRECTION APRES VALIDATION DU FORM ou 404 -----------------------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (project.project_is_updated) {\r\n      navigate('/Projects');\r\n    }\r\n    if (notFound === true)\r\n    {\r\n      navigate('/NotFound');\r\n    }\r\n    if (dataFound === true)\r\n    {\r\n      setRemoveButtons();\r\n    }\r\n\r\n    // ----- Check if Admin AND redirect if not-------------\r\n    if (!props.isAdmin)\r\n    {\r\n        navigate('/Projects');\r\n    }\r\n\r\n  });\r\n\r\n  //--------------------------------- State Initial -------------------------------------\r\n\r\n  const [disabledSubmit, setDisabledSubmit] = useState(false); // Bloquage du bouton submit durant process\r\n\r\n  const [notFound,setNotFound] = useState (false); //id not found\r\n\r\n\tconst [project,setProject] = useState( //déclare en tant que liste key/value\r\n  { \r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: null,\r\n      project_images: [],\r\n      project_is_file_format: true,\r\n      project_release_filename: null,\r\n      project_release_url: \"\",\r\n      project_is_updated: false,\r\n  });\r\n\r\n  //Pour reset une et une seule fois, en mode update, le champ file \r\n  // cad supprimer le fichier côté serveur\r\n  const [dataFound,setDataFound] = useState(false);\r\n  const [removeThumbnailPossibility,setRemoveThumbnailPossibility] = useState(false);\r\n  const [removeImagesPossibility, setRemoveImagesPossibility] = useState(false);\r\n  const [removeReleaseFilePossibility,setRemoveReleaseFilePossibility] = useState(false);\r\n\r\n\tconst [nameValidation, setNameValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [technologiesValidation, setTechnologiesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [descriptionValidation, setDescriptionValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [thumbnailValidation, setThumbnailValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [imagesValidation, setImagesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  }) \r\n\r\n  const [releaseFileValidation, setReleaseFileValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [releaseUrlValidation, setReleaseUrlValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  // --------------- actualisation du state pour MODE UPDATE (herité avec props) -------------------------------\r\n  \r\n  const { id } = useParams(); //Retrouve le paramètre id\r\n  useEffect(() => { // à l'instanciation du component     \r\n      getProject(id);\r\n  },[]) //notice the empty array here so it only happens once \r\n\r\n  const getProject = (id) => {\r\n    ProjectDataService.get(id)\r\n      .then(response => {\r\n        setProject(response.data);\r\n        setDataFound(true); //pour définir les options de removes avec croix rouge   \r\n      })\r\n      .catch(e => {\r\n        setNotFound(true);\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  const setRemoveButtons = () => {\r\n    setRemoveThumbnailPossibility(true); //Enclenche la possibilité de supprimer le fichier côté serveur\r\n    setRemoveImagesPossibility(true);\r\n    if (project.project_is_file_format === true) //seulement si c'est un release de type file\r\n    {\r\n      setRemoveReleaseFilePossibility(true); //Enclenche la possibilité de supprimer le fichier côté serveur\r\n    }\r\n    setDataFound(undefined); //Reset pour éviter que ca ne relance cette fonction à chaque modif du state\r\n  }\r\n\r\n// ------------------------- Evenementiel (modification du state en fonction des inputs) -------------------------\r\n\r\n  const onChangeProject_name = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_name : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_technologies = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_technologies : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_description = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_description : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_thumbnail_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : e.target.files[0] } //pcq c'est un fichier\r\n    });\r\n  }\r\n\r\n  const onResetProject_thumbnail_filename = () => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : null } //pcq c'est un fichier\r\n    });\r\n    setRemoveThumbnailPossibility(false);\r\n  }\r\n\r\n  const onChangeProject_images = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images : e.target.files } //pas d'index pcq c'est multifile\r\n    });\r\n  }\r\n\r\n  const onResetProject_images = () => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images_updated : true } //pcq c'est un fichier\r\n    });\r\n    setRemoveImagesPossibility(false);\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images_updated : true }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_is_file_format = (e) => {\r\n    let result = true; \r\n    //si on passe e.target.value, project_is_file_format pointera sur un objet et non une valeur\r\n    // du coup setState n'aura plus d'incidence\r\n    if (e.target.value === \"true\")\r\n    {\r\n      result = true;\r\n    }\r\n    else {\r\n      result = false;\r\n    }\r\n    setProject(prevState => {\r\n      return { ...prevState, project_is_file_format : result }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : e.target.files[0]  }\r\n    });\r\n  }\r\n\r\n  const onResetProject_release_filename = () => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : null } //pcq c'est un fichier\r\n    });\r\n    setRemoveReleaseFilePossibility(false);\r\n  }\r\n\r\n  const onChangeProject_release_url = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_url : e.target.value }\r\n    });\r\n  } \r\n\r\n//------------------------------------ CALL API ----------------------------------------------------------\r\n\r\n  const saveProject = (e) => {\r\n\r\n    if (disabledSubmit === false){\r\n      setDisabledSubmit(true);\r\n\r\n      //------------- instanciation d'un objet FormData pour envoyer les données à l'API --------------   \r\n      let data = new FormData(); // --> \"content\" : \"multipart/form-data\"\r\n      data.append('project_name', project.project_name);\r\n      data.append('project_technologies', project.project_technologies);\r\n      data.append('project_description', project.project_description);\r\n      data.append('project_thumbnail_filename', project.project_thumbnail_filename);\r\n\r\n      // images files\r\n      data.append('project_images_updated', project.project_images_updated);\r\n      //Si les images ont été modifiés par l'utilisateur\r\n      if ( project.project_images_updated === true) \r\n      {\r\n        for (let i = 0; i < project.project_images.length; i++) {\r\n          data.append(`project_images`, project.project_images[i]);\r\n        }    \r\n      }  \r\n\r\n      data.append('project_is_file_format', project.project_is_file_format);\r\n      data.append('project_release_filename', project.project_release_filename);\r\n      data.append('project_release_url', project.project_release_url);\r\n\r\n      //--------------------------------- Request --------------------------------------\r\n      ProjectDataService.update(id,data)\r\n        .then(response => {\r\n          setProject(prevState => {\r\n            return { ...prevState, project_is_updated : true }\r\n          });\r\n        })\r\n        .catch(e => {\r\n          if (e.response.status === 422) {\r\n            // Reset des states pour éviter que certains messages persistent même apres correction\r\n            setNameValidation({isValid : true, message : \"\"})\r\n            setTechnologiesValidation({isValid : true, message : \"\"})\r\n            setDescriptionValidation({isValid : true, message : \"\"})\r\n            setThumbnailValidation({isValid : true, message : \"\"})\r\n            setReleaseFileValidation({isValid : true, message : \"\"})\r\n            setReleaseUrlValidation({isValid : true, message : \"\"}) \r\n            // Gestion des erreurs et ajout au state error\r\n            e.response.data.errors.forEach(error => {\r\n              switch (error.param) {\r\n                case \"project_name\":\r\n                setNameValidation({isValid : false, message : error.msg})\r\n                break;\r\n                case \"project_technologies\":\r\n                setTechnologiesValidation({isValid : false, message : error.msg})\r\n                break;\r\n                case \"project_description\":\r\n                setDescriptionValidation({isValid : false, message : error.msg})\r\n                break;\r\n                case \"project_thumbnail_filename\":\r\n                setThumbnailValidation({isValid : false, message : error.msg})\r\n                break;\r\n                case \"project_images\":\r\n                setImagesValidation({isValid : false, message : error.msg});\r\n                break;\r\n                case \"project_release_filename\":\r\n                setReleaseFileValidation({isValid : false, message : error.msg})\r\n                break;\r\n                case \"project_release_url\":\r\n                setReleaseUrlValidation({isValid : false, message : error.msg})\r\n                break;\r\n              }\r\n            });\r\n\r\n          }\r\n          else \r\n          {\r\n            //SWAL Server error\r\n          }  \r\n        });\r\n\r\n      setDisabledSubmit(false);\r\n    }\r\n   \r\n  }\r\n\r\n\r\n//----------------------------------------------------------- JSX -----------------------------------------------------\r\n\r\n\treturn (\r\n\r\n\t\t\t<FormProject\r\n\t\t\t\tmode=\"update\"\r\n\t\t\t\tproject= {project}\r\n\r\n\t\t\t\tonChangeProject_name = {onChangeProject_name}\r\n\t  \t\tonChangeProject_technologies = {onChangeProject_technologies}\r\n\t  \t\tonChangeProject_description = {onChangeProject_description}\r\n\t  \t\tonChangeProject_thumbnail_filename = {onChangeProject_thumbnail_filename}\r\n\t  \t\tonChangeProject_images = {onChangeProject_images}\r\n\t  \t\tonChangeProject_is_file_format = {onChangeProject_is_file_format}\r\n\t  \t\tonChangeProject_release_filename = {onChangeProject_release_filename}\r\n\t  \t\tonChangeProject_release_url = {onChangeProject_release_url}\r\n\r\n\t  \t\tremoveThumbnailPossibility = {removeThumbnailPossibility}\r\n\t  \t\tremoveImagesPossibility = {removeImagesPossibility} \r\n\t  \t\tremoveReleaseFilePossibility = {removeReleaseFilePossibility}\r\n\r\n\t  \t\tonResetProject_images = {onResetProject_images}\r\n\t  \t\tonResetProject_thumbnail_filename = {onResetProject_thumbnail_filename} \r\n\t  \t\tonResetProject_release_filename = {onResetProject_release_filename}\r\n\r\n\t\t\t\tnameValidation = {nameValidation}\r\n\t\t\t\ttechnologiesValidation = {technologiesValidation}\r\n\t\t\t\tdescriptionValidation = {descriptionValidation}\r\n\t\t\t\tthumbnailValidation = {thumbnailValidation}\r\n\t\t\t\timagesValidation = {imagesValidation}\r\n\t\t\t\treleaseFileValidation = {releaseFileValidation}\r\n\t\t\t\treleaseUrlValidation = {releaseUrlValidation}\r\n\r\n\t\t\t\tsaveProject = {saveProject}\r\n\t\t\t>\r\n\t\t\t</FormProject>\r\n\r\n\t);\r\n}","import React, { Component } from \"react\";\r\nimport App from \"../App\";\r\nimport logo from \"../image/404.png\";\r\n\r\nexport default function NotFound(props) {\r\n  return (\r\n\r\n      <div className=\"wrapper-form\">\r\n        <img className=\"not-found-image\" src={logo}></img>\r\n      </div>\r\n\r\n  );\r\n}\r\n ","import React, { useState, useEffect} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AuthService from \"./services/auth.service\";\r\nimport \"./App.css\";\r\nimport Base from \"./Base\";\r\nimport Home from \"./components/Home\";\r\nimport Login from \"./components/Auth/Login\";\r\nimport Contact from \"./components/Contact\";\r\nimport GetAllProject from \"./components/Project/GetAllProject\";\r\nimport GetOneProject from \"./components/Project/GetOneProject\";\r\nimport CreateProject from \"./components/Project/CreateProject\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport NotFound from \"./components/NotFound\";\r\n\r\n\r\n\r\nexport default function App(props) {\r\n\r\n    //--------------REDIRECTION APRES LOGOUT  --------\r\n    const navigate = useNavigate();\r\n    useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n\r\n        // ----- Check if Admin -------------\r\n        const admin = AuthService.getCurrentUser();\r\n        if (admin)\r\n        {\r\n            setIsAdmin(true); \r\n        }\r\n        else\r\n        {\r\n            setIsAdmin(false); \r\n        }\r\n\r\n        if (redirect === true)\r\n        {\r\n            setRedirect(false);\r\n            navigate('/Projects');\r\n        }\r\n\r\n    });\r\n\r\n    // --------- STATE --------------\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n\r\n    const logout = () => {\r\n        AuthService.logout();\r\n        setIsAdmin(false);\r\n        if (props.page === 'CreateProject' || props.page === 'UpdateProject')\r\n        {\r\n            setRedirect(true);\r\n        }\r\n        \r\n    };\r\n\r\n\r\n    // ------------ JSX ------------------\r\n    return (\r\n      <>   \r\n       <Base logout={logout} isAdmin={isAdmin} />\r\n       \r\n        {\r\n            {\r\n                'Home': <Home />,\r\n                'Login': <Login  />,\r\n                'Contact': <Contact />,\r\n                'GetAllProject': <GetAllProject isAdmin={isAdmin}/>,\r\n                'GetOneProject': <GetOneProject isAdmin={isAdmin}/>,\r\n                'CreateProject': <CreateProject isAdmin={isAdmin}/>,\r\n                'UpdateProject': <UpdateProject isAdmin={isAdmin}/>,\r\n                \"NotFound\" :  <NotFound />             \r\n            }[props.page]\r\n        }\r\n    </>\r\n\r\n    );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nimport App from \"./App\";\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <Routes>\n      <Route exact path=\"/\" element={<App page=\"Home\" />} />\n      <Route path=\"/Login\" element={<App page=\"Login\"  />} />\n      <Route path=\"/Contact\" element={<App page=\"Contact\" />} />\n      <Route path=\"/Projects\" element={<App page=\"GetAllProject\" />} />\n      <Route path=\"/Project/:id\" element={<App page=\"GetOneProject\" />} />\n      <Route path=\"/Project/create\" element={<App page=\"CreateProject\" />} />\n      <Route path=\"/Project/update/:id\" element={<App page=\"UpdateProject\" />} />  \n      <Route path=\"/404\" element={<App page=\"NotFound\"/>} />\n      <Route path=\"*\" element={<App page=\"NotFound\"/>} />\n    </Routes>\n  </BrowserRouter> \n); //render l'argument 1 <JSX> dans l'argument 2 <root element>\n","module.exports = __webpack_public_path__ + \"static/media/delete.bf2628e4.png\";","module.exports = __webpack_public_path__ + \"static/media/thunderParticle.5d153796.png\";","module.exports = __webpack_public_path__ + \"static/media/404.9e40b6a3.png\";"],"sourceRoot":""}