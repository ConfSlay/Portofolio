{"version":3,"sources":["services/auth.service.js","App.js","components/Home.js","components/Auth/IdentifiantField.js","components/Auth/PasswordField.js","components/Auth/AuthForm.js","components/Auth/Login.js","components/particles/ContactParticles.js","components/Contact.js","services/project.service.js","components/Project/GetAllProject.js","components/Project/Caroussel.js","components/Project/GetOneProject.js","components/Form/TextInput.js","components/Form/FileInput.js","components/Project/FormProject.js","components/Project/CreateProject.js","components/Project/UpdateProject.js","components/NotFound.js","index.js","image/delete.png","image/thunderParticle.png","image/404.png"],"names":["API_URL","AuthService","login","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","username","password","authentification","wrap","_context","prev","next","axios","post","catch","error","sent","console","log","abrupt","localStorage","setItem","JSON","stringify","data","stop","_x","_x2","apply","this","arguments","logout","removeItem","then","response","getCurrentUser","parse","getItem","App","props","navigate","useNavigate","useEffect","admin","setIsAdmin","redirect","setRedirect","_useState","useState","_useState2","slicedToArray","isAdmin","_useState3","_useState4","document","querySelector","addEventListener","classList","toggle","contains","react_default","createElement","Fragment","id","className","react_router_dom","to","src","logo","class","onClick","Home","App_App","IdentifiantField","labelName","type","fieldName","value","fieldValue","onChange","onChangeEvent","name","PasswordField","AuthForm","UsernameFieldName","UsernameFieldValue","OnChangeUsername","PasswordFieldName","PasswordFieldValue","OnChangePassword","isValid","validationMessage","submitAuth","Login","authentificated","setUsername","setPassword","_useState5","_useState6","setIsValid","_useState7","_useState8","setAuthentificated","e","target","ContactParticles","customInit","useCallback","engine","loadFull","options","require","react_tsparticles_default","init","Contact","placeholder","http","create","baseURL","headers","Content-type","project_service","get","concat","put","delete","GetAllProject","_this","projects","setProjects","retrieveProjects","ProjectDataService","getAll","deleteProject","filter","project_id","redirectToUpdate","map","project","key","bind","project_name","project_technologies","getUploadsFiles","project_thumbnail_filename","Caroussel","settings","dots","infinite","speed","slidesToShow","slidesToScroll","lib_default","loaded","project_images","image","project_image_filename","project_image_id","GetOneProject","notFound","setNotFound","setLoaded","project_description","project_is_file_format","project_release_filename","project_release_url","setProject","useParams","getProject","href","download","TextInput","multiline","small","FileInput","isRemovable","isMultiFile","multiple","deleteLogo","onResetEvent","FormProject","removeThumbnailPossibility","removeImagesPossibility","removeReleaseFilePossibility","onChangeProject_name","nameValidation","message","onChangeProject_technologies","technologiesValidation","onChangeProject_description","descriptionValidation","onChangeProject_thumbnail_filename","thumbnailValidation","onResetProject_thumbnail_filename","onChangeProject_images","imagesValidation","onResetProject_images","onChangeProject_is_file_format","onChangeProject_release_filename","releaseFileValidation","onResetProject_release_filename","onChangeProject_release_url","releaseUrlValidation","mode","saveProject","CreateProject","project_is_created","setNameValidation","setTechnologiesValidation","setDescriptionValidation","_useState9","_useState10","setThumbnailValidation","_useState11","_useState12","setImagesValidation","_useState13","_useState14","setReleaseFileValidation","_useState15","_useState16","setReleaseUrlValidation","prevState","objectSpread","files","result","FormData","append","i","length","status","errors","forEach","param","msg","UpdateProject","project_is_updated","dataFound","setRemoveButtons","setDataFound","setRemoveThumbnailPossibility","setRemoveImagesPossibility","setRemoveReleaseFilePossibility","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","undefined","project_images_updated","update","NotFound","ReactDOM","createRoot","getElementById","render","react_router","exact","path","element","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.379f1a8f.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst API_URL = \"http://localhost:3006/api/auth/\";\r\n\r\nconst login = async (username, password) => {\r\n\r\n  const authentification = await axios.post(API_URL + \"login\", {username,password,})\r\n    .catch(error => { //tout code http autre que 200 sera ici\r\n      return false;\r\n  });\r\n\r\n\r\n  if (authentification === false)\r\n  {\r\n    console.log(\"return false -1\");\r\n    return false;\r\n  }\r\n  else \r\n  {\r\n    localStorage.setItem(\"user\", JSON.stringify(authentification.data));\r\n    console.log(\"return true \");\r\n    return true;\r\n  }\r\n};\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n  return axios.post(API_URL + \"logout\").then((response) => {\r\n    return response.data;\r\n  });\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n  \r\n  return JSON.parse(localStorage.getItem(\"user\"));\r\n  \r\n};\r\n\r\nconst AuthService = {\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n}\r\n\r\nexport default AuthService;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link , useNavigate } from \"react-router-dom\";\r\nimport logo from \"./image/thunderParticle.png\";\r\nimport AuthService from \"./services/auth.service\";\r\nimport \"./App.css\";\r\n\r\n\r\nexport default function App(props) {\r\n\r\n    //--------------REDIRECTION APRES LOGOUT  --------\r\n    const navigate = useNavigate();\r\n    useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n\r\n        // ----- Check if Admin -------------\r\n        const admin = AuthService.getCurrentUser();\r\n        if (admin)\r\n        {\r\n            setIsAdmin(true); \r\n        }\r\n        else\r\n        {\r\n            setIsAdmin(false); \r\n        }\r\n\r\n        if (redirect === true)\r\n        {\r\n            setRedirect(false);\r\n            navigate('/Projects');\r\n        }\r\n\r\n    });\r\n\r\n    // --------- STATE --------------\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n\r\n    // ----- Component mount --------  \r\n    useEffect(()=>{ \r\n        // ---- Menu burger Animation et Display des composants burger -----------\r\n        document.querySelector(\".iconMenuBox\").addEventListener('click', function() {\r\n            // Icon\r\n            document.querySelector(\".icon-1\").classList.toggle('a');\r\n            document.querySelector(\".icon-2\").classList.toggle('c');\r\n            document.querySelector(\".icon-3\").classList.toggle('b');\r\n\r\n            // Menu\r\n            if (document.querySelector(\".burgerMenuBox\").classList.contains('appearing')  \r\n                || document.querySelector(\".burgerMenuBox\").classList.contains('disappearing') )\r\n            {\r\n                document.querySelector(\".burgerMenuBox\").classList.toggle('disappearing');\r\n                document.querySelector(\".burgerMenuBox\").classList.toggle('appearing');\r\n            }\r\n            else\r\n            {\r\n                document.querySelector(\".burgerMenuBox\").classList.toggle('appearing');\r\n            }\r\n        });\r\n\r\n    },[]); //notice the empty array here so it only happens once when the component is up\r\n\r\n    const logout = () => {\r\n        AuthService.logout();\r\n        setIsAdmin(false);\r\n        setRedirect(true);\r\n    };\r\n\r\n\r\n    // ------------ JSX ------------------\r\n    return (\r\n      <>   \r\n        <div id=\"background\"></div> \r\n\r\n        <div className=\"Header\">\r\n            <Link className=\"leftBox\" to=\"/\">\r\n                <img className=\"itemLeftBox imageHeader\" src={logo}></img> \r\n                <span className=\"itemLeftBox titleHeader\">\r\n                    <div className=\"titleHeader-top\">Richard PERRET</div>\r\n                    <div className=\"hiding-titleHeader-bot\">Richard PERRET</div>\r\n                    <div className=\"titleHeader-bot\">Richard PERRET</div>\r\n                </span>\r\n            </Link>\r\n                                    {/* Version Mobile */}\r\n            {/* itemIconMenuBox */}\r\n            <div className=\"iconMenuBox\">\r\n                <div className=\"icon-1\"></div>\r\n                <div className=\"icon-2\"></div>\r\n                <div className=\"icon-3\"></div>\r\n            </div>\r\n\r\n            <div className=\"burgerMenuBox\">    \r\n                <Link className=\"itemBugerMenuBox\" to=\"/Projects\">PROJETS</Link>\r\n                <Link className=\"itemBugerMenuBox\" to=\"/Contact\">CONTACT</Link>\r\n            </div>\r\n\r\n                                    {/* Version Desktop */}\r\n            <div className=\"linksBox\">\r\n                <Link className=\"itemLinksBox blue\" to=\"/Contact\">CONTACT</Link>\r\n                <Link className=\"itemLinksBox\" to=\"/Projects\">PROJETS</Link> \r\n            </div>         \r\n        </div>\r\n\r\n        { isAdmin === true ? \r\n            <button class=\"logoutBubble\" onClick={logout}>Déconnexion</button>\r\n        :\r\n            null\r\n        }   \r\n      </>\r\n    );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport App from \"../App\"\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <>\r\n      <App />\r\n    </>\r\n  );\r\n}\r\n ","import React, { Component } from \"react\";\r\n\r\nexport default function IdentifiantField(props) {\r\n\r\n  return (\r\n    <div className=\"item-form\">\r\n      <div className=\"label-form\">{props.labelName}</div>\r\n\r\n      <input \r\n        type=\"text\" \r\n        className=\"textFields-form small\"\r\n        id={props.fieldName} \r\n        value={props.fieldValue} \r\n        onChange={props.onChangeEvent} \r\n        name={props.fieldName}\r\n      />\r\n\r\n    </div>\r\n  );\r\n}","import React, { Component } from \"react\";\r\n\r\nexport default function   PasswordField(props) {\r\n\r\n  return (\r\n    <div className=\"item-form\">\r\n      <div className=\"label-form\">{props.labelName}</div>\r\n\r\n      <input \r\n        type=\"password\" \r\n        className=\"textFields-form small\"\r\n        id={props.fieldName} \r\n        value={props.fieldValue} \r\n        onChange={props.onChangeEvent} \r\n        name={props.fieldName}\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { Component } from \"react\";\r\nimport App from \"../../App\";\r\nimport IdentifiantField from \"./IdentifiantField\";\r\nimport PasswordField from \"./PasswordField\";\r\n\r\nexport default function AuthForm(props) {\r\n\r\n  return (\r\n\r\n      <div className=\"wrapper-form\">\r\n        <div className=\"box-form\">\r\n\r\n          <IdentifiantField\r\n            labelName=\"Username\"\r\n            fieldName={props.UsernameFieldName}\r\n            fieldValue={props.UsernameFieldValue}\r\n            onChangeEvent={props.OnChangeUsername}\r\n          >\r\n          </IdentifiantField>\r\n\r\n          <PasswordField\r\n            labelName=\"Password\"\r\n            fieldName={props.PasswordFieldName}\r\n            fieldValue={props.PasswordFieldValue}\r\n            onChangeEvent={props.OnChangePassword}\r\n          >\r\n          </PasswordField>\r\n\r\n          { props.isValid === false ?\r\n\r\n            <div className=\"item-form errorMessage\">{props.validationMessage}</div>\r\n          : \r\n                null \r\n          }\r\n\r\n          <button className=\"item-form button-form\" onClick={props.submitAuth}>Connect</button>\r\n\r\n        </div>\r\n      </div>\r\n  );\r\n}","import React, { Component, useState, useEffect} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport App from \"../../App\";\r\nimport AuthForm from \"./AuthForm\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\n\r\nexport default function Login(props) {\r\n\r\n\t//--------------REDIRECTION APRES VALIDATION DU FORM--------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (authentificated === true) {\r\n      navigate('/Projects');\r\n    }\r\n  });\r\n\r\n  //---------------State ---------------------\r\n\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [isValid, setIsValid] = useState(true);\r\n\tconst [authentificated, setAuthentificated] = useState(false);\r\n\r\n\t// --------- Events -----------------------\r\n\r\n\tconst OnChangeUsername = (e) => { setUsername(e.target.value);};\r\n\r\n\tconst OnChangePassword = (e) => { setPassword(e.target.value);};\r\n\r\n\tconst submitAuth = async (e) => {\r\n\t\tconst Authentificated = await AuthService.login(username,password);\r\n\t\tif (Authentificated) {\r\n\t\t\tsetIsValid(true);\r\n\t\t\tsetAuthentificated(true);\r\n\t\t}\t\r\n\t\telse {\r\n\t\t\tsetIsValid(false);\r\n\t\t}\t\r\n\t};\r\n\r\n\r\n\t// ------------- JSX ---------------\r\n  return (\r\n  \t<>\r\n  \t\t<App></App>\r\n\r\n    \t<AuthForm\r\n\t\t\t\tUsernameFieldName = \"user_username\"\r\n\t\t\t\tUsernameFieldValue = {username}\r\n\t\t\t\tOnChangeUsername = {OnChangeUsername}\r\n\t\t\t\tPasswordFieldName = \"user_password\"\r\n\t\t\t\tPasswordFieldValue = {password}\r\n\t\t\t\tOnChangePassword = {OnChangePassword}\r\n\t\t\t\tsubmitAuth = {submitAuth}\r\n\t\t\t\tisValid = {isValid}\r\n\t\t\t\tvalidationMessage = \"Authentification failed\">\t\t\r\n      </AuthForm>\r\n\r\n    </>\r\n  );\r\n}","import React, { useCallback } from \"react\"; //JSX\r\nimport Particles from \"react-tsparticles\";\r\nimport type { Engine } from \"tsparticles-engine\";\r\nimport { loadFull } from \"tsparticles\";\r\n\r\n\r\nexport default function ContactParticles(props: unknown) {\r\n  // this customizes the component tsParticles installation\r\n  const customInit = useCallback(async (engine: Engine) => {\r\n    // this adds the bundle to tsParticles\r\n    await loadFull(engine);\r\n  });\r\n\r\n  const options = require(\"./dust.json\");\r\n  \r\n  return <Particles options={options} init={customInit} />;\r\n}","import React from \"react\"; //JSX\r\nimport App from \"../App\";\r\nimport ContactParticles from \"./particles/ContactParticles\";\r\n \r\nexport default function Contact(props) {\r\n  return (\r\n    <>\r\n      <ContactParticles />\r\n      <App />\r\n      <div className=\"wrapper-form\">\r\n        <div className=\"box-form\">\r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Email</div> \r\n            <input type=\"text\" className='textFields-form small' placeholder='johndoe@mail.com'></input>\r\n          </div>\r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Message</div>\r\n            <textarea className='textArea-form' placeholder='Hello Mr.PERRET,'></textarea>\r\n          </div>\r\n\r\n          <input type=\"submit\" className=\"item-form button-form\" value=\"Send\"/> \r\n          {/* onclick={} */}\r\n\r\n        </div>      \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nconst http = axios.create({\r\n  baseURL: \"http://localhost:3006/api\",\r\n  headers: {\"Content-type\": \"multipart/form-data\"}\r\n});\r\n\r\nclass ProjectDataService {\r\n\r\n  get getUploadsFiles() {\r\n    return \"http://localhost:3006/uploads/\";\r\n  } \r\n  \r\n  getAll() {\r\n    return http.get(\"/Projects\");\r\n  }\r\n  get(id) {\r\n    return http.get(`/Projects/${id}`);\r\n  }\r\n  create(data) {\r\n    return http.post(\"/Projects\", data);\r\n  }\r\n  update(id, data) {\r\n    return http.put(`/Projects/${id}`, data);\r\n  }\r\n  delete(id) {\r\n    return http.delete(`/Projects/${id}`);\r\n  }\r\n\r\n}\r\nexport default new ProjectDataService();\r\n","import React, { useState, useEffect } from 'react'; //React pour JSX\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\nimport App from \"../../App\"\r\n \r\nexport default function GetAllProject(props) {\r\n\r\n  //----------------------- Initial State -------------------------\r\n  const [projects,setProjects] = useState([]); //Déclare projects en tant qu'array vu qu'on va recevoir un tableau d'objets en json\r\n  const navigate = useNavigate();\r\n\r\n // useEffect = quand le composant est inétgré dans le DOM \r\n  useEffect(()=>{ retrieveProjects() },[]) //notice the empty array here so it only happens once\r\n\r\n  const retrieveProjects = () => {\r\n    ProjectDataService.getAll()\r\n      .then(response => {\r\n        setProjects(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e); \r\n      });\r\n  }\r\n\r\n  function deleteProject(id){ \r\n    //SWAL \r\n    ProjectDataService.delete(id)      \r\n      .then(response => {\r\n        setProjects(projects.filter(projects => projects.project_id !== id)); //enleve le project supprimé du state pour que ca refresh\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  function redirectToUpdate(id){\r\n    navigate(\"/Project/update/\"+id);\r\n  }\r\n  \r\n\r\n\r\n  // ----------------- JSX ---------------\r\n  return (\r\n    <>\r\n      <App />\r\n      <div className=\"wrapper-project\">\r\n                   \r\n        {projects && projects.map((project) => (\r\n\r\n          <div className=\"item-project\" key={project.project_id}>\r\n\r\n            <div className=\"buttons-project\"> {/* if is_granted('ROLE_ADMIN') */}\r\n              \r\n              <button className=\"deleteProjectButton-project alertDisplayerDelete_JS\" \r\n                onClick={deleteProject.bind(this, project.project_id)}\r\n              >Delete project</button>  {/* CRSF TOKEN */} \r\n\r\n              <button className=\"updateProjectButton-project\" \r\n                onClick={redirectToUpdate.bind(this, project.project_id)}\r\n              >Update project</button>  {/* ->  CRSF TOKEN */}\r\n\r\n            </div>     \r\n\r\n            <span className=\"title-project\">{project.project_name}</span>\r\n\r\n            <span className=\"tag-project\">{project.project_technologies}</span>\r\n\r\n            <img \r\n              className=\"image-project\" \r\n              src={ProjectDataService.getUploadsFiles+project.project_thumbnail_filename}>\r\n            </img>\r\n     \r\n            <Link className=\"link-project\" to={\"/Project/\" + project.project_id}>See More</Link>\r\n            \r\n          </div>\r\n\r\n        ))}\r\n\r\n        {/* if is_granted('ROLE_ADMIN') %} */}\r\n        <Link className=\"buttonAdd-project\" to=\"/Project/create\">Add new project</Link>\r\n\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n \r\n ","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\n// react-slick CSS\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n// Data service\r\nimport ProjectDataService from \"../../services/project.service\";\r\n\r\n\r\nexport default function Caroussel(props) {\r\n\r\n\t//props.images -> liste des images\r\n\r\n\tconst settings = {\r\n\t\tdots: true,\r\n\t\tinfinite: true,\r\n\t\tspeed: 500,\r\n\t\tslidesToShow: 1,\r\n\t\tslidesToScroll: 1\r\n    };\r\n\r\n    //className=\"image-discover\"\r\n\treturn (\r\n\t\t<div className=\"item-discover caroussel-discover\">\t\r\n\t\t\t<Slider {...settings}>\t\t\r\n\t\t\t\t{/* for image in project.project_images */}\r\n\r\n\t\t\t\t{props.loaded && props.project.project_images.map((image) => (\r\n\t\t\t\t\t<img \r\n\r\n\t\t\t\t\t\tsrc={ProjectDataService.getUploadsFiles+image.project_image_filename}\r\n\t\t\t\t\t\tkey={image.project_image_id}>\r\n\t\t\t\t\t</img>\r\n\t\t\t\t))}\r\n\t        </Slider>\r\n\t\t</div>\r\n\r\n\t);\r\n}\t\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link , useParams , useNavigate } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\nimport App from \"../../App\"\r\nimport Caroussel from \"./Caroussel\";\r\n\r\n\r\nexport default function GetOneProject(props) {\r\n\r\n  //----------------------------REDIRECTION APRES click sur bouton update ou incorrect :id-----------------------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (redirect === true) {\r\n      navigate('/Projects');\r\n    }\r\n    if (notFound === true)\r\n    {\r\n      navigate('/NotFound');\r\n    }\r\n  });\r\n\r\n  function redirectToUpdate(id){\r\n    navigate(\"/Project/update/\"+id);\r\n  }\r\n\r\n  // ----------------- Initialize State -------------------\r\n  const [notFound,setNotFound] = useState (false); //id not found\r\n  const [loaded,setLoaded] = useState (false); //data not loaded \r\n\r\n  const [project,setProject] = useState( //déclare project en tant que liste key/value\r\n    {\r\n      project_id: null,\r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: \"\",\r\n      project_images : null,\r\n      project_is_file_format: true,\r\n      project_release_filename: \"\",\r\n      project_release_url: \"\" \r\n    }\r\n  );\r\n\r\n  const [redirect,setRedirect] = useState (false);\r\n\r\n  // ----------------- Get request params -------------------\r\n  const { id } = useParams(); //Retrouve le paramètre id\r\n  // useEffect = quand le composant est inétgré dans le DOM \r\n  useEffect(()=>{ getProject(); },[]) //notice the empty array here so it only happens once\r\n\r\n  const getProject = () => {\r\n    ProjectDataService.get(id)\r\n      .then(response => {\r\n        setProject(response.data);\r\n        console.log(response.data);\r\n        setLoaded(true);\r\n      })\r\n      .catch(e => {\r\n        setNotFound(true);\r\n        console.log(e);\r\n      });\r\n  }\r\n  \r\n  const deleteProject = (id) => { \r\n    //SWAL \r\n    ProjectDataService.delete(id)      \r\n      .then(response => {\r\n        console.log(response.data);\r\n        setRedirect(true); //Redirection vers page virtuelle Project\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <App />\r\n      <div className=\"wrapper-discover\">\r\n        <div className=\"box-discover\">\r\n\r\n          <div className=\"buttons-project\"> {/* if is_granted('ROLE_ADMIN') */}\r\n            \r\n            <button className=\"deleteProjectButton-project alertDisplayerDelete_JS\" \r\n              onClick={deleteProject.bind(this, project.project_id)}\r\n            >Delete project</button>  {/* CRSF TOKEN */} \r\n\r\n            <button className=\"updateProjectButton-project\" \r\n              onClick={redirectToUpdate.bind(this, project.project_id)}\r\n            >Update project</button>  {/* CRSF TOKEN */}\r\n\r\n          </div> \r\n\r\n          <span className=\"item-discover title-discover\">{ project.project_name }</span>\r\n\r\n          <span className=\"item-discover tag-discover\">{ project.project_technologies }</span>  \r\n\r\n          <span className=\"item-discover description-discover\">{ project.project_description }</span>\r\n\r\n          \r\n          <Caroussel\r\n            loaded={loaded}\r\n            project={project}\r\n          >\r\n          </Caroussel>\r\n\r\n\r\n          { project.project_is_file_format === true ? \r\n            <a className=\"item-discover link-project\" \r\n              href={ProjectDataService.getUploadsFiles+project.project_release_filename} \r\n              download>Télécharger</a>\r\n          :\r\n            <a className=\"item-discover link-project\" \r\n              href={project.project_release_url} target=\"_blank\">Lien</a>\r\n          }  \r\n\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n ","import React, { useState, useEffect } from 'react';\r\n\r\nexport default function TextInput(props) {\r\n\r\n\tconst [valid, setValid] = useState(props.isValid);\r\n\r\n\treturn (\r\n\t\t<div className=\"item-form\">\r\n\t\t\t<div className=\"label-form\">{props.labelName}</div>\r\n\r\n\t\t\t{/* le champ peut etre multiline ou single-line, et si single-line, small ou normal */}\r\n\r\n\t\t\t{ props.multiline === true ?\r\n\r\n\t\t    <textarea\r\n\t\t\t\tclassName=\"textArea-form\" \r\n\t\t\t\tid={props.fieldName}\r\n\t\t\t\tvalue={props.fieldValue} \r\n\t\t\t\tonChange={props.onChangeEvent} \r\n\t\t\t\tname={props.fieldName}>\r\n        \t</textarea> \r\n\r\n\t\t\t: \r\n\t\t\t\t<>\r\n\t\t\t\t{ props.small === true ?\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"textFields-form small\" \r\n\t\t\t\t\t\tid={props.fieldName} \r\n\t\t\t\t\t\tvalue={props.fieldValue} \r\n\t\t\t\t\t\tonChange={props.onChangeEvent} \r\n\t\t\t\t\t\tname={props.fieldName}\r\n\t\t\t\t\t/>\r\n\t\t\t\t:\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"textFields-form\" \r\n\t\t\t\t\t\tid={props.fieldName} \r\n\t\t\t\t\t\tvalue={props.fieldValue} \r\n\t\t\t\t\t\tonChange={props.onChangeEvent} \r\n\t\t\t\t\t\tname={props.fieldName}\r\n\t      \t\t\t/>\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t</>\r\n\r\n\t\t\t}\r\n\r\n      { props.isValid === false ?\r\n      \t<div className=\"errorMessage\">{props.validationMessage}</div>\r\n      : null }\r\n\r\n\t\t</div> \r\n \t);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n//Assets\r\nimport deleteLogo from \"../../image/delete.png\";\r\n\r\nexport default function FileInput(props) {\r\n\r\n\tconst [valid, setValid] = useState(props.isValid);\r\n\tconst [removable, setRemovable] = useState(props.isRemovable);\r\n\r\n\treturn (\t\t\r\n\t\t<>\r\n\t\t{ props.isRemovable === false ?\r\n\r\n\t\t\t<div className=\"item-form\">\r\n            \t<div className=\"label-form\">{props.labelName}</div>\r\n\r\n            \t{ props.isMultiFile === true ?\r\n\r\n            \t\t<input \r\n\t            \t\ttype='file' \r\n\t            \t\tmultiple \r\n\t            \t\tname={props.fieldName}             \t\t \r\n\t            \t\tclassName='files-form'\r\n\t            \t\tonChange={props.onChangeEvent}>\r\n            \t\t</input>\r\n\r\n\t\t\t\t:\r\n\r\n\t\t\t\t    <input \r\n\t\t\t\t\t\ttype='file' \r\n\t\t\t\t\t\tname={props.fieldName} \r\n\t\t\t\t\t\tclassName='files-form'\r\n\t\t\t\t\t\tonChange={props.onChangeEvent}>\r\n\t\t            </input>\r\n\t\t\t\t}\r\n\r\n\r\n\t            { props.isValid === false ?\r\n\r\n\t            \t<div className=\"errorMessage\">{props.validationMessage}</div>\r\n\t            : \r\n\t            \tnull \r\n\t            }\r\n\t         </div>\r\n\r\n\t\t:\t\r\n\t\t\t<div className=\"item-form\">\r\n            \t<div className=\"label-form\">{props.labelName}</div>\r\n            \t<div className=\"file-box\">\r\n              \t\t<img src={deleteLogo} className=\"icon-delete\" onClick={props.onResetEvent}></img>\r\n\r\n              \t\t{ props.isMultiFile === true ?\r\n\r\n              \t\t\t<div className=\"file-name\">\r\n              \t\t\t\r\n\t              \t\t{ props.fieldValue.map((image) => (\r\n\t                  \t\t<div key={image.project_image_id}>{image.project_image_filename}</div>             \r\n\t                \t))}\r\n\r\n\t                \t</div>\r\n\t                :\r\n\r\n              \t\t\t<div className=\"file-name\">{props.fieldValue}</div>\r\n              \t\t}\r\n\r\n            \t</div>\r\n          \t</div> \r\n\r\n\t\t}\r\n\t\t</>\r\n\t);\r\n}","import React, { useState, useEffect } from 'react';\r\n//Components\r\nimport TextInput from \"../Form/TextInput\"\r\nimport FileInput from \"../Form/FileInput\"\r\n\r\n//Assets\r\nimport deleteLogo from \"../../image/delete.png\";\r\n\r\nexport default function FormProject(props) {\r\n\r\n  const [project,setProject] = useState(props.project);\r\n  const [removeThumbnailPossibility,setRemoveThumbnailPossibility] = useState(props.removeThumbnailPossibility);\r\n  const [removeImagesPossibility, setRemoveImagesPossibility] = useState(props.removeImagesPossibility);\r\n  const [removeReleaseFilePossibility,setRemoveReleaseFilePossibility] = useState(props.removeReleaseFilePossibility);\r\n\r\n//-------------------------------- JSX -----------------------------------------\r\n  return (\r\n    <div className=\"wrapper-form\">\r\n      <div className=\"box-form\">\r\n     \r\n        {/*----------------------------------------- Name Field ------------------------------------------*/}\r\n        <TextInput \r\n          multiline = {false}\r\n          small = {true}\r\n          labelName=\"Project Name\"\r\n          fieldName=\"project_name\"\r\n          fieldValue={props.project.project_name}\r\n          onChangeEvent={props.onChangeProject_name}\r\n          isValid={props.nameValidation.isValid}\r\n          validationMessage={props.nameValidation.message}>\r\n        </TextInput>\r\n\r\n      {/*----------------------------------------- Technologies Field ----------------------------------------*/}\r\n        <TextInput \r\n          multiline = {false}\r\n          small = {false}\r\n          labelName=\"Source and target technologies\"\r\n          fieldName=\"project_technologies\"\r\n          fieldValue={props.project.project_technologies}\r\n          onChangeEvent={props.onChangeProject_technologies}\r\n          isValid={props.technologiesValidation.isValid}\r\n          validationMessage={props.technologiesValidation.message}>\r\n        </TextInput>\r\n\r\n      {/*----------------------------------------- Description Field ----------------------------------------*/}         \r\n        <TextInput \r\n          multiline = {true}\r\n          small = {false}\r\n          labelName=\"Description\"\r\n          fieldName=\"project_description\"\r\n          fieldValue={props.project.project_description}\r\n          onChangeEvent={props.onChangeProject_description}\r\n          isValid={props.descriptionValidation.isValid}\r\n          validationMessage={props.descriptionValidation.message}>\r\n        </TextInput>\r\n\r\n      {/*----------------------------------------- Thumbnail Field ----------------------------------------*/}\r\n        <FileInput \r\n          isMultiFile={false}\r\n          labelName=\"Thumbnail\"\r\n          fieldName=\"project_thumbnail_filename\"\r\n          onChangeEvent={props.onChangeProject_thumbnail_filename}\r\n          isValid={props.thumbnailValidation.isValid}\r\n          validationMessage={props.thumbnailValidation.message}\r\n          isRemovable={props.removeThumbnailPossibility}\r\n          onResetEvent={props.onResetProject_thumbnail_filename}\r\n          fieldValue={props.project.project_thumbnail_filename}>\r\n        </FileInput>\r\n       \r\n      {/*--------------------------------------------- Images Field--------------------------------------*/}\r\n          <FileInput \r\n            isMultiFile={true}\r\n            labelName=\"Images\"\r\n            fieldName=\"project_images\"\r\n            onChangeEvent={props.onChangeProject_images}\r\n            isValid={props.imagesValidation.isValid}\r\n            validationMessage={props.imagesValidation.message}\r\n            isRemovable={props.removeImagesPossibility}\r\n            onResetEvent={props.onResetProject_images}\r\n            fieldValue={props.project.project_images}>\r\n          </FileInput>\r\n\r\n      {/*--------------------------------------- Format Select------------------------------------------------*/}\r\n        <div className=\"item-form\">\r\n          <div className=\"label-form\">Format</div>\r\n          <select \r\n            className='FormatChoice_JS'\r\n            id=\"project_is_file_format\"  \r\n            value={props.project.project_is_file_format} \r\n            onChange={props.onChangeProject_is_file_format} \r\n            name=\"project_is_file_format\">\r\n              <option value=\"true\">File</option>\r\n              <option value=\"false\">Link</option>\r\n          </select>\r\n        </div>    \r\n\r\n      {/*----------------------------------------- Release Field (URL OR FILE)----------------------------------------------*/}\r\n        { props.project.project_is_file_format === true ?\r\n\r\n          <FileInput \r\n            isMultiFile={false}\r\n            labelName=\"Release File\"\r\n            fieldName=\"project_release_filename\"\r\n            onChangeEvent={props.onChangeProject_release_filename}\r\n            isValid={props.releaseFileValidation.isValid}\r\n            validationMessage={props.releaseFileValidation.message}\r\n            isRemovable={props.removeReleaseFilePossibility}\r\n            onResetEvent={props.onResetProject_release_filename}\r\n            fieldValue={props.project.project_release_filename}>\r\n          </FileInput>\r\n\r\n        :\r\n\r\n          <TextInput \r\n            multiline = {false}\r\n            small = {false}\r\n            labelName=\"Link\"\r\n            fieldName=\"project_release_url\"\r\n            fieldValue={props.project.project_release_url} \r\n            onChangeEvent={props.onChangeProject_release_url}\r\n            isValid={props.releaseUrlValidation.isValid}\r\n            validationMessage={props.releaseUrlValidation.message}>\r\n          </TextInput>\r\n        }\r\n\r\n      {/*----------------------------------------- Button Submit----------------------------------------*/}\r\n        { props.mode === \"create\" ?\r\n          <button className=\"item-form button-form\" onClick={props.saveProject}>Create Project</button>\r\n        :\r\n          <button className=\"item-form button-form\" onClick={props.saveProject}>Update Project</button>\r\n        } \r\n\r\n      </div>\r\n  </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\n//Components\r\nimport App from \"../../App\";\r\nimport FormProject from \"./FormProject\"\r\n\r\nexport default function CreateProject(props) {\r\n\r\n\t//----------------------------REDIRECTION APRES VALIDATION DU FORM-----------------------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (project.project_is_created) {\r\n      navigate('/Projects');\r\n    }\r\n  });\r\n\r\n  //--------------------------------- State Initial -------------------------------------\r\n\r\n\tconst [project,setProject] = useState( //déclare en tant que liste key/value\r\n  { \r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: null,\r\n      project_images: [],\r\n      project_is_file_format: true,\r\n      project_release_filename: null,\r\n      project_release_url: \"\",\r\n      project_is_created: false,\r\n  });\r\n\r\n\tconst [nameValidation, setNameValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [technologiesValidation, setTechnologiesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [descriptionValidation, setDescriptionValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [thumbnailValidation, setThumbnailValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [imagesValidation, setImagesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  }) \r\n\r\n  const [releaseFileValidation, setReleaseFileValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [releaseUrlValidation, setReleaseUrlValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n// ------------------------- Evenementiel (modification du state en fonction des inputs) -------------------------\r\n\r\n  const onChangeProject_name = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_name : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_technologies = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_technologies : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_description = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_description : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_thumbnail_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : e.target.files[0] } //pcq c'est un fichier\r\n    });\r\n  }\r\n\r\n  const onChangeProject_images = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images : e.target.files } //pas d'index pcq c'est multifile\r\n    });\r\n  }\r\n\r\n  const onChangeProject_is_file_format = (e) => {\r\n    let result = true; \r\n    //si on passe e.target.value, project_is_file_format pointera sur un objet et non une valeur\r\n    // du coup setState n'aura plus d'incidence\r\n    if (e.target.value === \"true\")\r\n    {\r\n      result = true;\r\n    }\r\n    else {\r\n      result = false;\r\n    }\r\n    setProject(prevState => {\r\n      return { ...prevState, project_is_file_format : result }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : e.target.files[0]  }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_url = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_url : e.target.value }\r\n    });\r\n  } \r\n\r\n//------------------------------------ CALL API ----------------------------------------------------------\r\n\r\n const saveProject = (e) => {\r\n\r\n    //------------- instanciation d'un objet FormData pour envoyer les données à l'API --------------   \r\n    let data = new FormData(); // --> \"content\" : \"multipart/form-data\"\r\n    data.append('project_name', project.project_name);\r\n    data.append('project_technologies', project.project_technologies);\r\n    data.append('project_description', project.project_description);\r\n    data.append('project_thumbnail_filename', project.project_thumbnail_filename);\r\n\r\n    for (let i = 0; i < project.project_images.length; i++) { // images files\r\n      data.append(`project_images`, project.project_images[i]);\r\n    }    \r\n\r\n    data.append('project_is_file_format', project.project_is_file_format);\r\n    data.append('project_release_filename', project.project_release_filename);\r\n    data.append('project_release_url', project.project_release_url);\r\n\r\n    //--------------------------------- Request --------------------------------------\r\n    ProjectDataService.create(data)\r\n    .then(response => {\r\n      if (response.status === 200) {\r\n        console.log(response.data);\r\n        setProject(prevState => {\r\n          return { ...prevState, project_is_created : true }\r\n        });\r\n      }\r\n    })\r\n    .catch(e => {\r\n      if (e.response.status === 422) {\r\n        // Reset des states pour éviter que certains messages persistent même apres correction\r\n        setNameValidation({isValid : true, message : \"\"})\r\n        setTechnologiesValidation({isValid : true, message : \"\"})\r\n        setDescriptionValidation({isValid : true, message : \"\"})\r\n        setThumbnailValidation({isValid : true, message : \"\"})\r\n        setImagesValidation({isValid: true, message:\"\"})\r\n        setReleaseFileValidation({isValid : true, message : \"\"})\r\n        setReleaseUrlValidation({isValid : true, message : \"\"}) \r\n        // Gestion des erreurs et ajout au state error\r\n        e.response.data.errors.forEach(error => {\r\n          switch (error.param) { \r\n            case \"project_name\":\r\n              setNameValidation({isValid : false, message : error.msg});\r\n              break;\r\n            case \"project_technologies\":\r\n              setTechnologiesValidation({isValid : false, message : error.msg});\r\n              break;\r\n            case \"project_description\":\r\n              setDescriptionValidation({isValid : false, message : error.msg});\r\n              break;\r\n            case \"project_thumbnail_filename\":\r\n              setThumbnailValidation({isValid : false, message : error.msg});\r\n              break;\r\n            case \"project_images\":\r\n              setImagesValidation({isValid : false, message : error.msg});\r\n              break;\r\n            case \"project_release_filename\":\r\n              setReleaseFileValidation({isValid : false, message : error.msg});\r\n              break;\r\n            case \"project_release_url\":\r\n              setReleaseUrlValidation({isValid : false, message : error.msg});\r\n              break;\r\n          }          \r\n        });\r\n      }\r\n      else \r\n      {\r\n        //SWAL Server error\r\n      } \r\n    });\r\n  }\r\n\r\n//----------------------------------------------------------- JSX -----------------------------------------------------\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<App></App>\r\n\t\t\t<FormProject\r\n\t\t\t\tmode=\"create\"\r\n\t\t\t\tproject= {project}\r\n\r\n\t\t\t\tonChangeProject_name = {onChangeProject_name}\r\n\t  \t\tonChangeProject_technologies = {onChangeProject_technologies}\r\n\t  \t\tonChangeProject_description = {onChangeProject_description}\r\n\t  \t\tonChangeProject_thumbnail_filename = {onChangeProject_thumbnail_filename}\r\n\t  \t\tonChangeProject_images = {onChangeProject_images}\r\n\t  \t\tonChangeProject_is_file_format = {onChangeProject_is_file_format}\r\n\t  \t\tonChangeProject_release_filename = {onChangeProject_release_filename}\r\n\t  \t\tonChangeProject_release_url = {onChangeProject_release_url}\r\n\r\n\t  \t\tremoveThumbnailPossibility = {false}\r\n\t  \t\tremoveImagesPossibility = {false} \r\n\t  \t\tremoveReleaseFilePossibility = {false}\r\n\t  \t\tonResetProject_images = {null}\r\n\t  \t\tonResetProject_thumbnail_filename = {null} \r\n\t  \t\tonResetProject_release_filename = {null}\r\n\r\n\t\t\t\tnameValidation = {nameValidation}\r\n\t\t\t\ttechnologiesValidation = {technologiesValidation}\r\n\t\t\t\tdescriptionValidation = {descriptionValidation}\r\n\t\t\t\tthumbnailValidation = {thumbnailValidation}\r\n\t\t\t\timagesValidation = {imagesValidation}\r\n\t\t\t\treleaseFileValidation = {releaseFileValidation}\r\n\t\t\t\treleaseUrlValidation = {releaseUrlValidation}\r\n\r\n\t\t\t\tsaveProject = {saveProject}\r\n\t\t\t>\r\n\t\t\t</FormProject>\r\n\t\t</>\r\n\r\n\t);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\n//Components\r\nimport App from \"../../App\";\r\nimport FormProject from \"./FormProject\"\r\n\r\nexport default function UpdateProject(props) {\r\n\r\n  //----------------------------REDIRECTION APRES VALIDATION DU FORM ou 404 -----------------------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (project.project_is_updated) {\r\n      navigate('/Projects');\r\n    }\r\n    if (notFound === true)\r\n    {\r\n      navigate('/NotFound');\r\n    }\r\n    if (dataFound === true)\r\n    {\r\n      setRemoveButtons();\r\n    }\r\n\r\n  });\r\n\r\n  //--------------------------------- State Initial -------------------------------------\r\n  const [notFound,setNotFound] = useState (false); //id not found\r\n\r\n\tconst [project,setProject] = useState( //déclare en tant que liste key/value\r\n  { \r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: null,\r\n      project_images: [],\r\n      project_is_file_format: true,\r\n      project_release_filename: null,\r\n      project_release_url: \"\",\r\n      project_is_updated: false,\r\n  });\r\n\r\n  //Pour reset une et une seule fois, en mode update, le champ file \r\n  // cad supprimer le fichier côté serveur\r\n  const [dataFound,setDataFound] = useState(false);\r\n  const [removeThumbnailPossibility,setRemoveThumbnailPossibility] = useState(false);\r\n  const [removeImagesPossibility, setRemoveImagesPossibility] = useState(false);\r\n  const [removeReleaseFilePossibility,setRemoveReleaseFilePossibility] = useState(false);\r\n\r\n\tconst [nameValidation, setNameValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [technologiesValidation, setTechnologiesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [descriptionValidation, setDescriptionValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [thumbnailValidation, setThumbnailValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [imagesValidation, setImagesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  }) \r\n\r\n  const [releaseFileValidation, setReleaseFileValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [releaseUrlValidation, setReleaseUrlValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  // --------------- actualisation du state pour MODE UPDATE (herité avec props) -------------------------------\r\n  \r\n  const { id } = useParams(); //Retrouve le paramètre id\r\n  useEffect(() => { // à l'instanciation du component     \r\n      getProject(id);\r\n  },[]) //notice the empty array here so it only happens once \r\n\r\n  const getProject = (id) => {\r\n    ProjectDataService.get(id)\r\n      .then(response => {\r\n        setProject(response.data);\r\n        setDataFound(true); //pour définir les options de removes avec croix rouge   \r\n      })\r\n      .catch(e => {\r\n        setNotFound(true);\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  const setRemoveButtons = () => {\r\n    setRemoveThumbnailPossibility(true); //Enclenche la possibilité de supprimer le fichier côté serveur\r\n    setRemoveImagesPossibility(true);\r\n    if (project.project_is_file_format === true) //seulement si c'est un release de type file\r\n    {\r\n      setRemoveReleaseFilePossibility(true); //Enclenche la possibilité de supprimer le fichier côté serveur\r\n    }\r\n    setDataFound(undefined); //Reset pour éviter que ca ne relance cette fonction à chaque modif du state\r\n  }\r\n\r\n// ------------------------- Evenementiel (modification du state en fonction des inputs) -------------------------\r\n\r\n  const onChangeProject_name = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_name : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_technologies = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_technologies : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_description = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_description : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_thumbnail_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : e.target.files[0] } //pcq c'est un fichier\r\n    });\r\n  }\r\n\r\n  const onResetProject_thumbnail_filename = () => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : null } //pcq c'est un fichier\r\n    });\r\n    setRemoveThumbnailPossibility(false);\r\n  }\r\n\r\n  const onChangeProject_images = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images : e.target.files } //pas d'index pcq c'est multifile\r\n    });\r\n  }\r\n\r\n  const onResetProject_images = () => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images_updated : true } //pcq c'est un fichier\r\n    });\r\n    setRemoveImagesPossibility(false);\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images_updated : true }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_is_file_format = (e) => {\r\n    let result = true; \r\n    //si on passe e.target.value, project_is_file_format pointera sur un objet et non une valeur\r\n    // du coup setState n'aura plus d'incidence\r\n    if (e.target.value === \"true\")\r\n    {\r\n      result = true;\r\n    }\r\n    else {\r\n      result = false;\r\n    }\r\n    setProject(prevState => {\r\n      return { ...prevState, project_is_file_format : result }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : e.target.files[0]  }\r\n    });\r\n  }\r\n\r\n  const onResetProject_release_filename = () => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : null } //pcq c'est un fichier\r\n    });\r\n    setRemoveReleaseFilePossibility(false);\r\n  }\r\n\r\n  const onChangeProject_release_url = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_url : e.target.value }\r\n    });\r\n  } \r\n\r\n//------------------------------------ CALL API ----------------------------------------------------------\r\n\r\n  const saveProject = (e) => {\r\n\r\n    //------------- instanciation d'un objet FormData pour envoyer les données à l'API --------------   \r\n    let data = new FormData(); // --> \"content\" : \"multipart/form-data\"\r\n    data.append('project_name', project.project_name);\r\n    data.append('project_technologies', project.project_technologies);\r\n    data.append('project_description', project.project_description);\r\n    data.append('project_thumbnail_filename', project.project_thumbnail_filename);\r\n\r\n    // images files\r\n    data.append('project_images_updated', project.project_images_updated);\r\n    //Si les images ont été modifiés par l'utilisateur\r\n    if ( project.project_images_updated === true) \r\n    {\r\n      for (let i = 0; i < project.project_images.length; i++) {\r\n        data.append(`project_images`, project.project_images[i]);\r\n      }    \r\n    }  \r\n\r\n    data.append('project_is_file_format', project.project_is_file_format);\r\n    data.append('project_release_filename', project.project_release_filename);\r\n    data.append('project_release_url', project.project_release_url);\r\n\r\n    //--------------------------------- Request --------------------------------------\r\n    ProjectDataService.update(id,data)\r\n      .then(response => {\r\n        setProject(prevState => {\r\n          return { ...prevState, project_is_updated : true }\r\n        });\r\n      })\r\n      .catch(e => {\r\n        if (e.response.status === 422) {\r\n          // Reset des states pour éviter que certains messages persistent même apres correction\r\n          setNameValidation({isValid : true, message : \"\"})\r\n          setTechnologiesValidation({isValid : true, message : \"\"})\r\n          setDescriptionValidation({isValid : true, message : \"\"})\r\n          setThumbnailValidation({isValid : true, message : \"\"})\r\n          setReleaseFileValidation({isValid : true, message : \"\"})\r\n          setReleaseUrlValidation({isValid : true, message : \"\"}) \r\n          // Gestion des erreurs et ajout au state error\r\n          e.response.data.errors.forEach(error => {\r\n            switch (error.param) {\r\n              case \"project_name\":\r\n              setNameValidation({isValid : false, message : error.msg})\r\n              break;\r\n              case \"project_technologies\":\r\n              setTechnologiesValidation({isValid : false, message : error.msg})\r\n              break;\r\n              case \"project_description\":\r\n              setDescriptionValidation({isValid : false, message : error.msg})\r\n              break;\r\n              case \"project_thumbnail_filename\":\r\n              setThumbnailValidation({isValid : false, message : error.msg})\r\n              break;\r\n              case \"project_images\":\r\n              setImagesValidation({isValid : false, message : error.msg});\r\n              break;\r\n              case \"project_release_filename\":\r\n              setReleaseFileValidation({isValid : false, message : error.msg})\r\n              break;\r\n              case \"project_release_url\":\r\n              setReleaseUrlValidation({isValid : false, message : error.msg})\r\n              break;\r\n            }\r\n          });\r\n\r\n        }\r\n        else \r\n        {\r\n          //SWAL Server error\r\n        }  \r\n      });\r\n  }\r\n\r\n\r\n//----------------------------------------------------------- JSX -----------------------------------------------------\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<App></App>\r\n\t\t\t<FormProject\r\n\t\t\t\tmode=\"update\"\r\n\t\t\t\tproject= {project}\r\n\r\n\t\t\t\tonChangeProject_name = {onChangeProject_name}\r\n\t  \t\tonChangeProject_technologies = {onChangeProject_technologies}\r\n\t  \t\tonChangeProject_description = {onChangeProject_description}\r\n\t  \t\tonChangeProject_thumbnail_filename = {onChangeProject_thumbnail_filename}\r\n\t  \t\tonChangeProject_images = {onChangeProject_images}\r\n\t  \t\tonChangeProject_is_file_format = {onChangeProject_is_file_format}\r\n\t  \t\tonChangeProject_release_filename = {onChangeProject_release_filename}\r\n\t  \t\tonChangeProject_release_url = {onChangeProject_release_url}\r\n\r\n\t  \t\tremoveThumbnailPossibility = {removeThumbnailPossibility}\r\n\t  \t\tremoveImagesPossibility = {removeImagesPossibility} \r\n\t  \t\tremoveReleaseFilePossibility = {removeReleaseFilePossibility}\r\n\r\n\t  \t\tonResetProject_images = {onResetProject_images}\r\n\t  \t\tonResetProject_thumbnail_filename = {onResetProject_thumbnail_filename} \r\n\t  \t\tonResetProject_release_filename = {onResetProject_release_filename}\r\n\r\n\t\t\t\tnameValidation = {nameValidation}\r\n\t\t\t\ttechnologiesValidation = {technologiesValidation}\r\n\t\t\t\tdescriptionValidation = {descriptionValidation}\r\n\t\t\t\tthumbnailValidation = {thumbnailValidation}\r\n\t\t\t\timagesValidation = {imagesValidation}\r\n\t\t\t\treleaseFileValidation = {releaseFileValidation}\r\n\t\t\t\treleaseUrlValidation = {releaseUrlValidation}\r\n\r\n\t\t\t\tsaveProject = {saveProject}\r\n\t\t\t>\r\n\t\t\t</FormProject>\r\n\t\t</>\r\n\r\n\t);\r\n}","import React, { Component } from \"react\";\r\nimport App from \"../App\";\r\nimport logo from \"../image/404.png\";\r\n\r\nexport default function NotFound(props) {\r\n  return (\r\n    <>\r\n      <App />\r\n      <div className=\"wrapper-form\">\r\n        <img className=\"not-found-image\" src={logo}></img>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n ","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nimport Home from \"./components/Home\";\nimport Login from \"./components/Auth/Login\";\n//import Logout from \"./components/Auth/Logout\";\nimport Contact from \"./components/Contact\";\nimport GetAllProject from \"./components/Project/GetAllProject\";\nimport GetOneProject from \"./components/Project/GetOneProject\";\nimport CreateProject from \"./components/Project/CreateProject\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport NotFound from \"./components/NotFound\";\n\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <Routes>\n      <Route exact path=\"/\" element={<Home />} />\n      <Route path=\"/Login\" element={<Login  />} />\n      <Route path=\"/Contact\" element={<Contact />} />\n      <Route path=\"/Projects\" element={<GetAllProject />} />\n      <Route path=\"/Project/:id\" element={<GetOneProject />} />\n      <Route path=\"/Project/create\" element={<CreateProject/>} />\n      <Route path=\"/Project/update/:id\" element={<UpdateProject/>} /> \n      <Route path=\"/404\" element={<NotFound/>} />\n      <Route path=\"*\" element={<NotFound/>} />\n\n    </Routes>\n  </BrowserRouter> \n); //render l'argument 1 <JSX> dans l'argument 2 <root element>","module.exports = __webpack_public_path__ + \"static/media/delete.bf2628e4.png\";","module.exports = __webpack_public_path__ + \"static/media/thunderParticle.5d153796.png\";","module.exports = __webpack_public_path__ + \"static/media/404.9e40b6a3.png\";"],"sourceRoot":""}