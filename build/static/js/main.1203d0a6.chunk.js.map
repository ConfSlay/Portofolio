{"version":3,"sources":["image/delete.png","image/thunderParticle.png","image/404.png","App.js","components/Home.js","components/particles/ContactParticles.js","components/Contact.js","services/project.service.js","components/Project/GetAllProject.js","components/Project/GetOneProject.js","components/Project/FormProject.js","components/NotFound.js","index.js"],"names":["module","exports","__webpack_require__","p","App","props","useEffect","document","querySelector","addEventListener","classList","toggle","contains","react_default","a","createElement","Fragment","id","className","react_router_dom","to","src","logo","Home","App_App","ContactParticles","customInit","useCallback","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","engine","wrap","_context","prev","next","loadFull","stop","_x","apply","this","arguments","options","require","react_tsparticles_default","init","Contact","type","placeholder","value","http","axios","create","baseURL","headers","Content-type","project_service","get","concat","data","post","put","delete","GetAllProject","_this","_useState","useState","_useState2","slicedToArray","projects","setProjects","navigate","useNavigate","retrieveProjects","ProjectDataService","getAll","then","response","console","log","catch","e","deleteProject","filter","project_id","redirectToUpdate","map","project","key","onClick","bind","project_name","project_technologies","getUploadsFiles","project_thumbnail_filename","GetOneProject","redirect","notFound","setNotFound","_useState3","project_description","project_is_file_format","project_release_filename","project_release_url","_useState4","setProject","_useState5","_useState6","setRedirect","useParams","getProject","href","download","target","FormProject","project_is_created_or_updated","dataFound","setRemoveButtons","setDataFound","_useState7","_useState8","removeThumbnailPossibility","setRemoveThumbnailPossibility","_useState9","_useState10","removeReleaseFilePossibility","setRemoveReleaseFilePossibility","_useState11","isValid","message","_useState12","nameValidation","setNameValidation","_useState13","_useState14","technologiesValidation","setTechnologiesValidation","_useState15","_useState16","descriptionValidation","setDescriptionValidation","_useState17","_useState18","thumbnailValidation","setThumbnailValidation","_useState19","_useState20","releaseFileValidation","setReleaseFileValidation","_useState21","_useState22","releaseUrlValidation","setReleaseUrlValidation","mode","undefined","saveProject","FormData","append","status","prevState","objectSpread","errors","forEach","error","param","msg","update","onChange","name","files","deleteLogo","multiple","result","ReactDOM","createRoot","getElementById","render","react_router","exact","path","element","NotFound_Home"],"mappings":"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","file":"static/js/main.1203d0a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.bf2628e4.png\";","module.exports = __webpack_public_path__ + \"static/media/thunderParticle.5d153796.png\";","module.exports = __webpack_public_path__ + \"static/media/404.9e40b6a3.png\";","import React, { useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"./image/thunderParticle.png\";\r\nimport \"./App.css\";\r\n\r\n\r\nexport default function App(props) {\r\n\r\n    useEffect(()=>{  // Menu burger Animation et Display\r\n        document.querySelector(\".iconMenuBox\").addEventListener('click', function() {\r\n            // Icon\r\n            document.querySelector(\".icon-1\").classList.toggle('a');\r\n            document.querySelector(\".icon-2\").classList.toggle('c');\r\n            document.querySelector(\".icon-3\").classList.toggle('b');\r\n\r\n            // Menu\r\n            if (document.querySelector(\".burgerMenuBox\").classList.contains('appearing')  \r\n                || document.querySelector(\".burgerMenuBox\").classList.contains('disappearing') )\r\n            {\r\n                document.querySelector(\".burgerMenuBox\").classList.toggle('disappearing');\r\n                document.querySelector(\".burgerMenuBox\").classList.toggle('appearing');\r\n            }\r\n            else\r\n            {\r\n                document.querySelector(\".burgerMenuBox\").classList.toggle('appearing');\r\n            }\r\n        });\r\n    },[]) //notice the empty array here so it only happens once when the component is up\r\n\r\n\r\n    return (\r\n      <>   \r\n        <div id=\"particles-js\"></div> {/* particles.js container */}\r\n        <div className=\"Header\">\r\n            <Link className=\"leftBox\" to=\"/\">\r\n                <img className=\"itemLeftBox imageHeader\" src={logo}></img> \r\n                <span className=\"itemLeftBox titleHeader\">\r\n                    <div className=\"titleHeader-top\">Richard PERRET</div>\r\n                    <div className=\"hiding-titleHeader-bot\">Richard PERRET</div>\r\n                    <div className=\"titleHeader-bot\">Richard PERRET</div>\r\n                </span>\r\n            </Link>\r\n                                    {/* Version Mobile */}\r\n            {/* itemIconMenuBox */}\r\n            <div className=\"iconMenuBox\">\r\n                <div className=\"icon-1\"></div>\r\n                <div className=\"icon-2\"></div>\r\n                <div className=\"icon-3\"></div>\r\n            </div>\r\n\r\n            <div className=\"burgerMenuBox\">    \r\n                <Link className=\"itemBugerMenuBox\" to=\"/Projects\">PROJETS</Link>\r\n                <Link className=\"itemBugerMenuBox\" to=\"/Contact\">CONTACT</Link>\r\n            </div>\r\n\r\n                                    {/* Version Desktop */}\r\n            <div className=\"linksBox\">\r\n                <Link className=\"itemLinksBox blue\" to=\"/Contact\">CONTACT</Link>\r\n                <Link className=\"itemLinksBox\" to=\"/Projects\">PROJETS</Link> \r\n            </div>         \r\n        </div>\r\n      </>\r\n    );\r\n    }\r\n","import React, { Component } from \"react\";\r\nimport App from \"../App\"\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <>\r\n      <App />\r\n    </>\r\n  );\r\n}\r\n ","import React, { useCallback } from \"react\"; //JSX\r\nimport Particles from \"react-tsparticles\";\r\nimport type { Engine } from \"tsparticles-engine\";\r\nimport { loadFull } from \"tsparticles\";\r\n\r\n\r\nexport default function ContactParticles(props: unknown) {\r\n  // this customizes the component tsParticles installation\r\n  const customInit = useCallback(async (engine: Engine) => {\r\n    // this adds the bundle to tsParticles\r\n    await loadFull(engine);\r\n  });\r\n\r\n  const options = require(\"./dust.json\");\r\n  \r\n  return <Particles options={options} init={customInit} />;\r\n}","import React from \"react\"; //JSX\r\nimport App from \"../App\";\r\nimport ContactParticles from \"./particles/ContactParticles\";\r\n \r\nexport default function Contact(props) {\r\n  return (\r\n    <>\r\n      <ContactParticles />\r\n      <App />\r\n      <div className=\"wrapper-form\">\r\n        <div className=\"box-form\">\r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Email<span className=\"textNeeded-form\">*</span></div> \r\n            <input type=\"text\" className='textFields-form small' placeholder='johndoe@mail.com'></input>\r\n          </div>\r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Message<span className=\"textNeeded-form\">*</span></div>\r\n            <textarea className='textArea-form' placeholder='Hello Mr.PERRET,'></textarea>\r\n          </div>\r\n\r\n          <input type=\"submit\" className=\"item-form button-form\" value=\"Send\"/> \r\n          {/* onclick={} */}\r\n\r\n        </div>      \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nconst http = axios.create({\r\n  baseURL: \"http://localhost:3006/api\",\r\n  headers: {\"Content-type\": \"multipart/form-data\"}\r\n});\r\n\r\nclass ProjectDataService {\r\n\r\n  get getUploadsFiles() {\r\n    return \"http://localhost:3006/uploads/\";\r\n  } \r\n  \r\n  getAll() {\r\n    return http.get(\"/Projects\");\r\n  }\r\n  get(id) {\r\n    return http.get(`/Projects/${id}`);\r\n  }\r\n  create(data) {\r\n    return http.post(\"/Projects\", data);\r\n  }\r\n  update(id, data) {\r\n    return http.put(`/Projects/${id}`, data);\r\n  }\r\n  delete(id) {\r\n    return http.delete(`/Projects/${id}`);\r\n  }\r\n\r\n}\r\nexport default new ProjectDataService();\r\n","import React, { useState, useEffect } from 'react'; //React pour JSX\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\nimport App from \"../../App\"\r\n \r\nexport default function GetAllProject(props) {\r\n\r\n  //----------------------- Initial State -------------------------\r\n  const [projects,setProjects] = useState([]); //Déclare projects en tant qu'array vu qu'on va recevoir un tableau d'objets en json\r\n  const navigate = useNavigate();\r\n\r\n // useEffect = quand le composant est inétgré dans le DOM \r\n  useEffect(()=>{ retrieveProjects() },[]) //notice the empty array here so it only happens once\r\n\r\n  const retrieveProjects = () => {\r\n    ProjectDataService.getAll()\r\n      .then(response => {\r\n        setProjects(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e); \r\n      });\r\n  }\r\n\r\n  function deleteProject(id){ \r\n    //SWAL \r\n    ProjectDataService.delete(id)      \r\n      .then(response => {\r\n        console.log(response.data);\r\n        setProjects(projects.filter(projects => projects.project_id !== id)); //enleve le project supprimé du state pour que ca refresh\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  function redirectToUpdate(id){\r\n    navigate(\"/Project/update/\"+id);\r\n  }\r\n  \r\n\r\n\r\n  // ----------------- JSX ---------------\r\n  return (\r\n    <>\r\n      <App />\r\n      <div className=\"wrapper-project\">\r\n                   \r\n        {projects && projects.map((project) => (\r\n\r\n          <div className=\"item-project\" key={project.project_id}>\r\n\r\n            <div className=\"buttons-project\"> {/* if is_granted('ROLE_ADMIN') */}\r\n              \r\n              <button className=\"deleteProjectButton-project alertDisplayerDelete_JS\" \r\n                onClick={deleteProject.bind(this, project.project_id)}\r\n              >Delete project</button>  {/* CRSF TOKEN */} \r\n\r\n              <button className=\"updateProjectButton-project\" \r\n                onClick={redirectToUpdate.bind(this, project.project_id)}\r\n              >Update project</button>  {/* ->  CRSF TOKEN */}\r\n\r\n            </div>     \r\n\r\n            <span className=\"title-project\">{project.project_name}</span>\r\n\r\n            <span className=\"tag-project\">{project.project_technologies}</span>\r\n\r\n            <img \r\n              className=\"image-project\" \r\n              src={ProjectDataService.getUploadsFiles+project.project_thumbnail_filename}>\r\n            </img>\r\n     \r\n            <Link className=\"link-project\" to={\"/Project/\" + project.project_id}>See More</Link>\r\n            \r\n          </div>\r\n\r\n        ))}\r\n\r\n        {/* if is_granted('ROLE_ADMIN') %} */}\r\n        <Link className=\"buttonAdd-project\" to=\"/Project/create\">Add new project</Link>\r\n\r\n        \r\n      </div>\r\n    </>\r\n  );\r\n}\r\n \r\n ","import React, { useState, useEffect } from 'react';\r\nimport { Link , useParams , useNavigate } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\nimport App from \"../../App\"\r\n\r\n\r\nexport default function GetOneProject(props) {\r\n\r\n  //----------------------------REDIRECTION APRES click sur bouton update ou incorrect :id-----------------------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (redirect === true) {\r\n      navigate('/Projects');\r\n    }\r\n    if (notFound === true)\r\n    {\r\n      navigate('/NotFound');\r\n    }\r\n  });\r\n\r\n  function redirectToUpdate(id){\r\n    navigate(\"/Project/update/\"+id);\r\n  }\r\n\r\n  // ----------------- Initialize State -------------------\r\n  const [notFound,setNotFound] = useState (false); //id not found\r\n\r\n  const [project,setProject] = useState( //déclare project en tant que liste key/value\r\n    {\r\n      project_id: null,\r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: \"\",\r\n      project_is_file_format: true,\r\n      project_release_filename: \"\",\r\n      project_release_url: \"\" \r\n    }\r\n  );\r\n\r\n  const [redirect,setRedirect] = useState (false);\r\n\r\n  // ----------------- Get request params -------------------\r\n  const { id } = useParams(); //Retrouve le paramètre id\r\n  // useEffect = quand le composant est inétgré dans le DOM \r\n  useEffect(()=>{ getProject(); },[]) //notice the empty array here so it only happens once\r\n\r\n  const getProject = () => {\r\n    ProjectDataService.get(id)\r\n      .then(response => {\r\n        setProject(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        setNotFound(true);\r\n        console.log(e);\r\n      });\r\n  }\r\n  \r\n  const deleteProject = (id) => { \r\n    //SWAL \r\n    ProjectDataService.delete(id)      \r\n      .then(response => {\r\n        console.log(response.data);\r\n        setRedirect(true); //Redirection vers page virtuelle Project\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <App />\r\n      <div className=\"wrapper-discover\">\r\n        <div className=\"box-discover\">\r\n\r\n          <div className=\"buttons-project\"> {/* if is_granted('ROLE_ADMIN') */}\r\n            \r\n            <button className=\"deleteProjectButton-project alertDisplayerDelete_JS\" \r\n              onClick={deleteProject.bind(this, project.project_id)}\r\n            >Delete project</button>  {/* CRSF TOKEN */} \r\n\r\n            <button className=\"updateProjectButton-project\" \r\n              onClick={redirectToUpdate.bind(this, project.project_id)}\r\n            >Update project</button>  {/* CRSF TOKEN */}\r\n\r\n          </div> \r\n\r\n          <span className=\"item-discover title-discover\">{ project.project_name }</span>\r\n\r\n          <span className=\"item-discover tag-discover\">{ project.project_technologies }</span>  \r\n\r\n          <span className=\"item-discover description-discover\">{ project.project_description }</span>\r\n\r\n          {/* for image in project.project_images \r\n            <img className=\"item-discover image-discover caroussel_JS\" src=\"{{ uploaded_asset(image.ImageFileName) }}\"></img>\r\n          {% endfor */}\r\n\r\n\r\n          { project.project_is_file_format === true ? \r\n            <a className=\"item-discover link-project\" \r\n              href={ProjectDataService.getUploadsFiles+project.project_release_filename} \r\n              download>Télécharger</a>\r\n          :\r\n            <a className=\"item-discover link-project\" \r\n              href={project.project_release_url} target=\"_blank\">Lien</a>\r\n          }  \r\n\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n ","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\nimport App from \"../../App\"\r\nimport deleteLogo from \"../../image/delete.png\";\r\n\r\nexport default function FormProject(props) {\r\n\r\n  //----------------------------REDIRECTION APRES VALIDATION du form ou incorrect :id-----------------------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (project.project_is_created_or_updated) {\r\n      navigate('/Projects');\r\n    }\r\n    if (notFound === true)\r\n    {\r\n      navigate('/NotFound');\r\n    }\r\n    if (dataFound === true)\r\n    {\r\n      setRemoveButtons();\r\n    }\r\n\r\n  });\r\n\r\n  //----------------------------State initial ------------------------------\r\n  const [notFound,setNotFound] = useState (false); //id not found\r\n\r\n  const [project,setProject] = useState( //déclare en tant que liste key/value\r\n    { \r\n      project_id: null,\r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: null,\r\n      project_is_file_format: true,\r\n      project_release_filename: null,\r\n      project_release_url: \"\",\r\n      project_is_created_or_updated: false,\r\n    }\r\n  );\r\n\r\n  //Pour reset une et une seule fois, en mode update, le champ file \r\n  // cad supprimer le fichier côté serveur\r\n  const [dataFound,setDataFound] = useState(false);\r\n  const [removeThumbnailPossibility,setRemoveThumbnailPossibility] = useState(false);\r\n  const [removeReleaseFilePossibility,setRemoveReleaseFilePossibility] = useState(false);\r\n\r\n  const [nameValidation, setNameValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [technologiesValidation, setTechnologiesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [descriptionValidation, setDescriptionValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [thumbnailValidation, setThumbnailValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [releaseFileValidation, setReleaseFileValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [releaseUrlValidation, setReleaseUrlValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n\r\n\r\n// --------------- actualisation du state pour MODE UPDATE (herité avec props) -------------------------------\r\n  const { id } = useParams(); //Retrouve le paramètre id\r\n  useEffect(() => { // à l'instanciation du component\r\n    if (props.mode === \"update\")\r\n    {      \r\n      getProject(id);\r\n    }\r\n  },[]) //notice the empty array here so it only happens once \r\n\r\n  const getProject = (id) => {\r\n    ProjectDataService.get(id)\r\n      .then(response => {\r\n        setProject(response.data);\r\n        setDataFound(true); //pour définir les options de removes avec croix rouge    \r\n      })\r\n      .catch(e => {\r\n        setNotFound(true);\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  const setRemoveButtons = () => {\r\n    setRemoveThumbnailPossibility(true); //Enclenche la possibilité de supprimer le fichier côté serveur\r\n    if (project.project_is_file_format === true) //seulement si c'est un release de type file\r\n    {\r\n      setRemoveReleaseFilePossibility(true); //Enclenche la possibilité de supprimer le fichier côté serveur\r\n    }\r\n    setDataFound(undefined); //Reset pour éviter que ca ne relance cette fonction à chaque modif du state\r\n  }\r\n      \r\n\r\n// ------------------------- Evenementiel (modification du state en fonction des inputs) -------------------------\r\n\r\n  // Event de modifications du formulaires\r\n  const onChangeProject_name = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_name : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_technologies = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_technologies : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_description = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_description : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_thumbnail_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : e.target.files[0] } //pcq c'est un fichier\r\n    });\r\n  }\r\n\r\n  const onResetProject_thumbnail_filename = () => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : null } //pcq c'est un fichier\r\n    });\r\n    setRemoveThumbnailPossibility(false);\r\n  }\r\n\r\n  const onChangeProject_is_file_format = (e) => {\r\n    let result = true; \r\n    //si on passe e.target.value, project_is_file_format pointera sur un objet et non une valeur\r\n    // du coup setState n'aura plus d'incidence\r\n    if (e.target.value === \"true\")\r\n    {\r\n      result = true;\r\n    }\r\n    else {\r\n      result = false;\r\n    }\r\n    setProject(prevState => {\r\n      return { ...prevState, project_is_file_format : result }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : e.target.files[0]  }\r\n    });\r\n  }\r\n\r\n  const onResetProject_release_filename = () => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : null } //pcq c'est un fichier\r\n    });\r\n    setRemoveReleaseFilePossibility(false);\r\n  }\r\n\r\n\r\n  const onChangeProject_release_url = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_url : e.target.value }\r\n    });\r\n  } \r\n\r\n// ----------------------------------- Submit du form et Reponse du server ----------------------\r\n  const saveProject = (e) => {\r\n\r\n    // instanciation d'un objet FormData pour envoyer les données à Express\r\n    // --> \"content\" : \"multipart/form-data\"\r\n    let data = new FormData();\r\n    data.append('project_name', project.project_name);\r\n    data.append('project_technologies', project.project_technologies);\r\n    data.append('project_description', project.project_description);\r\n    data.append('project_thumbnail_filename', project.project_thumbnail_filename);\r\n    data.append('project_is_file_format', project.project_is_file_format);\r\n    data.append('project_release_filename', project.project_release_filename);\r\n    data.append('project_release_url', project.project_release_url);\r\n\r\n\r\n    if ( props.mode === \"create\") { //mode create\r\n      ProjectDataService.create(data)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          console.log(response.data);\r\n          setProject(prevState => {\r\n            return { ...prevState, project_is_created_or_updated : true }\r\n          });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        if (e.response.status === 422) {\r\n          // Reset des states pour éviter que certains messages persistent même apres correction\r\n          setNameValidation({isValid : true, message : \"\"})\r\n          setTechnologiesValidation({isValid : true, message : \"\"})\r\n          setDescriptionValidation({isValid : true, message : \"\"})\r\n          setThumbnailValidation({isValid : true, message : \"\"})\r\n          setReleaseFileValidation({isValid : true, message : \"\"})\r\n          setReleaseUrlValidation({isValid : true, message : \"\"}) \r\n          // Gestion des erreurs et ajout au state error\r\n          e.response.data.errors.forEach(error => {\r\n            switch (error.param) { \r\n              case \"project_name\":\r\n                setNameValidation({isValid : false, message : error.msg})\r\n                break;\r\n              case \"project_technologies\":\r\n                setTechnologiesValidation({isValid : false, message : error.msg})\r\n                break;\r\n              case \"project_description\":\r\n                setDescriptionValidation({isValid : false, message : error.msg})\r\n                break;\r\n              case \"project_thumbnail_filename\":\r\n                setThumbnailValidation({isValid : false, message : error.msg})\r\n                break;\r\n              case \"project_release_filename\":\r\n                setReleaseFileValidation({isValid : false, message : error.msg})\r\n                break;\r\n              case \"project_release_url\":\r\n                setReleaseUrlValidation({isValid : false, message : error.msg})\r\n                break;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n    else { //UPDATE\r\n      ProjectDataService.update(id,data)\r\n        .then(response => {\r\n          setProject(prevState => {\r\n            return { ...prevState, project_is_created_or_updated : true }\r\n          });\r\n        })\r\n        .catch(e => {\r\n          if (e.response.status === 422) {\r\n            // Reset des states pour éviter que certains messages persistent même apres correction\r\n            setNameValidation({isValid : true, message : \"\"})\r\n            setTechnologiesValidation({isValid : true, message : \"\"})\r\n            setDescriptionValidation({isValid : true, message : \"\"})\r\n            setThumbnailValidation({isValid : true, message : \"\"})\r\n            setReleaseFileValidation({isValid : true, message : \"\"})\r\n            setReleaseUrlValidation({isValid : true, message : \"\"}) \r\n            // Gestion des erreurs et ajout au state error\r\n            e.response.data.errors.forEach(error => {\r\n              switch (error.param) {\r\n                case \"project_name\":\r\n                  setNameValidation({isValid : false, message : error.msg})\r\n                  break;\r\n                case \"project_technologies\":\r\n                  setTechnologiesValidation({isValid : false, message : error.msg})\r\n                  break;\r\n                case \"project_description\":\r\n                  setDescriptionValidation({isValid : false, message : error.msg})\r\n                  break;\r\n                case \"project_thumbnail_filename\":\r\n                  setThumbnailValidation({isValid : false, message : error.msg})\r\n                  break;\r\n                case \"project_release_filename\":\r\n                  setReleaseFileValidation({isValid : false, message : error.msg})\r\n                  break;\r\n                case \"project_release_url\":\r\n                  setReleaseUrlValidation({isValid : false, message : error.msg})\r\n                  break;\r\n              }\r\n            });\r\n           \r\n          }\r\n          else {\r\n            //SWAL Server error\r\n          }  \r\n        });\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n// -------------------------------- JSX -----------------------------------------\r\n  return (\r\n    <>\r\n      <App></App>\r\n      <div className=\"wrapper-form\">\r\n        <div className=\"box-form\">\r\n       \r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Project Name</div>\r\n            <input \r\n              type=\"text\"\r\n              className=\"textFields-form small\" \r\n              id=\"project_name\" \r\n              value={project.project_name} \r\n              onChange={onChangeProject_name} \r\n              name=\"project_name\"\r\n            />\r\n            { nameValidation.isValid === false ?\r\n              <div className=\"errorMessage\">{nameValidation.message}</div>\r\n            : null }\r\n          </div> \r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Source and target technologies</div>\r\n            <input \r\n              type=\"text\"\r\n              className=\"textFields-form\" \r\n              id=\"project_technologies\"\r\n              value={project.project_technologies} \r\n              onChange={onChangeProject_technologies} \r\n              name=\"project_technologies\"\r\n            /> \r\n            { technologiesValidation.isValid === false ?\r\n              <div className=\"errorMessage\">{technologiesValidation.message}</div>\r\n            : null }\r\n          </div>\r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Description</div>\r\n            <textarea\r\n              className=\"textArea-form\" \r\n              id=\"project_description\"\r\n              value={project.project_description} \r\n              onChange={onChangeProject_description} \r\n              name=\"project_description\">\r\n            </textarea> \r\n            { descriptionValidation.isValid === false ?\r\n              <div className=\"errorMessage\">{descriptionValidation.message}</div>\r\n            : null }\r\n          </div>\r\n\r\n\r\n        {/* Thumbnail Field dynamic*/}\r\n          { removeThumbnailPossibility === false ?\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Thumbnail</div>\r\n            <input \r\n              type='file' \r\n              name='project_thumbnail_filename' \r\n              className='files-form'\r\n              onChange={onChangeProject_thumbnail_filename}>\r\n            </input>\r\n            { thumbnailValidation.isValid === false ?\r\n              <div className=\"errorMessage\">{thumbnailValidation.message}</div>\r\n            : null \r\n            }\r\n          </div>\r\n     \r\n          : \r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Thumbnail</div>\r\n            <div className=\"file-box\">\r\n              <img src={deleteLogo} className=\"icon-delete\" onClick={onResetProject_thumbnail_filename}></img>\r\n              <div className=\"file-name\">{project.project_thumbnail_filename}</div>\r\n            </div>\r\n          </div> \r\n          }\r\n          \r\n\r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Images</div>\r\n            <input type='file' multiple name='project_images' className='files-form'></input>\r\n          </div> \r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Format</div>\r\n            <select \r\n              className='FormatChoice_JS'\r\n              id=\"project_is_file_format\"  \r\n              value={project.project_is_file_format} \r\n              onChange={onChangeProject_is_file_format} \r\n              name=\"project_is_file_format\">\r\n                <option value=\"true\">File</option>\r\n                <option value=\"false\">Link</option>\r\n            </select>\r\n          </div>\r\n\r\n        {/* Release MEGA DYNAMIC FIELD GROS BORDEL */}\r\n\r\n          { project.project_is_file_format === true ?\r\n\r\n            <>\r\n            { removeReleaseFilePossibility === false ?\r\n    \r\n              <div className=\"item-form fileInput_JS\">\r\n                <div className=\"label-form\">Fichier</div>  \r\n                <input \r\n                  type='file' \r\n                  name='project_release_filename' \r\n                  className='files-form'\r\n                  onChange={onChangeProject_release_filename}\r\n                ></input>\r\n                { releaseFileValidation.isValid === false ?\r\n                  <div className=\"errorMessage\">{releaseFileValidation.message}</div>\r\n                : null \r\n                }\r\n              </div>  \r\n\r\n            : \r\n              \r\n              <div className=\"item-form\">\r\n                <div className=\"label-form\">Fichier</div>\r\n                <div className=\"file-box\">\r\n                  <img src={deleteLogo} className=\"icon-delete\" onClick={onResetProject_release_filename}></img>\r\n                  <div className=\"file-name\">{project.project_release_filename}</div>\r\n                </div>\r\n              </div> \r\n            }\r\n            </>\r\n\r\n          :\r\n            <div className=\"item-form urlInput_JS\">\r\n              <div className=\"label-form\">Link</div>\r\n              <input \r\n                type=\"text\"\r\n                className=\"textFields-form\" \r\n                id=\"project_release_url\"\r\n                value={project.project_release_url} \r\n                onChange={onChangeProject_release_url} \r\n                name=\"project_release_url\"\r\n              />\r\n              { releaseUrlValidation.isValid === false ?\r\n                <div className=\"errorMessage\">{releaseUrlValidation.message}</div>\r\n              : null } \r\n            </div>\r\n\r\n          } \r\n\r\n        {/* changement du noeud texte du bouton submit en fonction de update ou create */}\r\n          { props.mode === \"create\" ?\r\n          <button className=\"item-form button-form\" onClick={saveProject}>Create Project</button>\r\n          :\r\n          <button className=\"item-form button-form\" onClick={saveProject}>Update Project</button>\r\n          } \r\n \r\n        </div>\r\n    </div>\r\n  </>\r\n  );\r\n}","import React, { Component } from \"react\";\r\nimport App from \"../App\";\r\nimport logo from \"../image/404.png\";\r\n\r\nexport default function Home(props) {\r\n  return (\r\n    <>\r\n      <App />\r\n      <div className=\"wrapper-form\">\r\n        <img className=\"not-found-image\" src={logo}></img>\r\n      </div>\r\n\r\n    </>\r\n  );\r\n}\r\n ","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Contact from \"./components/Contact\";\nimport GetAllProject from \"./components/Project/GetAllProject\";\nimport GetOneProject from \"./components/Project/GetOneProject\";\nimport FormProject from \"./components/Project/FormProject\";\nimport NotFound from \"./components/NotFound\";\n\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <Routes>\n      <Route exact path=\"/\" element={<Home />} />\n      <Route path=\"/Contact\" element={<Contact />} />\n      <Route path=\"/Projects\" element={<GetAllProject />} />\n      <Route path=\"/Project/:id\" element={<GetOneProject />} />\n      <Route path=\"/Project/create\" element={<FormProject  mode=\"create\"/>} />\n      <Route path=\"/Project/update/:id\" element={<FormProject mode=\"update\"/>} /> \n      <Route path=\"/404\" element={<NotFound/>} />\n      <Route path=\"*\" element={<NotFound/>} />\n\n    </Routes>\n  </BrowserRouter> \n); //render l'argument 1 <JSX> dans l'argument 2 <root element>"],"sourceRoot":""}