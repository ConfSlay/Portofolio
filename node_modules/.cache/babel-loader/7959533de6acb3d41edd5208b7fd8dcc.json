{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ricar\\\\Desktop\\\\nodejs-website\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ricar\\\\Desktop\\\\nodejs-website\\\\client\\\\src\\\\components\\\\Project\\\\GetOneProject.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport ProjectDataService from \"../../services/project.service\";\nimport App from \"../../App\";\nexport default function GetOneProject(props) {\n  //----------------------------REDIRECTION APRES click sur bouton update ou incorrect :id-----------------------\n  var navigate = useNavigate();\n  useEffect(function () {\n    //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\n    if (notFound === true) {\n      navigate('/NotFound');\n    }\n  });\n\n  function redirectToUpdate(id) {\n    navigate(\"/Project/update/\" + id);\n  } // ----------------- Initialize State -------------------\n\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      notFound = _useState2[0],\n      setNotFound = _useState2[1]; //id not found\n\n\n  var _useState3 = useState( //déclare project en tant que liste key/value\n  {\n    project_id: null,\n    project_name: \"\",\n    project_technologies: \"\",\n    project_description: \"\",\n    project_thumbnail_filename: \"\",\n    project_is_file_format: true,\n    project_release_filename: \"\",\n    project_release_url: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      project = _useState4[0],\n      setProject = _useState4[1]; // ----------------- Get request params -------------------\n\n\n  var _useParams = useParams(),\n      id = _useParams.id; //Retrouve le paramètre id\n  // useEffect = quand le composant est inétgré dans le DOM \n\n\n  useEffect(function () {\n    getProject();\n  }, []); //notice the empty array here so it only happens once\n\n  var getProject = function getProject() {\n    ProjectDataService.get(id).then(function (response) {\n      setProject(response.data);\n      console.log(response.data);\n    }).catch(function (e) {\n      console.log(e);\n      setNotFound(true);\n    });\n  };\n\n  var deleteProject = function deleteProject(id) {\n    //SWAL \n    ProjectDataService.delete(id).then(function (response) {\n      console.log(response.data);\n      setRedirect(true); //Redirection vers page virtuelle Project\n    }).catch(function (e) {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper-discover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box-discover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-project\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"deleteProjectButton-project alertDisplayerDelete_JS\",\n    onClick: deleteProject.bind(this, project.project_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Delete project\"), \"  \", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"updateProjectButton-project\",\n    onClick: redirectToUpdate.bind(this, project.project_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Update project\"), \"  \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"item-discover title-discover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, project.project_name), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"item-discover tag-discover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, project.project_technologies), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"item-discover description-discover\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, project.project_description), project.project_is_file_format === true ? /*#__PURE__*/React.createElement(\"a\", {\n    className: \"item-discover link-project\",\n    href: ProjectDataService.getUploadsFiles + project.project_release_filename,\n    download: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"T\\xE9l\\xE9charger\") : /*#__PURE__*/React.createElement(\"a\", {\n    className: \"item-discover link-project\",\n    href: project.project_release_url,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Lien\"))));\n}","map":{"version":3,"sources":["C:/Users/ricar/Desktop/nodejs-website/client/src/components/Project/GetOneProject.js"],"names":["React","useState","useEffect","Link","useParams","useNavigate","ProjectDataService","App","GetOneProject","props","navigate","notFound","redirectToUpdate","id","setNotFound","project_id","project_name","project_technologies","project_description","project_thumbnail_filename","project_is_file_format","project_release_filename","project_release_url","project","setProject","getProject","get","then","response","data","console","log","catch","e","deleteProject","delete","setRedirect","bind","getUploadsFiles"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link , useParams , useNavigate } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\nimport App from \"../../App\"\r\n\r\n\r\nexport default function GetOneProject(props) {\r\n\r\n  //----------------------------REDIRECTION APRES click sur bouton update ou incorrect :id-----------------------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (notFound === true)\r\n    {\r\n      navigate('/NotFound');\r\n    }\r\n  });\r\n\r\n  function redirectToUpdate(id){\r\n    navigate(\"/Project/update/\"+id);\r\n  }\r\n\r\n  // ----------------- Initialize State -------------------\r\n  const [notFound,setNotFound] = useState (false); //id not found\r\n\r\n  const [project,setProject] = useState( //déclare project en tant que liste key/value\r\n    {\r\n      project_id: null,\r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: \"\",\r\n      project_is_file_format: true,\r\n      project_release_filename: \"\",\r\n      project_release_url: \"\" \r\n    }\r\n  );\r\n\r\n\r\n  // ----------------- Get request params -------------------\r\n  const { id } = useParams(); //Retrouve le paramètre id\r\n  // useEffect = quand le composant est inétgré dans le DOM \r\n  useEffect(()=>{ getProject(); },[]) //notice the empty array here so it only happens once\r\n\r\n  const getProject = () => {\r\n    ProjectDataService.get(id)\r\n      .then(response => {\r\n        setProject(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n        setNotFound(true);\r\n      });\r\n  }\r\n  \r\n  const deleteProject = (id) => { \r\n    //SWAL \r\n    ProjectDataService.delete(id)      \r\n      .then(response => {\r\n        console.log(response.data);\r\n        setRedirect(true); //Redirection vers page virtuelle Project\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <App />\r\n      <div className=\"wrapper-discover\">\r\n        <div className=\"box-discover\">\r\n\r\n          <div className=\"buttons-project\"> {/* if is_granted('ROLE_ADMIN') */}\r\n            \r\n            <button className=\"deleteProjectButton-project alertDisplayerDelete_JS\" \r\n              onClick={deleteProject.bind(this, project.project_id)}\r\n            >Delete project</button>  {/* CRSF TOKEN */} \r\n\r\n            <button className=\"updateProjectButton-project\" \r\n              onClick={redirectToUpdate.bind(this, project.project_id)}\r\n            >Update project</button>  {/* CRSF TOKEN */}\r\n\r\n          </div> \r\n\r\n          <span className=\"item-discover title-discover\">{ project.project_name }</span>\r\n\r\n          <span className=\"item-discover tag-discover\">{ project.project_technologies }</span>  \r\n\r\n          <span className=\"item-discover description-discover\">{ project.project_description }</span>\r\n\r\n          {/* for image in project.project_images \r\n            <img className=\"item-discover image-discover caroussel_JS\" src=\"{{ uploaded_asset(image.ImageFileName) }}\"></img>\r\n          {% endfor */}\r\n\r\n\r\n          { project.project_is_file_format === true ? \r\n            <a className=\"item-discover link-project\" \r\n              href={ProjectDataService.getUploadsFiles+project.project_release_filename} \r\n              download>Télécharger</a>\r\n          :\r\n            <a className=\"item-discover link-project\" \r\n              href={project.project_release_url} target=\"_blank\">Lien</a>\r\n          }  \r\n\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n "]},"metadata":{},"sourceType":"module"}