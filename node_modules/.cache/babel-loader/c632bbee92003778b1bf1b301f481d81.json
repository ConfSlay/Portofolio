{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ricar\\\\Desktop\\\\myPortfolio\\\\myPortofolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\ricar\\\\Desktop\\\\myPortfolio\\\\myPortofolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ricar\\\\Desktop\\\\myPortfolio\\\\myPortofolio\\\\src\\\\components\\\\Project\\\\UpdateProject.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ProjectDataService from \"../../services/project.service\"; //Components\n\nimport App from \"../../App\";\nimport FormProject from \"./FormProject\";\nimport ToastDisplayer from \"../ToastDisplayer\";\nexport default function UpdateProject(props) {\n  //----------------------------REDIRECTION APRES VALIDATION DU FORM ou 404 -----------------------\n  var navigate = useNavigate();\n  useEffect(function () {\n    //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\n    if (project.project_is_updated) {\n      navigate('/Projects');\n    }\n\n    if (notFound === true) {\n      navigate('/NotFound');\n    }\n\n    if (dataFound === true) {\n      setRemoveButtons();\n    } // ----- Check if Admin AND redirect if not-------------\n\n\n    if (!props.isAdmin) {\n      navigate('/Projects');\n    }\n  }); //--------------------------------- State Initial -------------------------------------\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      disabledSubmit = _useState2[0],\n      setDisabledSubmit = _useState2[1]; // Bloquage du bouton submit durant process\n\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      notFound = _useState4[0],\n      setNotFound = _useState4[1]; //id not found\n\n\n  var _useState5 = useState( //déclare en tant que liste key/value\n  {\n    project_name: \"\",\n    project_technologies: \"\",\n    project_description: \"\",\n    project_thumbnail_filename: null,\n    project_images: [],\n    project_is_file_format: true,\n    project_release_filename: null,\n    project_release_url: \"\",\n    project_is_updated: false\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      project = _useState6[0],\n      setProject = _useState6[1]; //Pour reset une et une seule fois, en mode update, le champ file \n  // cad supprimer le fichier côté serveur\n\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      dataFound = _useState8[0],\n      setDataFound = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      removeThumbnailPossibility = _useState10[0],\n      setRemoveThumbnailPossibility = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      removeImagesPossibility = _useState12[0],\n      setRemoveImagesPossibility = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      removeReleaseFilePossibility = _useState14[0],\n      setRemoveReleaseFilePossibility = _useState14[1];\n\n  var _useState15 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      nameValidation = _useState16[0],\n      setNameValidation = _useState16[1];\n\n  var _useState17 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState18 = _slicedToArray(_useState17, 2),\n      technologiesValidation = _useState18[0],\n      setTechnologiesValidation = _useState18[1];\n\n  var _useState19 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState20 = _slicedToArray(_useState19, 2),\n      descriptionValidation = _useState20[0],\n      setDescriptionValidation = _useState20[1];\n\n  var _useState21 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState22 = _slicedToArray(_useState21, 2),\n      thumbnailValidation = _useState22[0],\n      setThumbnailValidation = _useState22[1];\n\n  var _useState23 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState24 = _slicedToArray(_useState23, 2),\n      imagesValidation = _useState24[0],\n      setImagesValidation = _useState24[1];\n\n  var _useState25 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState26 = _slicedToArray(_useState25, 2),\n      releaseFileValidation = _useState26[0],\n      setReleaseFileValidation = _useState26[1];\n\n  var _useState27 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState28 = _slicedToArray(_useState27, 2),\n      releaseUrlValidation = _useState28[0],\n      setReleaseUrlValidation = _useState28[1]; // --------------- actualisation du state pour MODE UPDATE (herité avec props) -------------------------------\n\n\n  var _useParams = useParams(),\n      id = _useParams.id; //Retrouve le paramètre id\n\n\n  useEffect(function () {\n    // à l'instanciation du component     \n    getProject(id);\n  }, []); //notice the empty array here so it only happens once \n\n  var getProject = function getProject(id) {\n    ProjectDataService.get(id).then(function (response) {\n      setProject(response.data);\n      setDataFound(true); //pour définir les options de removes avec croix rouge   \n    }).catch(function (e) {\n      setNotFound(true);\n      console.log(e);\n    });\n  };\n\n  var setRemoveButtons = function setRemoveButtons() {\n    setRemoveThumbnailPossibility(true); //Enclenche la possibilité de supprimer le fichier côté serveur\n\n    setRemoveImagesPossibility(true);\n\n    if (project.project_is_file_format === true) //seulement si c'est un release de type file\n      {\n        setRemoveReleaseFilePossibility(true); //Enclenche la possibilité de supprimer le fichier côté serveur\n      }\n\n    setDataFound(undefined); //Reset pour éviter que ca ne relance cette fonction à chaque modif du state\n  }; // ------------------------- Evenementiel (modification du state en fonction des inputs) -------------------------\n\n\n  var onChangeProject_name = function onChangeProject_name(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_name: e.target.value\n      });\n    });\n  };\n\n  var onChangeProject_technologies = function onChangeProject_technologies(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_technologies: e.target.value\n      });\n    });\n  };\n\n  var onChangeProject_description = function onChangeProject_description(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_description: e.target.value\n      });\n    });\n  };\n\n  var onChangeProject_thumbnail_filename = function onChangeProject_thumbnail_filename(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_thumbnail_filename: e.target.files[0]\n      }); //pcq c'est un fichier\n    });\n  };\n\n  var onResetProject_thumbnail_filename = function onResetProject_thumbnail_filename() {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_thumbnail_filename: null\n      }); //pcq c'est un fichier\n    });\n    setRemoveThumbnailPossibility(false);\n  };\n\n  var onChangeProject_images = function onChangeProject_images(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_images: e.target.files\n      }); //pas d'index pcq c'est multifile\n    });\n  };\n\n  var onResetProject_images = function onResetProject_images() {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_images_updated: true\n      }); //pcq c'est un fichier\n    });\n    setRemoveImagesPossibility(false);\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_images_updated: true\n      });\n    });\n  };\n\n  var onChangeProject_is_file_format = function onChangeProject_is_file_format(e) {\n    var result = true; //si on passe e.target.value, project_is_file_format pointera sur un objet et non une valeur\n    // du coup setState n'aura plus d'incidence\n\n    if (e.target.value === \"true\") {\n      result = true;\n    } else {\n      result = false;\n    }\n\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_is_file_format: result\n      });\n    });\n  };\n\n  var onChangeProject_release_filename = function onChangeProject_release_filename(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_release_filename: e.target.files[0]\n      });\n    });\n  };\n\n  var onResetProject_release_filename = function onResetProject_release_filename() {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_release_filename: null\n      }); //pcq c'est un fichier\n    });\n    setRemoveReleaseFilePossibility(false);\n  };\n\n  var onChangeProject_release_url = function onChangeProject_release_url(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_release_url: e.target.value\n      });\n    });\n  }; //------------------------------------ CALL API ----------------------------------------------------------\n\n\n  var saveProject = function saveProject(e) {\n    if (disabledSubmit === false) {\n      setDisabledSubmit(true); //------------- instanciation d'un objet FormData pour envoyer les données à l'API --------------   \n\n      var data = new FormData(); // --> \"content\" : \"multipart/form-data\"\n\n      data.append('project_name', project.project_name);\n      data.append('project_technologies', project.project_technologies);\n      data.append('project_description', project.project_description);\n      data.append('project_thumbnail_filename', project.project_thumbnail_filename); // images files\n\n      data.append('project_images_updated', project.project_images_updated); //Si les images ont été modifiés par l'utilisateur\n\n      if (project.project_images_updated === true) {\n        for (var i = 0; i < project.project_images.length; i++) {\n          data.append(\"project_images\", project.project_images[i]);\n        }\n      }\n\n      data.append('project_is_file_format', project.project_is_file_format);\n      data.append('project_release_filename', project.project_release_filename);\n      data.append('project_release_url', project.project_release_url); //--------------------------------- Request --------------------------------------\n\n      ProjectDataService.update(id, data).then(function (response) {\n        setProject(function (prevState) {\n          return _objectSpread({}, prevState, {\n            project_is_updated: true\n          });\n        }); //SWAL\n\n        ToastDisplayer(false, \"Project updated !\");\n      }).catch(function (e) {\n        if (e.response.status === 422) {\n          //SWAL\n          ToastDisplayer(true, \"Incorrect input\"); // Reset des states pour éviter que certains messages persistent même apres correction\n\n          setNameValidation({\n            isValid: true,\n            message: \"\"\n          });\n          setTechnologiesValidation({\n            isValid: true,\n            message: \"\"\n          });\n          setDescriptionValidation({\n            isValid: true,\n            message: \"\"\n          });\n          setThumbnailValidation({\n            isValid: true,\n            message: \"\"\n          });\n          setReleaseFileValidation({\n            isValid: true,\n            message: \"\"\n          });\n          setReleaseUrlValidation({\n            isValid: true,\n            message: \"\"\n          }); // Gestion des erreurs et ajout au state error\n\n          e.response.data.errors.forEach(function (error) {\n            switch (error.param) {\n              case \"project_name\":\n                setNameValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_technologies\":\n                setTechnologiesValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_description\":\n                setDescriptionValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_thumbnail_filename\":\n                setThumbnailValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_images\":\n                setImagesValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_release_filename\":\n                setReleaseFileValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_release_url\":\n                setReleaseUrlValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n            }\n          });\n        } else {\n          // SWAL\n          ToastDisplayer(true, \"Internal server error ...\");\n        }\n      });\n      setDisabledSubmit(false);\n    }\n  }; //----------------------------------------------------------- JSX -----------------------------------------------------\n\n\n  return /*#__PURE__*/React.createElement(FormProject, {\n    mode: \"update\",\n    project: project,\n    onChangeProject_name: onChangeProject_name,\n    onChangeProject_technologies: onChangeProject_technologies,\n    onChangeProject_description: onChangeProject_description,\n    onChangeProject_thumbnail_filename: onChangeProject_thumbnail_filename,\n    onChangeProject_images: onChangeProject_images,\n    onChangeProject_is_file_format: onChangeProject_is_file_format,\n    onChangeProject_release_filename: onChangeProject_release_filename,\n    onChangeProject_release_url: onChangeProject_release_url,\n    removeThumbnailPossibility: removeThumbnailPossibility,\n    removeImagesPossibility: removeImagesPossibility,\n    removeReleaseFilePossibility: removeReleaseFilePossibility,\n    onResetProject_images: onResetProject_images,\n    onResetProject_thumbnail_filename: onResetProject_thumbnail_filename,\n    onResetProject_release_filename: onResetProject_release_filename,\n    nameValidation: nameValidation,\n    technologiesValidation: technologiesValidation,\n    descriptionValidation: descriptionValidation,\n    thumbnailValidation: thumbnailValidation,\n    imagesValidation: imagesValidation,\n    releaseFileValidation: releaseFileValidation,\n    releaseUrlValidation: releaseUrlValidation,\n    saveProject: saveProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 4\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/ricar/Desktop/myPortfolio/myPortofolio/src/components/Project/UpdateProject.js"],"names":["React","useState","useEffect","useNavigate","useParams","ProjectDataService","App","FormProject","ToastDisplayer","UpdateProject","props","navigate","project","project_is_updated","notFound","dataFound","setRemoveButtons","isAdmin","disabledSubmit","setDisabledSubmit","setNotFound","project_name","project_technologies","project_description","project_thumbnail_filename","project_images","project_is_file_format","project_release_filename","project_release_url","setProject","setDataFound","removeThumbnailPossibility","setRemoveThumbnailPossibility","removeImagesPossibility","setRemoveImagesPossibility","removeReleaseFilePossibility","setRemoveReleaseFilePossibility","isValid","message","nameValidation","setNameValidation","technologiesValidation","setTechnologiesValidation","descriptionValidation","setDescriptionValidation","thumbnailValidation","setThumbnailValidation","imagesValidation","setImagesValidation","releaseFileValidation","setReleaseFileValidation","releaseUrlValidation","setReleaseUrlValidation","id","getProject","get","then","response","data","catch","e","console","log","undefined","onChangeProject_name","prevState","target","value","onChangeProject_technologies","onChangeProject_description","onChangeProject_thumbnail_filename","files","onResetProject_thumbnail_filename","onChangeProject_images","onResetProject_images","project_images_updated","onChangeProject_is_file_format","result","onChangeProject_release_filename","onResetProject_release_filename","onChangeProject_release_url","saveProject","FormData","append","i","length","update","status","errors","forEach","error","param","msg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,kBAAvC;AACA,OAAOC,kBAAP,MAA+B,gCAA/B,C,CACA;;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAE3C;AACA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,YAAM;AAAE;AAChB,QAAIU,OAAO,CAACC,kBAAZ,EAAgC;AAC9BF,MAAAA,QAAQ,CAAC,WAAD,CAAR;AACD;;AACD,QAAIG,QAAQ,KAAK,IAAjB,EACA;AACEH,MAAAA,QAAQ,CAAC,WAAD,CAAR;AACD;;AACD,QAAII,SAAS,KAAK,IAAlB,EACA;AACEC,MAAAA,gBAAgB;AACjB,KAXa,CAad;;;AACA,QAAI,CAACN,KAAK,CAACO,OAAX,EACA;AACIN,MAAAA,QAAQ,CAAC,WAAD,CAAR;AACH;AAEF,GAnBQ,CAAT,CAJ2C,CAyB3C;;AAzB2C,kBA2BCV,QAAQ,CAAC,KAAD,CA3BT;AAAA;AAAA,MA2BpCiB,cA3BoC;AAAA,MA2BpBC,iBA3BoB,kBA2BkB;;;AA3BlB,mBA6BZlB,QAAQ,CAAE,KAAF,CA7BI;AAAA;AAAA,MA6BpCa,QA7BoC;AAAA,MA6B3BM,WA7B2B,kBA6BM;;;AA7BN,mBA+BfnB,QAAQ,EAAE;AACtC;AACIoB,IAAAA,YAAY,EAAE,EADlB;AAEIC,IAAAA,oBAAoB,EAAE,EAF1B;AAGIC,IAAAA,mBAAmB,EAAE,EAHzB;AAIIC,IAAAA,0BAA0B,EAAE,IAJhC;AAKIC,IAAAA,cAAc,EAAE,EALpB;AAMIC,IAAAA,sBAAsB,EAAE,IAN5B;AAOIC,IAAAA,wBAAwB,EAAE,IAP9B;AAQIC,IAAAA,mBAAmB,EAAE,EARzB;AASIf,IAAAA,kBAAkB,EAAE;AATxB,GADoC,CA/BO;AAAA;AAAA,MA+BrCD,OA/BqC;AAAA,MA+B7BiB,UA/B6B,kBA4C3C;AACA;;;AA7C2C,mBA8CV5B,QAAQ,CAAC,KAAD,CA9CE;AAAA;AAAA,MA8CpCc,SA9CoC;AAAA,MA8C1Be,YA9C0B;;AAAA,mBA+CwB7B,QAAQ,CAAC,KAAD,CA/ChC;AAAA;AAAA,MA+CpC8B,0BA/CoC;AAAA,MA+CTC,6BA/CS;;AAAA,oBAgDmB/B,QAAQ,CAAC,KAAD,CAhD3B;AAAA;AAAA,MAgDpCgC,uBAhDoC;AAAA,MAgDXC,0BAhDW;;AAAA,oBAiD4BjC,QAAQ,CAAC,KAAD,CAjDpC;AAAA;AAAA,MAiDpCkC,4BAjDoC;AAAA,MAiDPC,+BAjDO;;AAAA,oBAmDAnC,QAAQ,CAAC;AAClDoC,IAAAA,OAAO,EAAG,IADwC;AAElDC,IAAAA,OAAO,EAAG;AAFwC,GAAD,CAnDR;AAAA;AAAA,MAmDrCC,cAnDqC;AAAA,MAmDrBC,iBAnDqB;;AAAA,oBAwDiBvC,QAAQ,CAAC;AACnEoC,IAAAA,OAAO,EAAG,IADyD;AAEnEC,IAAAA,OAAO,EAAG;AAFyD,GAAD,CAxDzB;AAAA;AAAA,MAwDpCG,sBAxDoC;AAAA,MAwDZC,yBAxDY;;AAAA,oBA6DezC,QAAQ,CAAC;AACjEoC,IAAAA,OAAO,EAAG,IADuD;AAEjEC,IAAAA,OAAO,EAAG;AAFuD,GAAD,CA7DvB;AAAA;AAAA,MA6DpCK,qBA7DoC;AAAA,MA6DbC,wBA7Da;;AAAA,oBAkEW3C,QAAQ,CAAC;AAC7DoC,IAAAA,OAAO,EAAG,IADmD;AAE7DC,IAAAA,OAAO,EAAG;AAFmD,GAAD,CAlEnB;AAAA;AAAA,MAkEpCO,mBAlEoC;AAAA,MAkEfC,sBAlEe;;AAAA,oBAuEK7C,QAAQ,CAAC;AACvDoC,IAAAA,OAAO,EAAG,IAD6C;AAEvDC,IAAAA,OAAO,EAAG;AAF6C,GAAD,CAvEb;AAAA;AAAA,MAuEpCS,gBAvEoC;AAAA,MAuElBC,mBAvEkB;;AAAA,oBA4Ee/C,QAAQ,CAAC;AACjEoC,IAAAA,OAAO,EAAG,IADuD;AAEjEC,IAAAA,OAAO,EAAG;AAFuD,GAAD,CA5EvB;AAAA;AAAA,MA4EpCW,qBA5EoC;AAAA,MA4EbC,wBA5Ea;;AAAA,oBAiFajD,QAAQ,CAAC;AAC/DoC,IAAAA,OAAO,EAAG,IADqD;AAE/DC,IAAAA,OAAO,EAAG;AAFqD,GAAD,CAjFrB;AAAA;AAAA,MAiFpCa,oBAjFoC;AAAA,MAiFdC,uBAjFc,mBAsF3C;;;AAtF2C,mBAwF5BhD,SAAS,EAxFmB;AAAA,MAwFnCiD,EAxFmC,cAwFnCA,EAxFmC,EAwFf;;;AAC5BnD,EAAAA,SAAS,CAAC,YAAM;AAAE;AACdoD,IAAAA,UAAU,CAACD,EAAD,CAAV;AACH,GAFQ,EAEP,EAFO,CAAT,CAzF2C,CA2FrC;;AAEN,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACD,EAAD,EAAQ;AACzBhD,IAAAA,kBAAkB,CAACkD,GAAnB,CAAuBF,EAAvB,EACGG,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB5B,MAAAA,UAAU,CAAC4B,QAAQ,CAACC,IAAV,CAAV;AACA5B,MAAAA,YAAY,CAAC,IAAD,CAAZ,CAFgB,CAEI;AACrB,KAJH,EAKG6B,KALH,CAKS,UAAAC,CAAC,EAAI;AACVxC,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAyC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,KARH;AASD,GAVD;;AAYA,MAAM5C,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BgB,IAAAA,6BAA6B,CAAC,IAAD,CAA7B,CAD6B,CACQ;;AACrCE,IAAAA,0BAA0B,CAAC,IAAD,CAA1B;;AACA,QAAItB,OAAO,CAACc,sBAAR,KAAmC,IAAvC,EAA6C;AAC7C;AACEU,QAAAA,+BAA+B,CAAC,IAAD,CAA/B,CADF,CACyC;AACxC;;AACDN,IAAAA,YAAY,CAACiC,SAAD,CAAZ,CAP6B,CAOJ;AAC1B,GARD,CAzG2C,CAmH7C;;;AAEE,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACJ,CAAD,EAAO;AAClC/B,IAAAA,UAAU,CAAC,UAAAoC,SAAS,EAAI;AACtB,+BAAYA,SAAZ;AAAuB5C,QAAAA,YAAY,EAAGuC,CAAC,CAACM,MAAF,CAASC;AAA/C;AACD,KAFS,CAAV;AAGD,GAJD;;AAMA,MAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACR,CAAD,EAAO;AAC1C/B,IAAAA,UAAU,CAAC,UAAAoC,SAAS,EAAI;AACtB,+BAAYA,SAAZ;AAAuB3C,QAAAA,oBAAoB,EAAGsC,CAAC,CAACM,MAAF,CAASC;AAAvD;AACD,KAFS,CAAV;AAGD,GAJD;;AAMA,MAAME,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACT,CAAD,EAAO;AACzC/B,IAAAA,UAAU,CAAC,UAAAoC,SAAS,EAAI;AACtB,+BAAYA,SAAZ;AAAuB1C,QAAAA,mBAAmB,EAAGqC,CAAC,CAACM,MAAF,CAASC;AAAtD;AACD,KAFS,CAAV;AAGD,GAJD;;AAMA,MAAMG,kCAAkC,GAAG,SAArCA,kCAAqC,CAACV,CAAD,EAAO;AAChD/B,IAAAA,UAAU,CAAC,UAAAoC,SAAS,EAAI;AACtB,+BAAYA,SAAZ;AAAuBzC,QAAAA,0BAA0B,EAAGoC,CAAC,CAACM,MAAF,CAASK,KAAT,CAAe,CAAf;AAApD,SADsB,CACkD;AACzE,KAFS,CAAV;AAGD,GAJD;;AAMA,MAAMC,iCAAiC,GAAG,SAApCA,iCAAoC,GAAM;AAC9C3C,IAAAA,UAAU,CAAC,UAAAoC,SAAS,EAAI;AACtB,+BAAYA,SAAZ;AAAuBzC,QAAAA,0BAA0B,EAAG;AAApD,SADsB,CACqC;AAC5D,KAFS,CAAV;AAGAQ,IAAAA,6BAA6B,CAAC,KAAD,CAA7B;AACD,GALD;;AAOA,MAAMyC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACb,CAAD,EAAO;AACpC/B,IAAAA,UAAU,CAAC,UAAAoC,SAAS,EAAI;AACtB,+BAAYA,SAAZ;AAAuBxC,QAAAA,cAAc,EAAGmC,CAAC,CAACM,MAAF,CAASK;AAAjD,SADsB,CACmC;AAC1D,KAFS,CAAV;AAGD,GAJD;;AAMA,MAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClC7C,IAAAA,UAAU,CAAC,UAAAoC,SAAS,EAAI;AACtB,+BAAYA,SAAZ;AAAuBU,QAAAA,sBAAsB,EAAG;AAAhD,SADsB,CACiC;AACxD,KAFS,CAAV;AAGAzC,IAAAA,0BAA0B,CAAC,KAAD,CAA1B;AACAL,IAAAA,UAAU,CAAC,UAAAoC,SAAS,EAAI;AACtB,+BAAYA,SAAZ;AAAuBU,QAAAA,sBAAsB,EAAG;AAAhD;AACD,KAFS,CAAV;AAGD,GARD;;AAUA,MAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,CAAChB,CAAD,EAAO;AAC5C,QAAIiB,MAAM,GAAG,IAAb,CAD4C,CAE5C;AACA;;AACA,QAAIjB,CAAC,CAACM,MAAF,CAASC,KAAT,KAAmB,MAAvB,EACA;AACEU,MAAAA,MAAM,GAAG,IAAT;AACD,KAHD,MAIK;AACHA,MAAAA,MAAM,GAAG,KAAT;AACD;;AACDhD,IAAAA,UAAU,CAAC,UAAAoC,SAAS,EAAI;AACtB,+BAAYA,SAAZ;AAAuBvC,QAAAA,sBAAsB,EAAGmD;AAAhD;AACD,KAFS,CAAV;AAGD,GAdD;;AAgBA,MAAMC,gCAAgC,GAAG,SAAnCA,gCAAmC,CAAClB,CAAD,EAAO;AAC9C/B,IAAAA,UAAU,CAAC,UAAAoC,SAAS,EAAI;AACtB,+BAAYA,SAAZ;AAAuBtC,QAAAA,wBAAwB,EAAGiC,CAAC,CAACM,MAAF,CAASK,KAAT,CAAe,CAAf;AAAlD;AACD,KAFS,CAAV;AAGD,GAJD;;AAMA,MAAMQ,+BAA+B,GAAG,SAAlCA,+BAAkC,GAAM;AAC5ClD,IAAAA,UAAU,CAAC,UAAAoC,SAAS,EAAI;AACtB,+BAAYA,SAAZ;AAAuBtC,QAAAA,wBAAwB,EAAG;AAAlD,SADsB,CACmC;AAC1D,KAFS,CAAV;AAGAS,IAAAA,+BAA+B,CAAC,KAAD,CAA/B;AACD,GALD;;AAOA,MAAM4C,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACpB,CAAD,EAAO;AACzC/B,IAAAA,UAAU,CAAC,UAAAoC,SAAS,EAAI;AACtB,+BAAYA,SAAZ;AAAuBrC,QAAAA,mBAAmB,EAAGgC,CAAC,CAACM,MAAF,CAASC;AAAtD;AACD,KAFS,CAAV;AAGD,GAJD,CAjM2C,CAuM7C;;;AAEE,MAAMc,WAAW,GAAG,SAAdA,WAAc,CAACrB,CAAD,EAAO;AAEzB,QAAI1C,cAAc,KAAK,KAAvB,EAA6B;AAC3BC,MAAAA,iBAAiB,CAAC,IAAD,CAAjB,CAD2B,CAG3B;;AACA,UAAIuC,IAAI,GAAG,IAAIwB,QAAJ,EAAX,CAJ2B,CAIA;;AAC3BxB,MAAAA,IAAI,CAACyB,MAAL,CAAY,cAAZ,EAA4BvE,OAAO,CAACS,YAApC;AACAqC,MAAAA,IAAI,CAACyB,MAAL,CAAY,sBAAZ,EAAoCvE,OAAO,CAACU,oBAA5C;AACAoC,MAAAA,IAAI,CAACyB,MAAL,CAAY,qBAAZ,EAAmCvE,OAAO,CAACW,mBAA3C;AACAmC,MAAAA,IAAI,CAACyB,MAAL,CAAY,4BAAZ,EAA0CvE,OAAO,CAACY,0BAAlD,EAR2B,CAU3B;;AACAkC,MAAAA,IAAI,CAACyB,MAAL,CAAY,wBAAZ,EAAsCvE,OAAO,CAAC+D,sBAA9C,EAX2B,CAY3B;;AACA,UAAK/D,OAAO,CAAC+D,sBAAR,KAAmC,IAAxC,EACA;AACE,aAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGxE,OAAO,CAACa,cAAR,CAAuB4D,MAA3C,EAAmDD,CAAC,EAApD,EAAwD;AACtD1B,UAAAA,IAAI,CAACyB,MAAL,mBAA8BvE,OAAO,CAACa,cAAR,CAAuB2D,CAAvB,CAA9B;AACD;AACF;;AAED1B,MAAAA,IAAI,CAACyB,MAAL,CAAY,wBAAZ,EAAsCvE,OAAO,CAACc,sBAA9C;AACAgC,MAAAA,IAAI,CAACyB,MAAL,CAAY,0BAAZ,EAAwCvE,OAAO,CAACe,wBAAhD;AACA+B,MAAAA,IAAI,CAACyB,MAAL,CAAY,qBAAZ,EAAmCvE,OAAO,CAACgB,mBAA3C,EAtB2B,CAwB3B;;AACAvB,MAAAA,kBAAkB,CAACiF,MAAnB,CAA0BjC,EAA1B,EAA6BK,IAA7B,EACGF,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB5B,QAAAA,UAAU,CAAC,UAAAoC,SAAS,EAAI;AACtB,mCAAYA,SAAZ;AAAuBpD,YAAAA,kBAAkB,EAAG;AAA5C;AACD,SAFS,CAAV,CADgB,CAIhB;;AACAL,QAAAA,cAAc,CAAC,KAAD,EAAQ,mBAAR,CAAd;AACD,OAPH,EAQGmD,KARH,CAQS,UAAAC,CAAC,EAAI;AACV,YAAIA,CAAC,CAACH,QAAF,CAAW8B,MAAX,KAAsB,GAA1B,EAA+B;AAC7B;AACA/E,UAAAA,cAAc,CAAC,IAAD,EAAO,iBAAP,CAAd,CAF6B,CAI7B;;AACAgC,UAAAA,iBAAiB,CAAC;AAACH,YAAAA,OAAO,EAAG,IAAX;AAAiBC,YAAAA,OAAO,EAAG;AAA3B,WAAD,CAAjB;AACAI,UAAAA,yBAAyB,CAAC;AAACL,YAAAA,OAAO,EAAG,IAAX;AAAiBC,YAAAA,OAAO,EAAG;AAA3B,WAAD,CAAzB;AACAM,UAAAA,wBAAwB,CAAC;AAACP,YAAAA,OAAO,EAAG,IAAX;AAAiBC,YAAAA,OAAO,EAAG;AAA3B,WAAD,CAAxB;AACAQ,UAAAA,sBAAsB,CAAC;AAACT,YAAAA,OAAO,EAAG,IAAX;AAAiBC,YAAAA,OAAO,EAAG;AAA3B,WAAD,CAAtB;AACAY,UAAAA,wBAAwB,CAAC;AAACb,YAAAA,OAAO,EAAG,IAAX;AAAiBC,YAAAA,OAAO,EAAG;AAA3B,WAAD,CAAxB;AACAc,UAAAA,uBAAuB,CAAC;AAACf,YAAAA,OAAO,EAAG,IAAX;AAAiBC,YAAAA,OAAO,EAAG;AAA3B,WAAD,CAAvB,CAV6B,CAW7B;;AACAsB,UAAAA,CAAC,CAACH,QAAF,CAAWC,IAAX,CAAgB8B,MAAhB,CAAuBC,OAAvB,CAA+B,UAAAC,KAAK,EAAI;AACtC,oBAAQA,KAAK,CAACC,KAAd;AACE,mBAAK,cAAL;AACAnD,gBAAAA,iBAAiB,CAAC;AAACH,kBAAAA,OAAO,EAAG,KAAX;AAAkBC,kBAAAA,OAAO,EAAGoD,KAAK,CAACE;AAAlC,iBAAD,CAAjB;AACA;;AACA,mBAAK,sBAAL;AACAlD,gBAAAA,yBAAyB,CAAC;AAACL,kBAAAA,OAAO,EAAG,KAAX;AAAkBC,kBAAAA,OAAO,EAAGoD,KAAK,CAACE;AAAlC,iBAAD,CAAzB;AACA;;AACA,mBAAK,qBAAL;AACAhD,gBAAAA,wBAAwB,CAAC;AAACP,kBAAAA,OAAO,EAAG,KAAX;AAAkBC,kBAAAA,OAAO,EAAGoD,KAAK,CAACE;AAAlC,iBAAD,CAAxB;AACA;;AACA,mBAAK,4BAAL;AACA9C,gBAAAA,sBAAsB,CAAC;AAACT,kBAAAA,OAAO,EAAG,KAAX;AAAkBC,kBAAAA,OAAO,EAAGoD,KAAK,CAACE;AAAlC,iBAAD,CAAtB;AACA;;AACA,mBAAK,gBAAL;AACA5C,gBAAAA,mBAAmB,CAAC;AAACX,kBAAAA,OAAO,EAAG,KAAX;AAAkBC,kBAAAA,OAAO,EAAGoD,KAAK,CAACE;AAAlC,iBAAD,CAAnB;AACA;;AACA,mBAAK,0BAAL;AACA1C,gBAAAA,wBAAwB,CAAC;AAACb,kBAAAA,OAAO,EAAG,KAAX;AAAkBC,kBAAAA,OAAO,EAAGoD,KAAK,CAACE;AAAlC,iBAAD,CAAxB;AACA;;AACA,mBAAK,qBAAL;AACAxC,gBAAAA,uBAAuB,CAAC;AAACf,kBAAAA,OAAO,EAAG,KAAX;AAAkBC,kBAAAA,OAAO,EAAGoD,KAAK,CAACE;AAAlC,iBAAD,CAAvB;AACA;AArBF;AAuBD,WAxBD;AA0BD,SAtCD,MAwCA;AACE;AACApF,UAAAA,cAAc,CAAC,IAAD,EAAO,2BAAP,CAAd;AACD;AACF,OArDH;AAuDAW,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;AAEF,GArFD,CAzM2C,CAiS7C;;;AAEC,sBAEE,oBAAC,WAAD;AACC,IAAA,IAAI,EAAC,QADN;AAEC,IAAA,OAAO,EAAGP,OAFX;AAIC,IAAA,oBAAoB,EAAIoD,oBAJzB;AAKE,IAAA,4BAA4B,EAAII,4BALlC;AAME,IAAA,2BAA2B,EAAIC,2BANjC;AAOE,IAAA,kCAAkC,EAAIC,kCAPxC;AAQE,IAAA,sBAAsB,EAAIG,sBAR5B;AASE,IAAA,8BAA8B,EAAIG,8BATpC;AAUE,IAAA,gCAAgC,EAAIE,gCAVtC;AAWE,IAAA,2BAA2B,EAAIE,2BAXjC;AAaE,IAAA,0BAA0B,EAAIjD,0BAbhC;AAcE,IAAA,uBAAuB,EAAIE,uBAd7B;AAeE,IAAA,4BAA4B,EAAIE,4BAflC;AAiBE,IAAA,qBAAqB,EAAIuC,qBAjB3B;AAkBE,IAAA,iCAAiC,EAAIF,iCAlBvC;AAmBE,IAAA,+BAA+B,EAAIO,+BAnBrC;AAqBC,IAAA,cAAc,EAAIxC,cArBnB;AAsBC,IAAA,sBAAsB,EAAIE,sBAtB3B;AAuBC,IAAA,qBAAqB,EAAIE,qBAvB1B;AAwBC,IAAA,mBAAmB,EAAIE,mBAxBxB;AAyBC,IAAA,gBAAgB,EAAIE,gBAzBrB;AA0BC,IAAA,qBAAqB,EAAIE,qBA1B1B;AA2BC,IAAA,oBAAoB,EAAIE,oBA3BzB;AA6BC,IAAA,WAAW,EAAI8B,WA7BhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF;AAoCA","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\n//Components\r\nimport App from \"../../App\";\r\nimport FormProject from \"./FormProject\";\r\nimport ToastDisplayer from \"../ToastDisplayer\";\r\n\r\nexport default function UpdateProject(props) {\r\n\r\n  //----------------------------REDIRECTION APRES VALIDATION DU FORM ou 404 -----------------------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (project.project_is_updated) {\r\n      navigate('/Projects');\r\n    }\r\n    if (notFound === true)\r\n    {\r\n      navigate('/NotFound');\r\n    }\r\n    if (dataFound === true)\r\n    {\r\n      setRemoveButtons();\r\n    }\r\n\r\n    // ----- Check if Admin AND redirect if not-------------\r\n    if (!props.isAdmin)\r\n    {\r\n        navigate('/Projects');\r\n    }\r\n\r\n  });\r\n\r\n  //--------------------------------- State Initial -------------------------------------\r\n\r\n  const [disabledSubmit, setDisabledSubmit] = useState(false); // Bloquage du bouton submit durant process\r\n\r\n  const [notFound,setNotFound] = useState (false); //id not found\r\n\r\n\tconst [project,setProject] = useState( //déclare en tant que liste key/value\r\n  { \r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: null,\r\n      project_images: [],\r\n      project_is_file_format: true,\r\n      project_release_filename: null,\r\n      project_release_url: \"\",\r\n      project_is_updated: false,\r\n  });\r\n\r\n  //Pour reset une et une seule fois, en mode update, le champ file \r\n  // cad supprimer le fichier côté serveur\r\n  const [dataFound,setDataFound] = useState(false);\r\n  const [removeThumbnailPossibility,setRemoveThumbnailPossibility] = useState(false);\r\n  const [removeImagesPossibility, setRemoveImagesPossibility] = useState(false);\r\n  const [removeReleaseFilePossibility,setRemoveReleaseFilePossibility] = useState(false);\r\n\r\n\tconst [nameValidation, setNameValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [technologiesValidation, setTechnologiesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [descriptionValidation, setDescriptionValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [thumbnailValidation, setThumbnailValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [imagesValidation, setImagesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  }) \r\n\r\n  const [releaseFileValidation, setReleaseFileValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [releaseUrlValidation, setReleaseUrlValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  // --------------- actualisation du state pour MODE UPDATE (herité avec props) -------------------------------\r\n  \r\n  const { id } = useParams(); //Retrouve le paramètre id\r\n  useEffect(() => { // à l'instanciation du component     \r\n      getProject(id);\r\n  },[]) //notice the empty array here so it only happens once \r\n\r\n  const getProject = (id) => {\r\n    ProjectDataService.get(id)\r\n      .then(response => {\r\n        setProject(response.data);\r\n        setDataFound(true); //pour définir les options de removes avec croix rouge   \r\n      })\r\n      .catch(e => {\r\n        setNotFound(true);\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  const setRemoveButtons = () => {\r\n    setRemoveThumbnailPossibility(true); //Enclenche la possibilité de supprimer le fichier côté serveur\r\n    setRemoveImagesPossibility(true);\r\n    if (project.project_is_file_format === true) //seulement si c'est un release de type file\r\n    {\r\n      setRemoveReleaseFilePossibility(true); //Enclenche la possibilité de supprimer le fichier côté serveur\r\n    }\r\n    setDataFound(undefined); //Reset pour éviter que ca ne relance cette fonction à chaque modif du state\r\n  }\r\n\r\n// ------------------------- Evenementiel (modification du state en fonction des inputs) -------------------------\r\n\r\n  const onChangeProject_name = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_name : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_technologies = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_technologies : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_description = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_description : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_thumbnail_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : e.target.files[0] } //pcq c'est un fichier\r\n    });\r\n  }\r\n\r\n  const onResetProject_thumbnail_filename = () => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : null } //pcq c'est un fichier\r\n    });\r\n    setRemoveThumbnailPossibility(false);\r\n  }\r\n\r\n  const onChangeProject_images = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images : e.target.files } //pas d'index pcq c'est multifile\r\n    });\r\n  }\r\n\r\n  const onResetProject_images = () => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images_updated : true } //pcq c'est un fichier\r\n    });\r\n    setRemoveImagesPossibility(false);\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images_updated : true }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_is_file_format = (e) => {\r\n    let result = true; \r\n    //si on passe e.target.value, project_is_file_format pointera sur un objet et non une valeur\r\n    // du coup setState n'aura plus d'incidence\r\n    if (e.target.value === \"true\")\r\n    {\r\n      result = true;\r\n    }\r\n    else {\r\n      result = false;\r\n    }\r\n    setProject(prevState => {\r\n      return { ...prevState, project_is_file_format : result }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : e.target.files[0]  }\r\n    });\r\n  }\r\n\r\n  const onResetProject_release_filename = () => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : null } //pcq c'est un fichier\r\n    });\r\n    setRemoveReleaseFilePossibility(false);\r\n  }\r\n\r\n  const onChangeProject_release_url = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_url : e.target.value }\r\n    });\r\n  } \r\n\r\n//------------------------------------ CALL API ----------------------------------------------------------\r\n\r\n  const saveProject = (e) => {\r\n\r\n    if (disabledSubmit === false){\r\n      setDisabledSubmit(true);\r\n\r\n      //------------- instanciation d'un objet FormData pour envoyer les données à l'API --------------   \r\n      let data = new FormData(); // --> \"content\" : \"multipart/form-data\"\r\n      data.append('project_name', project.project_name);\r\n      data.append('project_technologies', project.project_technologies);\r\n      data.append('project_description', project.project_description);\r\n      data.append('project_thumbnail_filename', project.project_thumbnail_filename);\r\n\r\n      // images files\r\n      data.append('project_images_updated', project.project_images_updated);\r\n      //Si les images ont été modifiés par l'utilisateur\r\n      if ( project.project_images_updated === true) \r\n      {\r\n        for (let i = 0; i < project.project_images.length; i++) {\r\n          data.append(`project_images`, project.project_images[i]);\r\n        }    \r\n      }  \r\n\r\n      data.append('project_is_file_format', project.project_is_file_format);\r\n      data.append('project_release_filename', project.project_release_filename);\r\n      data.append('project_release_url', project.project_release_url);\r\n\r\n      //--------------------------------- Request --------------------------------------\r\n      ProjectDataService.update(id,data)\r\n        .then(response => {\r\n          setProject(prevState => {\r\n            return { ...prevState, project_is_updated : true }\r\n          });\r\n          //SWAL\r\n          ToastDisplayer(false, \"Project updated !\");\r\n        })\r\n        .catch(e => {\r\n          if (e.response.status === 422) {\r\n            //SWAL\r\n            ToastDisplayer(true, \"Incorrect input\");\r\n\r\n            // Reset des states pour éviter que certains messages persistent même apres correction\r\n            setNameValidation({isValid : true, message : \"\"})\r\n            setTechnologiesValidation({isValid : true, message : \"\"})\r\n            setDescriptionValidation({isValid : true, message : \"\"})\r\n            setThumbnailValidation({isValid : true, message : \"\"})\r\n            setReleaseFileValidation({isValid : true, message : \"\"})\r\n            setReleaseUrlValidation({isValid : true, message : \"\"}) \r\n            // Gestion des erreurs et ajout au state error\r\n            e.response.data.errors.forEach(error => {\r\n              switch (error.param) {\r\n                case \"project_name\":\r\n                setNameValidation({isValid : false, message : error.msg})\r\n                break;\r\n                case \"project_technologies\":\r\n                setTechnologiesValidation({isValid : false, message : error.msg})\r\n                break;\r\n                case \"project_description\":\r\n                setDescriptionValidation({isValid : false, message : error.msg})\r\n                break;\r\n                case \"project_thumbnail_filename\":\r\n                setThumbnailValidation({isValid : false, message : error.msg})\r\n                break;\r\n                case \"project_images\":\r\n                setImagesValidation({isValid : false, message : error.msg});\r\n                break;\r\n                case \"project_release_filename\":\r\n                setReleaseFileValidation({isValid : false, message : error.msg})\r\n                break;\r\n                case \"project_release_url\":\r\n                setReleaseUrlValidation({isValid : false, message : error.msg})\r\n                break;\r\n              }\r\n            });\r\n\r\n          }\r\n          else \r\n          {\r\n            // SWAL\r\n            ToastDisplayer(true, \"Internal server error ...\");\r\n          }  \r\n        });\r\n\r\n      setDisabledSubmit(false);\r\n    }\r\n   \r\n  }\r\n\r\n\r\n//----------------------------------------------------------- JSX -----------------------------------------------------\r\n\r\n\treturn (\r\n\r\n\t\t\t<FormProject\r\n\t\t\t\tmode=\"update\"\r\n\t\t\t\tproject= {project}\r\n\r\n\t\t\t\tonChangeProject_name = {onChangeProject_name}\r\n\t  \t\tonChangeProject_technologies = {onChangeProject_technologies}\r\n\t  \t\tonChangeProject_description = {onChangeProject_description}\r\n\t  \t\tonChangeProject_thumbnail_filename = {onChangeProject_thumbnail_filename}\r\n\t  \t\tonChangeProject_images = {onChangeProject_images}\r\n\t  \t\tonChangeProject_is_file_format = {onChangeProject_is_file_format}\r\n\t  \t\tonChangeProject_release_filename = {onChangeProject_release_filename}\r\n\t  \t\tonChangeProject_release_url = {onChangeProject_release_url}\r\n\r\n\t  \t\tremoveThumbnailPossibility = {removeThumbnailPossibility}\r\n\t  \t\tremoveImagesPossibility = {removeImagesPossibility} \r\n\t  \t\tremoveReleaseFilePossibility = {removeReleaseFilePossibility}\r\n\r\n\t  \t\tonResetProject_images = {onResetProject_images}\r\n\t  \t\tonResetProject_thumbnail_filename = {onResetProject_thumbnail_filename} \r\n\t  \t\tonResetProject_release_filename = {onResetProject_release_filename}\r\n\r\n\t\t\t\tnameValidation = {nameValidation}\r\n\t\t\t\ttechnologiesValidation = {technologiesValidation}\r\n\t\t\t\tdescriptionValidation = {descriptionValidation}\r\n\t\t\t\tthumbnailValidation = {thumbnailValidation}\r\n\t\t\t\timagesValidation = {imagesValidation}\r\n\t\t\t\treleaseFileValidation = {releaseFileValidation}\r\n\t\t\t\treleaseUrlValidation = {releaseUrlValidation}\r\n\r\n\t\t\t\tsaveProject = {saveProject}\r\n\t\t\t>\r\n\t\t\t</FormProject>\r\n\r\n\t);\r\n}"]},"metadata":{},"sourceType":"module"}