{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ricar\\\\Desktop\\\\myPortfolio\\\\myPortofolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ricar\\\\Desktop\\\\myPortfolio\\\\myPortofolio\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthService from \"./services/auth.service\";\nimport \"./App.css\";\nimport Base from \"./Base\";\nimport Home from \"./components/Home\";\nimport Login from \"./components/Auth/Login\";\nimport Contact from \"./components/Contact\";\nimport GetAllProject from \"./components/Project/GetAllProject\";\nimport GetOneProject from \"./components/Project/GetOneProject\";\nimport CreateProject from \"./components/Project/CreateProject\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport NotFound from \"./components/NotFound\";\nimport ToastDisplayer from \"./components/ToastDisplayer\";\nexport default function App(props) {\n  //--------------REDIRECTION APRES LOGOUT  --------\n  var navigate = useNavigate();\n  useEffect(function () {\n    //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\n    // ----- Check if Admin -------------\n    var admin = AuthService.getCurrentUser();\n\n    if (admin) {\n      setIsAdmin(true);\n    } else {\n      setIsAdmin(false);\n    }\n\n    if (redirect === true) {\n      setRedirect(false);\n      navigate('/Projects');\n    }\n  }); // --------- STATE --------------\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAdmin = _useState2[0],\n      setIsAdmin = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      redirect = _useState4[0],\n      setRedirect = _useState4[1];\n\n  var logout = function logout() {\n    AuthService.logout();\n    setIsAdmin(false);\n\n    if (props.page === 'CreateProject' || props.page === 'UpdateProject') {\n      setRedirect(true);\n    }\n\n    ToastDisplayer(false, \"Goodbye senpai :( \");\n  }; // ------------ JSX ------------------\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Base, {\n    logout: logout,\n    isAdmin: isAdmin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }\n  }), {\n    'Home': /*#__PURE__*/React.createElement(Home, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }),\n    'Login': /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 26\n      }\n    }),\n    'Contact': /*#__PURE__*/React.createElement(Contact, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 28\n      }\n    }),\n    'GetAllProject': /*#__PURE__*/React.createElement(GetAllProject, {\n      isAdmin: isAdmin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 34\n      }\n    }),\n    'GetOneProject': /*#__PURE__*/React.createElement(GetOneProject, {\n      isAdmin: isAdmin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 34\n      }\n    }),\n    'CreateProject': /*#__PURE__*/React.createElement(CreateProject, {\n      isAdmin: isAdmin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 34\n      }\n    }),\n    'UpdateProject': /*#__PURE__*/React.createElement(UpdateProject, {\n      isAdmin: isAdmin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 34\n      }\n    }),\n    \"NotFound\": /*#__PURE__*/React.createElement(NotFound, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 31\n      }\n    })\n  }[props.page]);\n}","map":{"version":3,"sources":["C:/Users/ricar/Desktop/myPortfolio/myPortofolio/src/App.js"],"names":["React","useState","useEffect","useNavigate","AuthService","Base","Home","Login","Contact","GetAllProject","GetOneProject","CreateProject","UpdateProject","NotFound","ToastDisplayer","App","props","navigate","admin","getCurrentUser","setIsAdmin","redirect","setRedirect","isAdmin","logout","page"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AuthService from \"./services/auth.service\";\r\nimport \"./App.css\";\r\nimport Base from \"./Base\";\r\nimport Home from \"./components/Home\";\r\nimport Login from \"./components/Auth/Login\";\r\nimport Contact from \"./components/Contact\";\r\nimport GetAllProject from \"./components/Project/GetAllProject\";\r\nimport GetOneProject from \"./components/Project/GetOneProject\";\r\nimport CreateProject from \"./components/Project/CreateProject\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport ToastDisplayer from \"./components/ToastDisplayer\";\r\n\r\n\r\nexport default function App(props) {\r\n\r\n    //--------------REDIRECTION APRES LOGOUT  --------\r\n    const navigate = useNavigate();\r\n    useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n\r\n        // ----- Check if Admin -------------\r\n        const admin = AuthService.getCurrentUser();\r\n        if (admin)\r\n        {\r\n            setIsAdmin(true); \r\n        }\r\n        else\r\n        {\r\n            setIsAdmin(false); \r\n        }\r\n\r\n        if (redirect === true)\r\n        {\r\n            setRedirect(false);\r\n            navigate('/Projects');\r\n        }\r\n\r\n    });\r\n\r\n    // --------- STATE --------------\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [redirect, setRedirect] = useState(false);\r\n\r\n\r\n    const logout = () => {\r\n        AuthService.logout();\r\n        setIsAdmin(false);\r\n        if (props.page === 'CreateProject' || props.page === 'UpdateProject')\r\n        {\r\n            setRedirect(true);\r\n        }\r\n        ToastDisplayer(false,\"Goodbye senpai :( \");\r\n        \r\n    };\r\n\r\n\r\n    // ------------ JSX ------------------\r\n    return (\r\n      <>   \r\n       <Base logout={logout} isAdmin={isAdmin} />\r\n       \r\n        {\r\n            {\r\n                'Home': <Home />,\r\n                'Login': <Login  />,\r\n                'Contact': <Contact />,\r\n                'GetAllProject': <GetAllProject isAdmin={isAdmin}/>,\r\n                'GetOneProject': <GetOneProject isAdmin={isAdmin}/>,\r\n                'CreateProject': <CreateProject isAdmin={isAdmin}/>,\r\n                'UpdateProject': <UpdateProject isAdmin={isAdmin}/>,\r\n                \"NotFound\" :  <NotFound />             \r\n            }[props.page]\r\n        }\r\n    </>\r\n\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}