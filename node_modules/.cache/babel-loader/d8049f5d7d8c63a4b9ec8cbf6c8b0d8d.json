{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ricar\\\\Desktop\\\\myPortfolio\\\\myPortofolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ricar\\\\Desktop\\\\myPortfolio\\\\myPortofolio\\\\src\\\\components\\\\Form\\\\TextInput.js\";\nimport React, { useState, useEffect } from 'react';\nexport default function TextInput(props) {\n  var _useState = useState(props.isValid),\n      _useState2 = _slicedToArray(_useState, 2),\n      valid = _useState2[0],\n      setValid = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }\n  }, props.labelName), props.multiline === true ? /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"textArea-form\",\n    id: props.fieldName,\n    value: props.fieldValue,\n    onChange: props.onChangeEvent,\n    name: props.fieldName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, props.small === true ? /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"textFields-form small\",\n    id: props.fieldName,\n    value: props.fieldValue,\n    onChange: props.onChangeEvent,\n    name: props.fieldName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 6\n    }\n  }) : /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"textFields-form\",\n    id: props.fieldName,\n    value: props.fieldValue,\n    onChange: props.onChangeEvent,\n    name: props.fieldName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 6\n    }\n  })), props.isValid === false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 8\n    }\n  }, props.validationMessage) : null);\n}","map":{"version":3,"sources":["C:/Users/ricar/Desktop/myPortfolio/myPortofolio/src/components/Form/TextInput.js"],"names":["React","useState","useEffect","TextInput","props","isValid","valid","setValid","labelName","multiline","fieldName","fieldValue","onChangeEvent","small","validationMessage"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,kBAEdH,QAAQ,CAACG,KAAK,CAACC,OAAP,CAFM;AAAA;AAAA,MAEjCC,KAFiC;AAAA,MAE1BC,QAF0B;;AAIxC,sBACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BH,KAAK,CAACI,SAAnC,CADD,EAKGJ,KAAK,CAACK,SAAN,KAAoB,IAApB,gBAEC;AACF,IAAA,SAAS,EAAC,eADR;AAEF,IAAA,EAAE,EAAEL,KAAK,CAACM,SAFR;AAGF,IAAA,KAAK,EAAEN,KAAK,CAACO,UAHX;AAIF,IAAA,QAAQ,EAAEP,KAAK,CAACQ,aAJd;AAKF,IAAA,IAAI,EAAER,KAAK,CAACM,SALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,gBAWD,0CACEN,KAAK,CAACS,KAAN,KAAgB,IAAhB,gBACD;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,SAAS,EAAC,uBAFX;AAGC,IAAA,EAAE,EAAET,KAAK,CAACM,SAHX;AAIC,IAAA,KAAK,EAAEN,KAAK,CAACO,UAJd;AAKC,IAAA,QAAQ,EAAEP,KAAK,CAACQ,aALjB;AAMC,IAAA,IAAI,EAAER,KAAK,CAACM,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,gBAUD;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,SAAS,EAAC,iBAFX;AAGC,IAAA,EAAE,EAAEN,KAAK,CAACM,SAHX;AAIC,IAAA,KAAK,EAAEN,KAAK,CAACO,UAJd;AAKC,IAAA,QAAQ,EAAEP,KAAK,CAACQ,aALjB;AAMC,IAAA,IAAI,EAAER,KAAK,CAACM,SANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXD,CAhBF,EAwCMN,KAAK,CAACC,OAAN,KAAkB,KAAlB,gBACD;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BD,KAAK,CAACU,iBAArC,CADC,GAEA,IA1CN,CADD;AA+CA","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function TextInput(props) {\r\n\r\n\tconst [valid, setValid] = useState(props.isValid);\r\n\r\n\treturn (\r\n\t\t<div className=\"item-form\">\r\n\t\t\t<div className=\"label-form\">{props.labelName}</div>\r\n\r\n\t\t\t{/* le champ peut etre multiline ou single-line, et si single-line, small ou normal */}\r\n\r\n\t\t\t{ props.multiline === true ?\r\n\r\n\t\t    <textarea\r\n\t\t\t\tclassName=\"textArea-form\" \r\n\t\t\t\tid={props.fieldName}\r\n\t\t\t\tvalue={props.fieldValue} \r\n\t\t\t\tonChange={props.onChangeEvent} \r\n\t\t\t\tname={props.fieldName}>\r\n        \t</textarea> \r\n\r\n\t\t\t: \r\n\t\t\t\t<>\r\n\t\t\t\t{ props.small === true ?\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"textFields-form small\" \r\n\t\t\t\t\t\tid={props.fieldName} \r\n\t\t\t\t\t\tvalue={props.fieldValue} \r\n\t\t\t\t\t\tonChange={props.onChangeEvent} \r\n\t\t\t\t\t\tname={props.fieldName}\r\n\t\t\t\t\t/>\r\n\t\t\t\t:\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"textFields-form\" \r\n\t\t\t\t\t\tid={props.fieldName} \r\n\t\t\t\t\t\tvalue={props.fieldValue} \r\n\t\t\t\t\t\tonChange={props.onChangeEvent} \r\n\t\t\t\t\t\tname={props.fieldName}\r\n\t      \t\t\t/>\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t</>\r\n\r\n\t\t\t}\r\n\r\n      { props.isValid === false ?\r\n      \t<div className=\"errorMessage\">{props.validationMessage}</div>\r\n      : null }\r\n\r\n\t\t</div> \r\n \t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}