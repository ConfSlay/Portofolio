{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\ricar\\\\Desktop\\\\myPortfolio\\\\myPortofolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\ricar\\\\Desktop\\\\myPortfolio\\\\myPortofolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\ricar\\\\Desktop\\\\myPortfolio\\\\myPortofolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ricar\\\\Desktop\\\\myPortfolio\\\\myPortofolio\\\\src\\\\components\\\\Auth\\\\Login.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport App from \"../../App\";\nimport AuthForm from \"./AuthForm\";\nimport AuthService from \"../../services/auth.service\";\nimport ToastDisplayer from \"../ToastDisplayer\";\nexport default function Login(props) {\n  //--------------REDIRECTION APRES VALIDATION DU FORM--------\n  var navigate = useNavigate();\n  useEffect(function () {\n    //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\n    if (authentificated === true) {\n      navigate('/Projects');\n    }\n  }); //---------------State ---------------------\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isValid = _useState6[0],\n      setIsValid = _useState6[1]; // Validation du form\n\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      authentificated = _useState8[0],\n      setAuthentificated = _useState8[1]; // Résultat Auth\n\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      disabledSubmit = _useState10[0],\n      setDisabledSubmit = _useState10[1]; // Bloquage du bouton submit durant process\n  // --------- Events -----------------------\n\n\n  var OnChangeUsername = function OnChangeUsername(e) {\n    setUsername(e.target.value);\n  };\n\n  var OnChangePassword = function OnChangePassword(e) {\n    setPassword(e.target.value);\n  };\n\n  var submitAuth = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var Authentificated;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(disabledSubmit === false)) {\n                _context.next = 8;\n                break;\n              }\n\n              console.log(\"in\");\n              setDisabledSubmit(true); //Blocage du bouton\n\n              _context.next = 5;\n              return AuthService.login(username, password);\n\n            case 5:\n              Authentificated = _context.sent;\n\n              if (Authentificated) {\n                setIsValid(true);\n                setAuthentificated(true);\n                ToastDisplayer(false, \"Hello senpai :) \");\n              } else {\n                setIsValid(false);\n              }\n\n              setDisabledSubmit(false); //déblocage du bouton\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitAuth(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // ------------- JSX ---------------\n\n\n  return /*#__PURE__*/React.createElement(AuthForm, {\n    UsernameFieldName: \"user_username\",\n    UsernameFieldValue: username,\n    OnChangeUsername: OnChangeUsername,\n    PasswordFieldName: \"user_password\",\n    PasswordFieldValue: password,\n    OnChangePassword: OnChangePassword,\n    submitAuth: submitAuth,\n    isValid: isValid,\n    validationMessage: \"Authentification failed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/ricar/Desktop/myPortfolio/myPortofolio/src/components/Auth/Login.js"],"names":["React","useState","useEffect","useNavigate","App","AuthForm","AuthService","ToastDisplayer","Login","props","navigate","authentificated","username","setUsername","password","setPassword","isValid","setIsValid","setAuthentificated","disabledSubmit","setDisabledSubmit","OnChangeUsername","e","target","value","OnChangePassword","submitAuth","console","log","login","Authentificated"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport App from \"../../App\";\r\nimport AuthForm from \"./AuthForm\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport ToastDisplayer from \"../ToastDisplayer\";\r\n\r\n\r\nexport default function Login(props) {\r\n\r\n\t//--------------REDIRECTION APRES VALIDATION DU FORM--------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (authentificated === true) {\r\n      navigate('/Projects');\r\n    }\r\n  });\r\n\r\n  //---------------State ---------------------\r\n\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [isValid, setIsValid] = useState(true); // Validation du form\r\n\tconst [authentificated, setAuthentificated] = useState(false); // Résultat Auth\r\n\tconst [disabledSubmit, setDisabledSubmit] = useState(false); // Bloquage du bouton submit durant process\r\n\r\n\t// --------- Events -----------------------\r\n\r\n\tconst OnChangeUsername = (e) => { setUsername(e.target.value);};\r\n\r\n\tconst OnChangePassword = (e) => { setPassword(e.target.value);};\r\n\r\n\tconst submitAuth = async (e) => {\r\n\t\tif (disabledSubmit === false) {\r\n\t\t\tconsole.log(\"in\");\r\n\r\n\t\t\tsetDisabledSubmit(true); //Blocage du bouton\r\n\t\t\tconst Authentificated = await AuthService.login(username,password);\r\n\r\n\t\t\tif (Authentificated) {\r\n\t\t\t\tsetIsValid(true);\r\n\t\t\t\tsetAuthentificated(true);\r\n\t\t\t\tToastDisplayer(false,\"Hello senpai :) \");\r\n\t\t\t}\t\r\n\t\t\telse {\r\n\t\t\t\tsetIsValid(false);\r\n\t\t\t}\t\r\n\r\n\t\t\tsetDisabledSubmit(false); //déblocage du bouton\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\t// ------------- JSX ---------------\r\n  return (\r\n\r\n  \t<AuthForm\r\n\t\t\tUsernameFieldName = \"user_username\"\r\n\t\t\tUsernameFieldValue = {username}\r\n\t\t\tOnChangeUsername = {OnChangeUsername}\r\n\t\t\tPasswordFieldName = \"user_password\"\r\n\t\t\tPasswordFieldValue = {password}\r\n\t\t\tOnChangePassword = {OnChangePassword}\r\n\t\t\tsubmitAuth = {submitAuth}\r\n\t\t\tisValid = {isValid}\r\n\t\t\tvalidationMessage = \"Authentification failed\">\t\t\r\n    </AuthForm>\r\n\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}