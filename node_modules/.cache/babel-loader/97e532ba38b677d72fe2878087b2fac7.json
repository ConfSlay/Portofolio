{"ast":null,"code":"import _readOnlyError from \"C:\\\\Users\\\\ricar\\\\Desktop\\\\nodejs-website\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/readOnlyError\";\nimport _objectSpread from \"C:\\\\Users\\\\ricar\\\\Desktop\\\\nodejs-website\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\ricar\\\\Desktop\\\\nodejs-website\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ricar\\\\Desktop\\\\nodejs-website\\\\client\\\\src\\\\components\\\\Project\\\\FormProject.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ProjectDataService from \"../../services/project.service\";\nimport App from \"../../App\";\nexport default function FormProject(props) {\n  //----------------------------REDIRECTION APRES VALIDATION du form-----------------------\n  var navigate = useNavigate();\n  useEffect(function () {\n    //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\n    if (project.project_is_created_or_updated) {\n      navigate('/Projects');\n    }\n  }); //----------------------------State initial ------------------------------\n\n  var _useState = useState( //déclare en tant que liste key/value\n  {\n    project_id: null,\n    project_name: \"\",\n    project_technologies: \"\",\n    project_description: \"\",\n    project_thumbnail_filename: \"\",\n    project_is_file_format: true,\n    project_release_filename: \"\",\n    project_release_url: \"\",\n    project_is_created_or_updated: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      project = _useState2[0],\n      setProject = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errors = _useState4[0],\n      setErrors = _useState4[1]; // --------------- actualisation du state pour MODE UPDATE (herité avec props) -------------------------------\n\n\n  var _useParams = useParams(),\n      id = _useParams.id; //Retrouve le paramètre id\n\n\n  useEffect(function () {\n    //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\n    if (props.mode === \"update\") {\n      getProject(id);\n    }\n  }, []); //notice the empty array here so it only happens once \n\n  var getProject = function getProject(id) {\n    ProjectDataService.get(id).then(function (response) {\n      setProject(response.data);\n      console.log(response.data);\n    }).catch(function (e) {\n      console.log(e);\n    });\n  }; // ------------------------- Evenementiel (modification du state en fonction des inputs) -------------------------\n  // Event de modifications du formulaires\n\n\n  var onChangeProject_name = function onChangeProject_name(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_name: e.target.value\n      });\n    });\n  };\n\n  var onChangeProject_technologies = function onChangeProject_technologies(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_technologies: e.target.value\n      });\n    });\n  };\n\n  var onChangeProject_description = function onChangeProject_description(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_description: e.target.value\n      });\n    });\n  };\n\n  var onChangeProject_thumbnail_filename = function onChangeProject_thumbnail_filename(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_thumbnail_filename: e.target.value\n      });\n    });\n  };\n\n  var onChangeProject_is_file_format = function onChangeProject_is_file_format(e) {\n    var result = true;\n\n    if (e.target.value === \"true\") {\n      result = true;\n      project.project_release_url = \"\";\n    } else {\n      result = false;\n      project.project_release_filename = \"\";\n    }\n\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_is_file_format: result\n      });\n    });\n  };\n\n  var onChangeProject_release_filename = function onChangeProject_release_filename(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_release_filename: e.target.value\n      });\n    });\n  };\n\n  var onChangeProject_release_url = function onChangeProject_release_url(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_release_url: e.target.value\n      });\n    });\n  }; // ----------------------------------- Submit du form et Reponse du server ----------------------\n\n\n  var saveProject = function saveProject(e) {\n    var data = {\n      project_name: project.project_name,\n      project_technologies: project.project_technologies,\n      project_description: project.project_description,\n      project_thumbnail_filename: project.project_thumbnail_filename,\n      project_is_file_format: project.project_is_file_format,\n      project_release_filename: project.project_release_filename,\n      project_release_url: project.project_release_url\n    };\n\n    if (props.mode === \"create\") {\n      //mode create\n      ProjectDataService.create(data).then(function (response) {\n        if (response.status === 200) {\n          console.log(response.data);\n          setProject(function (prevState) {\n            return _objectSpread({}, prevState, {\n              project_is_created_or_updated: true\n            });\n          });\n        } else if (response.status === 422) {\n          console.log(response.data);\n        } else if (response.status === 500) {\n          console.log(response.data);\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    } else {\n      //mode update\n      ProjectDataService.update(id, data).then(function (response) {\n        setProject(function (prevState) {\n          return _objectSpread({}, prevState, {\n            project_is_created_or_updated: true\n          });\n        });\n      }).catch(function (e) {\n        if (e.response.status === 422) {\n          // Gestion des erreurs et ajout au state error\n          var index = 0;\n          var error = Object.assign({}, e.response.data.errors[index]); //error devient donc un objet complexe\n\n          var errorArray = [];\n\n          while (error !== undefined && error !== null) {\n            //undefined == index out of errorArray's range\n            errorArray.push({\n              errorMessage: error.msg,\n              errorField: error.param\n            });\n            index++;\n            e.response.data.errors[index], _readOnlyError(\"error\"); //vu que son type est modifié alors tout va bien pour l'affectation\n          }\n\n          ;\n          setErrors(Object.assign({}, errorArray));\n          console.log(errorArray);\n          console.log(errors);\n        } else {//SWAL Server error\n        }\n      });\n    }\n  }; // -------------------------------- JSX -----------------------------------------\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, \"Nom du Projet\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"textFields-form small\",\n    id: \"project_name\",\n    value: project.project_name,\n    onChange: onChangeProject_name,\n    name: \"project_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, \"Technologies sources et cibles\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"textFields-form\",\n    id: \"project_technologies\",\n    value: project.project_technologies,\n    onChange: onChangeProject_technologies,\n    name: \"project_technologies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"textArea-form\",\n    id: \"project_description\",\n    value: project.project_description,\n    onChange: onChangeProject_description,\n    name: \"project_description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, \"Miniature du projet\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, \"Format\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"FormatChoice_JS\",\n    id: \"project_is_file_format\",\n    value: project.project_is_file_format,\n    onChange: onChangeProject_is_file_format,\n    name: \"project_is_file_format\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, \"File\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, \"Link\"))), project.project_is_file_format === true ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-form fileInput_JS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, \"Fichier\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-form urlInput_JS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 15\n    }\n  }, \"Lien\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"textFields-form\",\n    id: \"project_release_url\",\n    value: project.project_release_url,\n    onChange: onChangeProject_release_url,\n    name: \"project_release_url\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  })), \" \", props.mode === \"create\" ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"item-form button-form\",\n    onClick: saveProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }, \"Create Project\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"item-form button-form\",\n    onClick: saveProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 11\n    }\n  }, \"Update Project\"), \" \")));\n}","map":{"version":3,"sources":["C:/Users/ricar/Desktop/nodejs-website/client/src/components/Project/FormProject.js"],"names":["React","useState","useEffect","useNavigate","useParams","ProjectDataService","App","FormProject","props","navigate","project","project_is_created_or_updated","project_id","project_name","project_technologies","project_description","project_thumbnail_filename","project_is_file_format","project_release_filename","project_release_url","setProject","errors","setErrors","id","mode","getProject","get","then","response","data","console","log","catch","e","onChangeProject_name","prevState","target","value","onChangeProject_technologies","onChangeProject_description","onChangeProject_thumbnail_filename","onChangeProject_is_file_format","result","onChangeProject_release_filename","onChangeProject_release_url","saveProject","create","status","update","index","error","Object","assign","errorArray","undefined","push","errorMessage","msg","errorField","param"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\nimport App from \"../../App\"\r\n\r\nexport default function FormProject(props) {\r\n\r\n  //----------------------------REDIRECTION APRES VALIDATION du form-----------------------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (project.project_is_created_or_updated) {\r\n      navigate('/Projects');\r\n    }\r\n  });\r\n\r\n  //----------------------------State initial ------------------------------\r\n  const [project,setProject] = useState( //déclare en tant que liste key/value\r\n    { \r\n      project_id: null,\r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: \"\",\r\n      project_is_file_format: true,\r\n      project_release_filename: \"\",\r\n      project_release_url: \"\",\r\n      project_is_created_or_updated: false,\r\n    }\r\n  );\r\n\r\n  const [errors, setErrors] = useState([]);\r\n\r\n// --------------- actualisation du state pour MODE UPDATE (herité avec props) -------------------------------\r\n  const { id } = useParams(); //Retrouve le paramètre id\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (props.mode === \"update\")\r\n    {      \r\n      getProject(id);\r\n    }\r\n  },[]) //notice the empty array here so it only happens once \r\n\r\n  const getProject = (id) => {\r\n    ProjectDataService.get(id)\r\n      .then(response => {\r\n        setProject(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n// ------------------------- Evenementiel (modification du state en fonction des inputs) -------------------------\r\n\r\n  // Event de modifications du formulaires\r\n  const onChangeProject_name = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_name : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_technologies = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_technologies : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_description = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_description : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_thumbnail_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_is_file_format = (e) => {\r\n    let result = true;\r\n    if (e.target.value === \"true\")\r\n    {\r\n      result = true;\r\n      project.project_release_url = \"\";\r\n    }\r\n    else {\r\n      result = false;\r\n      project.project_release_filename = \"\";\r\n    }\r\n    setProject(prevState => {\r\n      return { ...prevState, project_is_file_format : result }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_url = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_url : e.target.value }\r\n    });\r\n  } \r\n\r\n// ----------------------------------- Submit du form et Reponse du server ----------------------\r\n  const saveProject = (e) => {\r\n    let data = {\r\n      project_name: project.project_name,\r\n      project_technologies: project.project_technologies,\r\n      project_description: project.project_description,\r\n      project_thumbnail_filename: project.project_thumbnail_filename,\r\n      project_is_file_format: project.project_is_file_format,\r\n      project_release_filename: project.project_release_filename,\r\n      project_release_url: project.project_release_url\r\n    };\r\n    if ( props.mode === \"create\") { //mode create\r\n      ProjectDataService.create(data)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          console.log(response.data);\r\n          setProject(prevState => {\r\n            return { ...prevState, project_is_created_or_updated : true }\r\n          });\r\n        }\r\n        else if (response.status === 422) {\r\n          console.log(response.data);\r\n        }\r\n        else if (response.status === 500) {\r\n          console.log(response.data);\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n    else { //mode update\r\n      ProjectDataService.update(id,data)\r\n        .then(response => {\r\n          setProject(prevState => {\r\n            return { ...prevState, project_is_created_or_updated : true }\r\n          });\r\n        })\r\n        .catch(e => {\r\n          if (e.response.status === 422) {\r\n            // Gestion des erreurs et ajout au state error\r\n            let index = 0;\r\n            const error = Object.assign({}, e.response.data.errors[index]); //error devient donc un objet complexe\r\n            const errorArray = [];\r\n\r\n            while(error !== undefined && error !== null) { //undefined == index out of errorArray's range\r\n              errorArray.push({errorMessage : error.msg , errorField : error.param});\r\n              index++;\r\n              error = e.response.data.errors[index]; //vu que son type est modifié alors tout va bien pour l'affectation\r\n            };\r\n\r\n            setErrors(Object.assign({},errorArray));\r\n            console.log(errorArray);\r\n            console.log(errors);\r\n            \r\n\r\n\r\n          }\r\n          else {\r\n            //SWAL Server error\r\n          }  \r\n        });\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n// -------------------------------- JSX -----------------------------------------\r\n  return (\r\n    <>\r\n      <App></App>\r\n      <div className=\"wrapper-form\">\r\n        <div className=\"box-form\">\r\n       \r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Nom du Projet</div>\r\n            <input \r\n              type=\"text\"\r\n              className=\"textFields-form small\" \r\n              id=\"project_name\" \r\n              value={project.project_name} \r\n              onChange={onChangeProject_name} \r\n              name=\"project_name\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Technologies sources et cibles</div>\r\n            <input \r\n              type=\"text\"\r\n              className=\"textFields-form\" \r\n              id=\"project_technologies\"\r\n              value={project.project_technologies} \r\n              onChange={onChangeProject_technologies} \r\n              name=\"project_technologies\"\r\n            /> \r\n          </div>\r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Description</div>\r\n            <textarea\r\n              className=\"textArea-form\" \r\n              id=\"project_description\"\r\n              value={project.project_description} \r\n              onChange={onChangeProject_description} \r\n              name=\"project_description\">\r\n            </textarea> \r\n          </div>\r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Miniature du projet</div>\r\n            {/* className='files-form' }\r\n          </div>\r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Images de présentation du projet</div>\r\n            {/* className='files-form' */}\r\n          </div> \r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Format</div>\r\n            <select \r\n              className='FormatChoice_JS'\r\n              id=\"project_is_file_format\"  \r\n              value={project.project_is_file_format} \r\n              onChange={onChangeProject_is_file_format} \r\n              name=\"project_is_file_format\">\r\n                <option value=\"true\">File</option>\r\n                <option value=\"false\">Link</option>\r\n            </select>\r\n          </div>\r\n\r\n        {/* Affichage dynamique du formulaire */}\r\n          { project.project_is_file_format === true ?\r\n\r\n            <div className=\"item-form fileInput_JS\">\r\n                <div className=\"label-form\">Fichier</div>  \r\n                {/* className='files-form' */}\r\n            </div>\r\n\r\n          :\r\n\r\n            <div className=\"item-form urlInput_JS\">\r\n              <div className=\"label-form\">Lien</div>\r\n              <input \r\n                type=\"text\"\r\n                className=\"textFields-form\" \r\n                id=\"project_release_url\"\r\n                value={project.project_release_url} \r\n                onChange={onChangeProject_release_url} \r\n                name=\"project_release_url\"\r\n              /> \r\n            </div>\r\n\r\n          } {/*end if*/}\r\n\r\n        {/* changement du noeud texte du bouton submit en fonction de update ou create */}\r\n          { props.mode === \"create\" ?\r\n          <button className=\"item-form button-form\" onClick={saveProject}>Create Project</button>\r\n          :\r\n          <button className=\"item-form button-form\" onClick={saveProject}>Update Project</button>\r\n          } {/*end if*/}\r\n \r\n        </div>\r\n    </div>\r\n  </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}