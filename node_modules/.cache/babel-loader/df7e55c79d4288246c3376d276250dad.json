{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ricar\\\\Desktop\\\\myPortfolio\\\\myPortofolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\ricar\\\\Desktop\\\\myPortfolio\\\\myPortofolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ricar\\\\Desktop\\\\myPortfolio\\\\myPortofolio\\\\src\\\\components\\\\Project\\\\CreateProject.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport ProjectDataService from \"../../services/project.service\"; //Components\n\nimport App from \"../../App\";\nimport FormProject from \"./FormProject\";\nimport ToastDisplayer from \"../ToastDisplayer\";\nexport default function CreateProject(props) {\n  //----------------------------REDIRECTION APRES VALIDATION DU FORM ou UNAUTHORIZED-----------------------\n  var navigate = useNavigate();\n  useEffect(function () {\n    //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\n    if (project.project_is_created) {\n      navigate('/Projects');\n    } // ----- Check if Admin AND redirect if not-------------\n\n\n    if (!props.isAdmin) {\n      navigate('/Projects');\n    }\n  }); //--------------------------------- State Initial -------------------------------------\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      disabledSubmit = _useState2[0],\n      setDisabledSubmit = _useState2[1]; // Bloquage du bouton submit durant process\n\n\n  var _useState3 = useState( //déclare en tant que liste key/value\n  {\n    project_name: \"\",\n    project_technologies: \"\",\n    project_description: \"\",\n    project_thumbnail_filename: null,\n    project_is_youtube_not_images: true,\n    project_youtube_link: \"\",\n    project_images: [],\n    project_is_file_format: true,\n    project_release_filename: null,\n    project_release_url: \"\",\n    project_is_created: false\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      project = _useState4[0],\n      setProject = _useState4[1];\n\n  var _useState5 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      nameValidation = _useState6[0],\n      setNameValidation = _useState6[1];\n\n  var _useState7 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      technologiesValidation = _useState8[0],\n      setTechnologiesValidation = _useState8[1];\n\n  var _useState9 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      descriptionValidation = _useState10[0],\n      setDescriptionValidation = _useState10[1];\n\n  var _useState11 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      thumbnailValidation = _useState12[0],\n      setThumbnailValidation = _useState12[1];\n\n  var _useState13 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      youtubeLinkValidation = _useState14[0],\n      setYoutubeLinkValidation = _useState14[1];\n\n  var _useState15 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState16 = _slicedToArray(_useState15, 2),\n      imagesValidation = _useState16[0],\n      setImagesValidation = _useState16[1];\n\n  var _useState17 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState18 = _slicedToArray(_useState17, 2),\n      releaseFileValidation = _useState18[0],\n      setReleaseFileValidation = _useState18[1];\n\n  var _useState19 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState20 = _slicedToArray(_useState19, 2),\n      releaseUrlValidation = _useState20[0],\n      setReleaseUrlValidation = _useState20[1]; // ------------------------- Evenementiel (modification du state en fonction des inputs) -------------------------\n\n\n  var onChangeProject_name = function onChangeProject_name(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_name: e.target.value\n      });\n    });\n  };\n\n  var onChangeProject_technologies = function onChangeProject_technologies(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_technologies: e.target.value\n      });\n    });\n  };\n\n  var onChangeProject_description = function onChangeProject_description(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_description: e.target.value\n      });\n    });\n  };\n\n  var onChangeProject_thumbnail_filename = function onChangeProject_thumbnail_filename(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_thumbnail_filename: e.target.files[0]\n      }); //pcq c'est un fichier\n    });\n  };\n\n  var onChangeProject_is_youtube_not_images = function onChangeProject_is_youtube_not_images(e) {\n    var result = true; //si on passe e.target.value, project_is_file_format pointera sur un objet et non une valeur\n    // du coup setState n'aura plus d'incidence\n\n    if (e.target.value === \"true\") {\n      result = true;\n    } else {\n      result = false;\n    }\n\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_is_youtube_not_images: result\n      });\n    });\n  };\n\n  var onChangeProject_youtube_link = function onChangeProject_youtube_link(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_youtube_link: e.target.value\n      });\n    });\n  };\n\n  var onChangeProject_images = function onChangeProject_images(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_images: e.target.files\n      }); //pas d'index pcq c'est multifile\n    });\n  };\n\n  var onChangeProject_is_file_format = function onChangeProject_is_file_format(e) {\n    var result = true; //si on passe e.target.value, project_is_file_format pointera sur un objet et non une valeur\n    // du coup setState n'aura plus d'incidence\n\n    if (e.target.value === \"true\") {\n      result = true;\n    } else {\n      result = false;\n    }\n\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_is_file_format: result\n      });\n    });\n  };\n\n  var onChangeProject_release_filename = function onChangeProject_release_filename(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_release_filename: e.target.files[0]\n      });\n    });\n  };\n\n  var onChangeProject_release_url = function onChangeProject_release_url(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_release_url: e.target.value\n      });\n    });\n  }; //------------------------------------ CALL API ----------------------------------------------------------\n\n\n  var saveProject = function saveProject(e) {\n    if (disabledSubmit === false) {\n      setDisabledSubmit(true); //------------- instanciation d'un objet FormData pour envoyer les données à l'API --------------   \n\n      var data = new FormData(); // --> \"content\" : \"multipart/form-data\"\n\n      data.append('project_name', project.project_name);\n      data.append('project_technologies', project.project_technologies);\n      data.append('project_description', project.project_description);\n      data.append('project_thumbnail_filename', project.project_thumbnail_filename);\n      data.append('project_is_youtube_not_images', project.project_is_youtube_not_images);\n      data.append('project_youtube_link', project.project_youtube_link);\n\n      if (project.project_is_youtube_not_images === false) {\n        for (var i = 0; i < project.project_images.length; i++) {\n          // images files\n          data.append(\"project_images\", project.project_images[i]);\n        }\n      }\n\n      data.append('project_is_file_format', project.project_is_file_format);\n      data.append('project_release_filename', project.project_release_filename);\n      data.append('project_release_url', project.project_release_url); //--------------------------------- Request --------------------------------------\n\n      ProjectDataService.create(data).then(function (response) {\n        if (response.status === 200) {\n          console.log(response.data);\n          setProject(function (prevState) {\n            return _objectSpread({}, prevState, {\n              project_is_created: true\n            });\n          }); //SWAL\n\n          ToastDisplayer(false, \"Project created !\");\n        }\n      }).catch(function (e) {\n        if (e.response.status === 422) {\n          // Reset des states pour éviter que certains messages persistent même apres correction\n          setNameValidation({\n            isValid: true,\n            message: \"\"\n          });\n          setTechnologiesValidation({\n            isValid: true,\n            message: \"\"\n          });\n          setDescriptionValidation({\n            isValid: true,\n            message: \"\"\n          });\n          setThumbnailValidation({\n            isValid: true,\n            message: \"\"\n          });\n          setYoutubeLinkValidation({\n            isValid: true,\n            message: \"\"\n          });\n          setImagesValidation({\n            isValid: true,\n            message: \"\"\n          });\n          setReleaseFileValidation({\n            isValid: true,\n            message: \"\"\n          });\n          setReleaseUrlValidation({\n            isValid: true,\n            message: \"\"\n          }); // Gestion des erreurs et ajout au state error\n\n          e.response.data.errors.forEach(function (error) {\n            switch (error.param) {\n              case \"project_name\":\n                setNameValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_technologies\":\n                setTechnologiesValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_description\":\n                setDescriptionValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_thumbnail_filename\":\n                setThumbnailValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_youtube_link\":\n                setYoutubeLinkValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_images\":\n                setImagesValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_release_filename\":\n                setReleaseFileValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_release_url\":\n                setReleaseUrlValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n            }\n          });\n        } else {\n          //SWAL Server error\n          ToastDisplayer(true, \"Internal server error ...\");\n        }\n      });\n      setDisabledSubmit(false);\n    }\n  }; //----------------------------------------------------------- JSX -----------------------------------------------------\n\n\n  return /*#__PURE__*/React.createElement(FormProject, {\n    mode: \"create\",\n    project: project,\n    onChangeProject_name: onChangeProject_name,\n    onChangeProject_technologies: onChangeProject_technologies,\n    onChangeProject_description: onChangeProject_description,\n    onChangeProject_thumbnail_filename: onChangeProject_thumbnail_filename,\n    onChangeProject_is_youtube_not_images: onChangeProject_is_youtube_not_images,\n    onChangeProject_youtube_link: onChangeProject_youtube_link,\n    onChangeProject_images: onChangeProject_images,\n    onChangeProject_is_file_format: onChangeProject_is_file_format,\n    onChangeProject_release_filename: onChangeProject_release_filename,\n    onChangeProject_release_url: onChangeProject_release_url,\n    removeThumbnailPossibility: false,\n    removeImagesPossibility: false,\n    removeReleaseFilePossibility: false,\n    onResetProject_images: null,\n    onResetProject_thumbnail_filename: null,\n    onResetProject_release_filename: null,\n    nameValidation: nameValidation,\n    technologiesValidation: technologiesValidation,\n    descriptionValidation: descriptionValidation,\n    thumbnailValidation: thumbnailValidation,\n    youtubeLinkValidation: youtubeLinkValidation,\n    imagesValidation: imagesValidation,\n    releaseFileValidation: releaseFileValidation,\n    releaseUrlValidation: releaseUrlValidation,\n    saveProject: saveProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 4\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/ricar/Desktop/myPortfolio/myPortofolio/src/components/Project/CreateProject.js"],"names":["React","useState","useEffect","useNavigate","ProjectDataService","App","FormProject","ToastDisplayer","CreateProject","props","navigate","project","project_is_created","isAdmin","disabledSubmit","setDisabledSubmit","project_name","project_technologies","project_description","project_thumbnail_filename","project_is_youtube_not_images","project_youtube_link","project_images","project_is_file_format","project_release_filename","project_release_url","setProject","isValid","message","nameValidation","setNameValidation","technologiesValidation","setTechnologiesValidation","descriptionValidation","setDescriptionValidation","thumbnailValidation","setThumbnailValidation","youtubeLinkValidation","setYoutubeLinkValidation","imagesValidation","setImagesValidation","releaseFileValidation","setReleaseFileValidation","releaseUrlValidation","setReleaseUrlValidation","onChangeProject_name","e","prevState","target","value","onChangeProject_technologies","onChangeProject_description","onChangeProject_thumbnail_filename","files","onChangeProject_is_youtube_not_images","result","onChangeProject_youtube_link","onChangeProject_images","onChangeProject_is_file_format","onChangeProject_release_filename","onChangeProject_release_url","saveProject","data","FormData","append","i","length","create","then","response","status","console","log","catch","errors","forEach","error","param","msg"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\n//Components\r\nimport App from \"../../App\";\r\nimport FormProject from \"./FormProject\";\r\nimport ToastDisplayer from \"../ToastDisplayer\";\r\n\r\nexport default function CreateProject(props) {\r\n\r\n\t//----------------------------REDIRECTION APRES VALIDATION DU FORM ou UNAUTHORIZED-----------------------\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (project.project_is_created) {\r\n      navigate('/Projects');\r\n    }\r\n\r\n    // ----- Check if Admin AND redirect if not-------------\r\n    if (!props.isAdmin)\r\n    {\r\n        navigate('/Projects');\r\n    }\r\n\r\n  });\r\n\r\n  //--------------------------------- State Initial -------------------------------------\r\n\r\n  const [disabledSubmit, setDisabledSubmit] = useState(false); // Bloquage du bouton submit durant process\r\n\r\n\tconst [project,setProject] = useState( //déclare en tant que liste key/value\r\n  { \r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: null,\r\n      project_is_youtube_not_images : true,\r\n      project_youtube_link : \"\",\r\n      project_images: [],\r\n      project_is_file_format: true,\r\n      project_release_filename: null,\r\n      project_release_url: \"\",\r\n      project_is_created: false,\r\n  });\r\n\r\n\tconst [nameValidation, setNameValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [technologiesValidation, setTechnologiesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [descriptionValidation, setDescriptionValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [thumbnailValidation, setThumbnailValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [youtubeLinkValidation, setYoutubeLinkValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [imagesValidation, setImagesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  }) \r\n\r\n  const [releaseFileValidation, setReleaseFileValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [releaseUrlValidation, setReleaseUrlValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n// ------------------------- Evenementiel (modification du state en fonction des inputs) -------------------------\r\n\r\n  const onChangeProject_name = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_name : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_technologies = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_technologies : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_description = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_description : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_thumbnail_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : e.target.files[0] } //pcq c'est un fichier\r\n    });\r\n  }\r\n\r\n  const onChangeProject_is_youtube_not_images = (e) => {\r\n    let result = true; \r\n    //si on passe e.target.value, project_is_file_format pointera sur un objet et non une valeur\r\n    // du coup setState n'aura plus d'incidence\r\n    if (e.target.value === \"true\")\r\n    {\r\n      result = true;\r\n    }\r\n    else {\r\n      result = false;\r\n    }\r\n    setProject(prevState => {\r\n      return { ...prevState, project_is_youtube_not_images : result }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_youtube_link = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_youtube_link : e.target.value } \r\n    });\r\n  }\r\n\r\n  const onChangeProject_images = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_images : e.target.files } //pas d'index pcq c'est multifile\r\n    });\r\n  }\r\n\r\n  const onChangeProject_is_file_format = (e) => {\r\n    let result = true; \r\n    //si on passe e.target.value, project_is_file_format pointera sur un objet et non une valeur\r\n    // du coup setState n'aura plus d'incidence\r\n    if (e.target.value === \"true\")\r\n    {\r\n      result = true;\r\n    }\r\n    else {\r\n      result = false;\r\n    }\r\n    setProject(prevState => {\r\n      return { ...prevState, project_is_file_format : result }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : e.target.files[0]  }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_url = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_url : e.target.value }\r\n    });\r\n  } \r\n\r\n//------------------------------------ CALL API ----------------------------------------------------------\r\n\r\n const saveProject = (e) => {\r\n\r\n    if (disabledSubmit === false) {\r\n      setDisabledSubmit(true);\r\n\r\n      //------------- instanciation d'un objet FormData pour envoyer les données à l'API --------------   \r\n      let data = new FormData(); // --> \"content\" : \"multipart/form-data\"\r\n      data.append('project_name', project.project_name);\r\n      data.append('project_technologies', project.project_technologies);\r\n      data.append('project_description', project.project_description);\r\n      data.append('project_thumbnail_filename', project.project_thumbnail_filename);\r\n      data.append('project_is_youtube_not_images', project.project_is_youtube_not_images);\r\n      data.append('project_youtube_link', project.project_youtube_link);\r\n      if (project.project_is_youtube_not_images === false)\r\n      {\r\n        for (let i = 0; i < project.project_images.length; i++) { // images files\r\n          data.append(`project_images`, project.project_images[i]);\r\n        }\r\n      }\r\n      data.append('project_is_file_format', project.project_is_file_format);\r\n      data.append('project_release_filename', project.project_release_filename);\r\n      data.append('project_release_url', project.project_release_url);\r\n\r\n      //--------------------------------- Request --------------------------------------\r\n      ProjectDataService.create(data)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          console.log(response.data);\r\n          setProject(prevState => {\r\n            return { ...prevState, project_is_created : true }\r\n          });\r\n\r\n          //SWAL\r\n          ToastDisplayer(false, \"Project created !\");\r\n\r\n        }\r\n      })\r\n      .catch(e => {\r\n        if (e.response.status === 422) {\r\n\r\n          // Reset des states pour éviter que certains messages persistent même apres correction\r\n          setNameValidation({isValid : true, message : \"\"});\r\n          setTechnologiesValidation({isValid : true, message : \"\"});\r\n          setDescriptionValidation({isValid : true, message : \"\"});\r\n          setThumbnailValidation({isValid : true, message : \"\"});\r\n          setYoutubeLinkValidation({isValid : true, message : \"\"});\r\n          setImagesValidation({isValid: true, message:\"\"});\r\n          setReleaseFileValidation({isValid : true, message : \"\"});\r\n          setReleaseUrlValidation({isValid : true, message : \"\"}) ;\r\n          // Gestion des erreurs et ajout au state error\r\n          e.response.data.errors.forEach(error => {\r\n            switch (error.param) { \r\n              case \"project_name\":\r\n                setNameValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_technologies\":\r\n                setTechnologiesValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_description\":\r\n                setDescriptionValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_thumbnail_filename\":\r\n                setThumbnailValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_youtube_link\":\r\n                setYoutubeLinkValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_images\":\r\n                setImagesValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_release_filename\":\r\n                setReleaseFileValidation({isValid : false, message : error.msg});\r\n                break;\r\n              case \"project_release_url\":\r\n                setReleaseUrlValidation({isValid : false, message : error.msg});\r\n                break;\r\n            }          \r\n          });\r\n        }\r\n        else \r\n        {\r\n          //SWAL Server error\r\n          ToastDisplayer(true, \"Internal server error ...\");\r\n        } \r\n      });\r\n\r\n      setDisabledSubmit(false);\r\n    }\r\n  } \r\n    \r\n\r\n//----------------------------------------------------------- JSX -----------------------------------------------------\r\n\r\n\treturn (\r\n\r\n\t\t\t<FormProject\r\n\t\t\t\tmode=\"create\"\r\n\t\t\t\tproject= {project}\r\n\r\n\t\t\t\tonChangeProject_name = {onChangeProject_name}\r\n\t  \t\tonChangeProject_technologies = {onChangeProject_technologies}\r\n\t  \t\tonChangeProject_description = {onChangeProject_description}\r\n\t  \t\tonChangeProject_thumbnail_filename = {onChangeProject_thumbnail_filename}\r\n        onChangeProject_is_youtube_not_images = {onChangeProject_is_youtube_not_images}\r\n        onChangeProject_youtube_link = {onChangeProject_youtube_link}\r\n\t  \t\tonChangeProject_images = {onChangeProject_images}\r\n\t  \t\tonChangeProject_is_file_format = {onChangeProject_is_file_format}\r\n\t  \t\tonChangeProject_release_filename = {onChangeProject_release_filename}\r\n\t  \t\tonChangeProject_release_url = {onChangeProject_release_url}\r\n\r\n\t  \t\tremoveThumbnailPossibility = {false}\r\n\t  \t\tremoveImagesPossibility = {false} \r\n\t  \t\tremoveReleaseFilePossibility = {false}\r\n\t  \t\tonResetProject_images = {null}\r\n\t  \t\tonResetProject_thumbnail_filename = {null} \r\n\t  \t\tonResetProject_release_filename = {null}\r\n\r\n\t\t\t\tnameValidation = {nameValidation}\r\n\t\t\t\ttechnologiesValidation = {technologiesValidation}\r\n\t\t\t\tdescriptionValidation = {descriptionValidation}\r\n\t\t\t\tthumbnailValidation = {thumbnailValidation}\r\n        youtubeLinkValidation = {youtubeLinkValidation}\r\n\t\t\t\timagesValidation = {imagesValidation}\r\n\t\t\t\treleaseFileValidation = {releaseFileValidation}\r\n\t\t\t\treleaseUrlValidation = {releaseUrlValidation}\r\n\r\n\t\t\t\tsaveProject = {saveProject}\r\n\t\t\t>\r\n\t\t\t</FormProject>\r\n\r\n\t);\r\n}"]},"metadata":{},"sourceType":"module"}