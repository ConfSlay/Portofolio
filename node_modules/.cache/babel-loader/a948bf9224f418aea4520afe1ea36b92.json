{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\ricar\\\\Desktop\\\\myPortfolio\\\\myPortofolio\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ricar\\\\Desktop\\\\myPortfolio\\\\myPortofolio\\\\src\\\\components\\\\Project\\\\GetAllProject.js\";\nimport React, { useState, useEffect } from 'react'; //React pour JSX\n\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\nimport ProjectDataService from \"../../services/project.service\";\nimport AuthService from \"../../services/auth.service\";\nimport App from \"../../App\";\nimport ToastDisplayer from \"../ToastDisplayer\";\nimport ButtonWithBorder from \"./ButtonWithBorder\";\nexport default function GetAllProject(props) {\n  var _this = this;\n\n  //----------------------- Initial State -------------------------\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      projects = _useState2[0],\n      setProjects = _useState2[1]; //Déclare projects en tant qu'array vu qu'on va recevoir un tableau d'objets en json\n\n\n  var navigate = useNavigate(); // useEffect avec ,[])  = quand le composant est inétgré dans le DOM \n\n  useEffect(function () {\n    retrieveProjects();\n  }, []); //notice the empty array here so it only happens once\n\n  var retrieveProjects = function retrieveProjects() {\n    ProjectDataService.getAll().then(function (response) {\n      setProjects(response.data);\n    }).catch(function (e) {\n      console.log(e);\n    });\n  };\n\n  function deleteProject(id) {\n    //SWAL \n    Swal.fire({\n      position: 'center',\n      icon: 'warning',\n      title: 'Do you really want to delete this project ?',\n      showCancelButton: true,\n      showConfirmButton: true,\n      confirmButtonText: 'Oui',\n      cancelButtonText: \"Non\",\n      iconColor: 'rgb(232,16,41)',\n      confirmButtonColor: \"rgb(232,16,41)\",\n      cancelButtonColor: \"rgb(61,61,61)\",\n      background: 'rgb(33,33,33)',\n      color: 'rgb(255,255,255)'\n    }).then(function (result) {\n      if (result.isConfirmed) {\n        //DELETE PROJECT\n        ProjectDataService.delete(id).then(function (response) {\n          setProjects(projects.filter(function (projects) {\n            return projects.project_id !== id;\n          })); //enleve le project supprimé du state pour que ca refresh\n\n          ToastDisplayer(false, \"Project deleted !\");\n        }).catch(function (e) {\n          ToastDisplayer(true, \"An error occured ...\");\n          console.log(e);\n        });\n      }\n    });\n  }\n\n  function redirectToUpdate(id) {\n    navigate(\"/Project/update/\" + id);\n  } // ----------------- JSX ---------------\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper-project\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, projects && projects.map(function (project) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"item-project\",\n      key: project.project_id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, props.isAdmin ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons-project\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"deleteProjectButton-project alertDisplayerDelete_JS\",\n      onClick: deleteProject.bind(_this, project.project_id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }\n    }, \"Delete project\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"updateProjectButton-project\",\n      onClick: redirectToUpdate.bind(_this, project.project_id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, \"Update project\")) : null, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title-project\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, project.project_name), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tag-project\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, project.project_technologies), /*#__PURE__*/React.createElement(\"img\", {\n      className: \"image-project\",\n      src: ProjectDataService.getUploadsFiles + project.project_thumbnail_filename,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ButtonWithBorder, {\n      ButtonValue: \"Discover\",\n      ButtonTo: \"/Project/\" + project.project_id,\n      isInApp: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }));\n  }), props.isAdmin ? /*#__PURE__*/React.createElement(Link, {\n    className: \"buttonAdd-project\",\n    to: \"/Project/create\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, \"Add new project\") : null);\n}","map":{"version":3,"sources":["C:/Users/ricar/Desktop/myPortfolio/myPortofolio/src/components/Project/GetAllProject.js"],"names":["React","useState","useEffect","Link","useNavigate","Swal","ProjectDataService","AuthService","App","ToastDisplayer","ButtonWithBorder","GetAllProject","props","projects","setProjects","navigate","retrieveProjects","getAll","then","response","data","catch","e","console","log","deleteProject","id","fire","position","icon","title","showCancelButton","showConfirmButton","confirmButtonText","cancelButtonText","iconColor","confirmButtonColor","cancelButtonColor","background","color","result","isConfirmed","delete","filter","project_id","redirectToUpdate","map","project","isAdmin","bind","project_name","project_technologies","getUploadsFiles","project_thumbnail_filename"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'; //React pour JSX\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport App from \"../../App\";\r\nimport ToastDisplayer from \"../ToastDisplayer\";\r\nimport ButtonWithBorder from \"./ButtonWithBorder\";\r\n \r\nexport default function GetAllProject(props) {\r\n\r\n  //----------------------- Initial State -------------------------\r\n  const [projects,setProjects] = useState([]); //Déclare projects en tant qu'array vu qu'on va recevoir un tableau d'objets en json\r\n  const navigate = useNavigate();\r\n\r\n // useEffect avec ,[])  = quand le composant est inétgré dans le DOM \r\n  useEffect(()=>{ \r\n\r\n    retrieveProjects(); \r\n\r\n  },[]) //notice the empty array here so it only happens once\r\n\r\n  const retrieveProjects = () => {\r\n    ProjectDataService.getAll()\r\n      .then(response => {\r\n        setProjects(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e); \r\n      });\r\n  }\r\n\r\n  function deleteProject(id){ \r\n\r\n    //SWAL \r\n    Swal.fire({\r\n      position: 'center',\r\n      icon: 'warning',\r\n      title: 'Do you really want to delete this project ?',\r\n      showCancelButton: true,\r\n      showConfirmButton: true,\r\n      confirmButtonText: 'Oui',\r\n      cancelButtonText: \"Non\",\r\n      iconColor : 'rgb(232,16,41)',\r\n      confirmButtonColor: \"rgb(232,16,41)\",\r\n      cancelButtonColor: \"rgb(61,61,61)\",\r\n      background: 'rgb(33,33,33)',\r\n      color : 'rgb(255,255,255)'\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        //DELETE PROJECT\r\n        ProjectDataService.delete(id)      \r\n        .then(response => {\r\n          setProjects(projects.filter(projects => projects.project_id !== id)); //enleve le project supprimé du state pour que ca refresh\r\n          ToastDisplayer(false,\"Project deleted !\");\r\n        })\r\n        .catch(e => {\r\n          ToastDisplayer(true,\"An error occured ...\");\r\n          console.log(e);\r\n        });\r\n          \r\n      }\r\n    });\r\n  }\r\n\r\n  function redirectToUpdate(id){\r\n    navigate(\"/Project/update/\"+id);\r\n  }\r\n  \r\n\r\n\r\n  // ----------------- JSX ---------------\r\n  return (\r\n    <div className=\"wrapper-project\">\r\n                 \r\n      {projects && projects.map((project) => (\r\n\r\n        <div className=\"item-project\" key={project.project_id}>\r\n\r\n          { props.isAdmin ? \r\n\r\n            <div className=\"buttons-project\"> \r\n              \r\n              <button className=\"deleteProjectButton-project alertDisplayerDelete_JS\" \r\n                onClick={deleteProject.bind(this, project.project_id)}\r\n              >Delete project</button>\r\n\r\n              <button className=\"updateProjectButton-project\" \r\n                onClick={redirectToUpdate.bind(this, project.project_id)}\r\n              >Update project</button> \r\n\r\n            </div>\r\n\r\n          :\r\n            null\r\n          }\r\n   \r\n\r\n          <span className=\"title-project\">{project.project_name}</span>\r\n\r\n          <span className=\"tag-project\">{project.project_technologies}</span>\r\n\r\n          <img \r\n            className=\"image-project\" \r\n            src={ProjectDataService.getUploadsFiles+project.project_thumbnail_filename}>\r\n          </img>\r\n          \r\n          <ButtonWithBorder \r\n            ButtonValue = \"Discover\"\r\n            ButtonTo={\"/Project/\" + project.project_id}\r\n            isInApp={true}>\r\n          </ButtonWithBorder>\r\n          \r\n        </div>\r\n\r\n      ))}\r\n\r\n      { props.isAdmin ?\r\n\r\n        <Link className=\"buttonAdd-project\" to=\"/Project/create\">Add new project</Link>\r\n\r\n      :\r\n        null\r\n      }\r\n              \r\n    </div>\r\n  );\r\n}\r\n \r\n "]},"metadata":{},"sourceType":"module"}