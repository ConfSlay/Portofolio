{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\ricar\\\\Desktop\\\\nodejs-website\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\ricar\\\\Desktop\\\\nodejs-website\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\ricar\\\\Desktop\\\\nodejs-website\\\\client\\\\src\\\\components\\\\Project\\\\FormProject.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport ProjectDataService from \"../../services/project.service\";\nimport App from \"../../App\";\nexport default function FormProject(props) {\n  //----------------------------REDIRECTION APRES VALIDATION du form-----------------------\n  var navigate = useNavigate();\n  useEffect(function () {\n    //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\n    if (project.project_is_created_or_updated) {\n      navigate('/Projects');\n    }\n  }); //----------------------------State initial ------------------------------\n\n  var _useState = useState( //déclare en tant que liste key/value\n  {\n    project_id: null,\n    project_name: \"\",\n    project_technologies: \"\",\n    project_description: \"\",\n    project_thumbnail_filename: \"\",\n    project_is_file_format: true,\n    project_release_filename: \"\",\n    project_release_url: \"\",\n    project_is_created_or_updated: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      project = _useState2[0],\n      setProject = _useState2[1];\n\n  var _useState3 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nameValidation = _useState4[0],\n      setNameValidation = _useState4[1];\n\n  var _useState5 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      technologiesValidation = _useState6[0],\n      setTechnologiesValidation = _useState6[1];\n\n  var _useState7 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      descriptionValidation = _useState8[0],\n      setDescriptionValidation = _useState8[1];\n\n  var _useState9 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      thumbnailValidation = _useState10[0],\n      setThumbnailValidation = _useState10[1];\n\n  var _useState11 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      releaseFileValidation = _useState12[0],\n      setReleaseFileValidation = _useState12[1];\n\n  var _useState13 = useState({\n    isValid: true,\n    message: \"\"\n  }),\n      _useState14 = _slicedToArray(_useState13, 2),\n      releaseUrlValidation = _useState14[0],\n      setReleaseUrlValidation = _useState14[1]; // --------------- actualisation du state pour MODE UPDATE (herité avec props) -------------------------------\n\n\n  var _useParams = useParams(),\n      id = _useParams.id; //Retrouve le paramètre id\n\n\n  useEffect(function () {\n    //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\n    if (props.mode === \"update\") {\n      getProject(id);\n    }\n  }, []); //notice the empty array here so it only happens once \n\n  var getProject = function getProject(id) {\n    ProjectDataService.get(id).then(function (response) {\n      setProject(response.data);\n      console.log(response.data);\n    }).catch(function (e) {\n      console.log(e);\n    });\n  }; // ------------------------- Evenementiel (modification du state en fonction des inputs) -------------------------\n  // Event de modifications du formulaires\n\n\n  var onChangeProject_name = function onChangeProject_name(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_name: e.target.value\n      });\n    });\n  };\n\n  var onChangeProject_technologies = function onChangeProject_technologies(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_technologies: e.target.value\n      });\n    });\n  };\n\n  var onChangeProject_description = function onChangeProject_description(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_description: e.target.value\n      });\n    });\n  };\n\n  var onChangeProject_thumbnail_filename = function onChangeProject_thumbnail_filename(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_thumbnail_filename: e.target.value\n      });\n    });\n  };\n\n  var onChangeProject_is_file_format = function onChangeProject_is_file_format(e) {\n    var result = true;\n\n    if (e.target.value === \"true\") {\n      result = true;\n      project.project_release_url = \"\";\n    } else {\n      result = false;\n      project.project_release_filename = \"\";\n    }\n\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_is_file_format: result\n      });\n    });\n  };\n\n  var onChangeProject_release_filename = function onChangeProject_release_filename(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_release_filename: e.target.value\n      });\n    });\n  };\n\n  var onChangeProject_release_url = function onChangeProject_release_url(e) {\n    setProject(function (prevState) {\n      return _objectSpread({}, prevState, {\n        project_release_url: e.target.value\n      });\n    });\n  }; // ----------------------------------- Submit du form et Reponse du server ----------------------\n\n\n  var saveProject = function saveProject(e) {\n    var data = {\n      project_name: project.project_name,\n      project_technologies: project.project_technologies,\n      project_description: project.project_description,\n      project_thumbnail_filename: project.project_thumbnail_filename,\n      project_is_file_format: project.project_is_file_format,\n      project_release_filename: project.project_release_filename,\n      project_release_url: project.project_release_url\n    };\n\n    if (props.mode === \"create\") {\n      //mode create\n      ProjectDataService.create(data).then(function (response) {\n        if (response.status === 200) {\n          console.log(response.data);\n          setProject(function (prevState) {\n            return _objectSpread({}, prevState, {\n              project_is_created_or_updated: true\n            });\n          });\n        }\n      }).catch(function (e) {\n        console.log(e);\n      });\n    } else {\n      //UPDATE\n      ProjectDataService.update(id, data).then(function (response) {\n        setProject(function (prevState) {\n          return _objectSpread({}, prevState, {\n            project_is_created_or_updated: true\n          });\n        });\n      }).catch(function (e) {\n        if (e.response.status === 422) {\n          // Reset des states pour éviter que certains messages persistent même apres correction\n          setNameValidation({\n            isValid: true,\n            message: \"\"\n          });\n          setTechnologiesValidation({\n            isValid: true,\n            message: \"\"\n          });\n          setDescriptionValidation({\n            isValid: true,\n            message: \"\"\n          });\n          setThumbnailValidation({\n            isValid: true,\n            message: \"\"\n          });\n          setReleaseFileValidation({\n            isValid: true,\n            message: \"\"\n          });\n          setReleaseUrlValidation({\n            isValid: true,\n            message: \"\"\n          }); // Gestion des erreurs et ajout au state error\n\n          e.response.data.errors.forEach(function (error) {\n            switch (error.param) {\n              case \"project_name\":\n                setNameValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_technologies\":\n                setTechnologiesValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_description\":\n                setDescriptionValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_thumbnail_filename\":\n                setThumbnailValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_release_filename\":\n                setReleaseFileValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n\n              case \"project_release_url\":\n                setReleaseUrlValidation({\n                  isValid: false,\n                  message: error.msg\n                });\n                break;\n            }\n          });\n        } else {//SWAL Server error\n        }\n      });\n    }\n  }; // -------------------------------- JSX -----------------------------------------\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(App, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, \"Project Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"textFields-form small\",\n    id: \"project_name\",\n    value: project.project_name,\n    onChange: onChangeProject_name,\n    name: \"project_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }), nameValidation.isValid === false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, nameValidation.message) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, \"Source and target technologies\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"textFields-form\",\n    id: \"project_technologies\",\n    value: project.project_technologies,\n    onChange: onChangeProject_technologies,\n    name: \"project_technologies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }), technologiesValidation.isValid === false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, technologiesValidation.message) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"textArea-form\",\n    id: \"project_description\",\n    value: project.project_description,\n    onChange: onChangeProject_description,\n    name: \"project_description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }), descriptionValidation.isValid === false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }, descriptionValidation.message) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, \"Thumbnail\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, \"Format\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"FormatChoice_JS\",\n    id: \"project_is_file_format\",\n    value: project.project_is_file_format,\n    onChange: onChangeProject_is_file_format,\n    name: \"project_is_file_format\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  }, \"File\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  }, \"Link\"))), project.project_is_file_format === true ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-form fileInput_JS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 15\n    }\n  }, \"Fichier\"), releaseFileValidation.isValid === false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  }, releaseFileValidation.message) : null) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item-form urlInput_JS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  }, \"Link\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"textFields-form\",\n    id: \"project_release_url\",\n    value: project.project_release_url,\n    onChange: onChangeProject_release_url,\n    name: \"project_release_url\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 15\n    }\n  }), releaseUrlValidation.isValid === false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMessage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 17\n    }\n  }, releaseUrlValidation.message) : null), \" \", props.mode === \"create\" ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"item-form button-form\",\n    onClick: saveProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }\n  }, \"Create Project\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"item-form button-form\",\n    onClick: saveProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, \"Update Project\"), \" \")));\n}","map":{"version":3,"sources":["C:/Users/ricar/Desktop/nodejs-website/client/src/components/Project/FormProject.js"],"names":["React","useState","useEffect","useNavigate","useParams","ProjectDataService","App","FormProject","props","navigate","project","project_is_created_or_updated","project_id","project_name","project_technologies","project_description","project_thumbnail_filename","project_is_file_format","project_release_filename","project_release_url","setProject","isValid","message","nameValidation","setNameValidation","technologiesValidation","setTechnologiesValidation","descriptionValidation","setDescriptionValidation","thumbnailValidation","setThumbnailValidation","releaseFileValidation","setReleaseFileValidation","releaseUrlValidation","setReleaseUrlValidation","id","mode","getProject","get","then","response","data","console","log","catch","e","onChangeProject_name","prevState","target","value","onChangeProject_technologies","onChangeProject_description","onChangeProject_thumbnail_filename","onChangeProject_is_file_format","result","onChangeProject_release_filename","onChangeProject_release_url","saveProject","create","status","update","errors","forEach","error","param","msg"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ProjectDataService from \"../../services/project.service\";\r\nimport App from \"../../App\"\r\n\r\nexport default function FormProject(props) {\r\n\r\n  //----------------------------REDIRECTION APRES VALIDATION du form-----------------------\r\n  const navigate = useNavigate();\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (project.project_is_created_or_updated) {\r\n      navigate('/Projects');\r\n    }\r\n  });\r\n\r\n  //----------------------------State initial ------------------------------\r\n  const [project,setProject] = useState( //déclare en tant que liste key/value\r\n    { \r\n      project_id: null,\r\n      project_name: \"\",\r\n      project_technologies: \"\",\r\n      project_description: \"\",\r\n      project_thumbnail_filename: \"\",\r\n      project_is_file_format: true,\r\n      project_release_filename: \"\",\r\n      project_release_url: \"\",\r\n      project_is_created_or_updated: false,\r\n    }\r\n  );\r\n\r\n  const [nameValidation, setNameValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [technologiesValidation, setTechnologiesValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [descriptionValidation, setDescriptionValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [thumbnailValidation, setThumbnailValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [releaseFileValidation, setReleaseFileValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n  const [releaseUrlValidation, setReleaseUrlValidation] = useState({\r\n    isValid : true,\r\n    message : \"\"\r\n  })\r\n\r\n\r\n\r\n// --------------- actualisation du state pour MODE UPDATE (herité avec props) -------------------------------\r\n  const { id } = useParams(); //Retrouve le paramètre id\r\n  useEffect(() => { //si le composant a été updated d'une manière quelconque (state) alors ca s'execute\r\n    if (props.mode === \"update\")\r\n    {      \r\n      getProject(id);\r\n    }\r\n  },[]) //notice the empty array here so it only happens once \r\n\r\n  const getProject = (id) => {\r\n    ProjectDataService.get(id)\r\n      .then(response => {\r\n        setProject(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n// ------------------------- Evenementiel (modification du state en fonction des inputs) -------------------------\r\n\r\n  // Event de modifications du formulaires\r\n  const onChangeProject_name = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_name : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_technologies = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_technologies : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_description = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_description : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_thumbnail_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_thumbnail_filename : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_is_file_format = (e) => {\r\n    let result = true;\r\n    if (e.target.value === \"true\")\r\n    {\r\n      result = true;\r\n      project.project_release_url = \"\";\r\n    }\r\n    else {\r\n      result = false;\r\n      project.project_release_filename = \"\";\r\n    }\r\n    setProject(prevState => {\r\n      return { ...prevState, project_is_file_format : result }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_filename = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_filename : e.target.value }\r\n    });\r\n  }\r\n\r\n  const onChangeProject_release_url = (e) => {\r\n    setProject(prevState => {\r\n      return { ...prevState, project_release_url : e.target.value }\r\n    });\r\n  } \r\n\r\n// ----------------------------------- Submit du form et Reponse du server ----------------------\r\n  const saveProject = (e) => {\r\n    let data = {\r\n      project_name: project.project_name,\r\n      project_technologies: project.project_technologies,\r\n      project_description: project.project_description,\r\n      project_thumbnail_filename: project.project_thumbnail_filename,\r\n      project_is_file_format: project.project_is_file_format,\r\n      project_release_filename: project.project_release_filename,\r\n      project_release_url: project.project_release_url\r\n    };\r\n    if ( props.mode === \"create\") { //mode create\r\n      ProjectDataService.create(data)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          console.log(response.data);\r\n          setProject(prevState => {\r\n            return { ...prevState, project_is_created_or_updated : true }\r\n          });\r\n        }\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n    }\r\n    else { //UPDATE\r\n      ProjectDataService.update(id,data)\r\n        .then(response => {\r\n          setProject(prevState => {\r\n            return { ...prevState, project_is_created_or_updated : true }\r\n          });\r\n        })\r\n        .catch(e => {\r\n          if (e.response.status === 422) {\r\n            // Reset des states pour éviter que certains messages persistent même apres correction\r\n            setNameValidation({isValid : true, message : \"\"})\r\n            setTechnologiesValidation({isValid : true, message : \"\"})\r\n            setDescriptionValidation({isValid : true, message : \"\"})\r\n            setThumbnailValidation({isValid : true, message : \"\"})\r\n            setReleaseFileValidation({isValid : true, message : \"\"})\r\n            setReleaseUrlValidation({isValid : true, message : \"\"}) \r\n            // Gestion des erreurs et ajout au state error\r\n            e.response.data.errors.forEach(error => {\r\n              switch (error.param) {\r\n                case \"project_name\":\r\n                  setNameValidation({isValid : false, message : error.msg})\r\n                  break;\r\n                case \"project_technologies\":\r\n                  setTechnologiesValidation({isValid : false, message : error.msg})\r\n                  break;\r\n                case \"project_description\":\r\n                  setDescriptionValidation({isValid : false, message : error.msg})\r\n                  break;\r\n                case \"project_thumbnail_filename\":\r\n                  setThumbnailValidation({isValid : false, message : error.msg})\r\n                  break;\r\n                case \"project_release_filename\":\r\n                  setReleaseFileValidation({isValid : false, message : error.msg})\r\n                  break;\r\n                case \"project_release_url\":\r\n                  setReleaseUrlValidation({isValid : false, message : error.msg})\r\n                  break;\r\n              }\r\n            });\r\n           \r\n          }\r\n          else {\r\n            //SWAL Server error\r\n          }  \r\n        });\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n// -------------------------------- JSX -----------------------------------------\r\n  return (\r\n    <>\r\n      <App></App>\r\n      <div className=\"wrapper-form\">\r\n        <div className=\"box-form\">\r\n       \r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Project Name</div>\r\n            <input \r\n              type=\"text\"\r\n              className=\"textFields-form small\" \r\n              id=\"project_name\" \r\n              value={project.project_name} \r\n              onChange={onChangeProject_name} \r\n              name=\"project_name\"\r\n            />\r\n            { nameValidation.isValid === false ?\r\n              <div className=\"errorMessage\">{nameValidation.message}</div>\r\n            : null }\r\n          </div> \r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Source and target technologies</div>\r\n            <input \r\n              type=\"text\"\r\n              className=\"textFields-form\" \r\n              id=\"project_technologies\"\r\n              value={project.project_technologies} \r\n              onChange={onChangeProject_technologies} \r\n              name=\"project_technologies\"\r\n            /> \r\n            { technologiesValidation.isValid === false ?\r\n              <div className=\"errorMessage\">{technologiesValidation.message}</div>\r\n            : null }\r\n          </div>\r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Description</div>\r\n            <textarea\r\n              className=\"textArea-form\" \r\n              id=\"project_description\"\r\n              value={project.project_description} \r\n              onChange={onChangeProject_description} \r\n              name=\"project_description\">\r\n            </textarea> \r\n            { descriptionValidation.isValid === false ?\r\n              <div className=\"errorMessage\">{descriptionValidation.message}</div>\r\n            : null }\r\n          </div>\r\n\r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Thumbnail</div>\r\n            {/* className='files-form' }\r\n            { thumbnailValidation.isValid === false ?\r\n              <div className=\"errorMessage\">{thumbnailValidation.message}</div>\r\n            : null }\r\n          </div>\r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Presentation pictures</div>\r\n            {/* className='files-form' */}\r\n          </div> \r\n\r\n          <div className=\"item-form\">\r\n            <div className=\"label-form\">Format</div>\r\n            <select \r\n              className='FormatChoice_JS'\r\n              id=\"project_is_file_format\"  \r\n              value={project.project_is_file_format} \r\n              onChange={onChangeProject_is_file_format} \r\n              name=\"project_is_file_format\">\r\n                <option value=\"true\">File</option>\r\n                <option value=\"false\">Link</option>\r\n            </select>\r\n          </div>\r\n\r\n        {/* Affichage dynamique du formulaire */}\r\n          { project.project_is_file_format === true ?\r\n\r\n            <div className=\"item-form fileInput_JS\">\r\n              <div className=\"label-form\">Fichier</div>  \r\n              {/* className='files-form' */}\r\n              { releaseFileValidation.isValid === false ?\r\n                <div className=\"errorMessage\">{releaseFileValidation.message}</div>\r\n              : null }\r\n            </div>\r\n\r\n          :\r\n\r\n            <div className=\"item-form urlInput_JS\">\r\n              <div className=\"label-form\">Link</div>\r\n              <input \r\n                type=\"text\"\r\n                className=\"textFields-form\" \r\n                id=\"project_release_url\"\r\n                value={project.project_release_url} \r\n                onChange={onChangeProject_release_url} \r\n                name=\"project_release_url\"\r\n              />\r\n              { releaseUrlValidation.isValid === false ?\r\n                <div className=\"errorMessage\">{releaseUrlValidation.message}</div>\r\n              : null } \r\n            </div>\r\n\r\n          } {/*end if*/}\r\n\r\n        {/* changement du noeud texte du bouton submit en fonction de update ou create */}\r\n          { props.mode === \"create\" ?\r\n          <button className=\"item-form button-form\" onClick={saveProject}>Create Project</button>\r\n          :\r\n          <button className=\"item-form button-form\" onClick={saveProject}>Update Project</button>\r\n          } {/*end if*/}\r\n \r\n        </div>\r\n    </div>\r\n  </>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}